{"version":3,"sources":["views/schools/enquiry/index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","SchoolEnquiry","classes","useStyles","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","getAllSchoolEnquiryData","useSelector","state","school","newData","content","totalCount","totalElements","useEffect","getAllSchoolEnquiry","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SchoolIcon","viewIcon","pageTitle","Paper","elevation","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","TableBody","map","row","index","name","schoolName","mobile","email","designation","address","style","textAlign","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","target","value","sx","marginBottom"],"mappings":"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","file":"static/js/98.92be1e54.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { getAllSchoolEnquiry } from '../../../store/actions/SchoolActions';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination\n} from '@material-ui/core';\nimport SchoolIcon from '@material-ui/icons/School';\nimport useStyles from '../../ViewTableStyles';\nimport MainCard from './../../../ui-component/cards/MainCard';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\n\nexport default function SchoolEnquiry() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n\n    const { getAllSchoolEnquiryData } = useSelector((state) => state?.school);\n    const newData = getAllSchoolEnquiryData?.content;\n    const totalCount = getAllSchoolEnquiryData?.totalElements;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    useEffect(() => {\n        dispatch(getAllSchoolEnquiry(rowsPerPage, page + 1));\n    }, [rowsPerPage, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SchoolIcon className={classes.viewIcon} />\n                    {<span className={classes.pageTitle}>&nbsp; School Enquiries</span>}\n                </div>\n                <Paper elevation={5} className={classes.root}>\n\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Name </TableCell>\n                                    <TableCell> School Name </TableCell>\n                                    <TableCell> Mobile </TableCell>\n                                    <TableCell> Email </TableCell>\n                                    <TableCell> Designation </TableCell>\n                                    <TableCell> Address </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell> {row?.name || '-'} </TableCell>\n                                            <TableCell> {row?.schoolName} </TableCell>\n                                            <TableCell> {row?.mobile || '-'} </TableCell>\n                                            <TableCell> {row?.email} </TableCell>\n                                            <TableCell> {row?.designation} </TableCell>\n                                            <TableCell> {row?.address} </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={totalCount}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}