{"version":3,"sources":["views/students/student-profile/index.js","views/user-management/profile/AddProfileModal.js"],"names":["useStyles","makeStyles","theme","titleContainer","background","palette","primary","main","padding","borderRadius","marginBottom","pageTitle","fontSize","color","paper","fontWeight","viewIcon","verticalAlign","label","width","textfield","select","btnProfile","height","edit","backgroundColor","marginTop","marginRight","position","delete","span","error","nameEmail","_defineProperty","display","justifyContent","breakpoints","down","validationSchema","yup","firstName","required","lastName","email","mobile","matches","StudentProfile","_ref","active","_getUserProfileData$u","dispatch","useDispatch","classes","useParams","id","useUserRole","roleList","_useSelector","useSelector","state","userProfile","loggedUserProfile","loading","getUserProfileData","addUser","localProfileId","Cookies","get","_useState","useState","_useState2","_slicedToArray","isEditable","setEditable","_useState3","_useState4","file","setFile","_useState5","_useState6","displayImage","setDisplayImage","_useSelector3","school","getAllSchoolData","getSchoolData","schoolList","_useState7","content","_useState8","openModal","setModal","_useState9","_useState10","isEditData","setEditData","console","log","initialValues","profileId","classAndSection","schoolId","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","setValue","switchProfile","watch","useEffect","_Object$keys","Object","keys","length","profilePictureUrl","token","getLoggedUserProfile","switchUserProfile","getUserProfile","ProfileUpload","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","wrap","_context","prev","next","FormData","append","profileUpload","then","res","setMessage","message","window","location","reload","catch","_error$data","_error$data2","data","stop","apply","arguments","ProfileDelete","_ref3","_callee2","_context2","profileDelete","getAllSchool","getSchoolList","getSchool","_jsxs","_Fragment","children","_jsx","BackDropLoader","isOpen","Grid","item","container","xs","sm","md","className","card","Card","infoCard","MainCard","Person","paddingLeft","rowSpacing","name","type","onChange","event","URL","createObjectURL","target","files","style","alignSelf","htmlFor","IconButton","component","Avatar","src","alignItems","Button","variant","onClick","e","Edit","cursor","FormProvider","onSubmit","payload","updateLoggedProfile","spacing","RHFTextField","startAdornment","InputAdornment","AccountCircle","disabled","PhoneAndroidOutlined","Email","role","value","RHFSelect","map","index","nameBranch","boxShadow","marginLeft","AddProfile","open","onClose","userId","MyAddress","addProfileSchema","status","dob","STATUS_ITEM","STATUS_ITEMS","props","isUserRole","default","comments","adminComment","hide","Dialog","maxWidth","dialog","DialogTitle","dialogTitle","dialogTitleChild","Typography","Link","to","CloseIcon","closeIcon","modifiedPayload","updateProfile","viewProfileById","AddProfiles","DialogContent","mandatory","placeholder","loginInput","autoFocus","multiline","rows","RHFCheckbox","Divider","DialogActions","dialogAction","buttonCancel","buttonSubmit"],"mappings":"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","file":"static/js/5.0681eb6e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/styles';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { Grid, Button, Card, IconButton, InputAdornment } from '@material-ui/core';\nimport { AccountCircle, Edit, Person, PhoneAndroidOutlined, Email } from '@material-ui/icons';\nimport { getLoggedUserProfile, updateLoggedProfile } from '../../../store/actions/ProfileActions';\nimport { useForm, useFormContext } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFSelect } from '../../../components/hook-form';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserProfile, switchUserProfile } from '../../../store/actions/AddUserActions';\nimport BackDropLoader from '../../../ui-component/BackDropLoader';\nimport useUserRole from '../../../hooks/useUserRole';\nimport { profileUpload, profileDelete } from '../../../services/ProfileUpload';\nimport { setMessage } from '../../../store/actions/MessageActions';\nimport { getAllSchool, getSchool, getSchoolList } from '../../../store/actions/SchoolActions';\nimport SchoolAddress from '../../my-address/school-address';\nimport MyAddress from '../../my-address';\nimport AddProfile from '../../user-management/profile/AddProfileModal';\nimport { useParams } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n    viewIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    label: {\n        width: '200px'\n    },\n    textfield: {\n        width: '500px'\n    },\n    select: {\n        width: '500px'\n    },\n    btnProfile: {\n        width: '90px',\n        height: '30px'\n    },\n    edit: {\n        backgroundColor: '#ff8c00',\n        width: '20px',\n        height: '20px',\n        borderRadius: '25px',\n        marginTop: '30px',\n        marginRight: '100px',\n        fontSize: '10px',\n        position: 'absolute'\n    },\n    delete: {\n        backgroundColor: '#ff8c00',\n        width: '20px',\n        height: '20px',\n        borderRadius: '25px',\n        marginTop: '40px',\n        marginRight: '130px',\n        fontSize: '10px'\n    },\n    span: {\n        color: 'red'\n    },\n    error: {\n        color: 'red'\n    },\n    nameEmail: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        [theme.breakpoints.down('sm')]: { display: 'block' }\n    }\n}));\n\nconst validationSchema = yup.object({\n    firstName: yup.string().required('First name is required'),\n    lastName: yup.string().required('Last name is required'),\n    email: yup.string().email().required('Email is required'),\n    mobile: yup\n        .string()\n        .matches(/^([0-9]{10})|([A-Za-z0-9._%\\+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,3})$/, 'Enter Valid Mobile Number')\n        .required('Mobile Number Is required')\n});\n\nexport default function StudentProfile({ active }) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    let { id } = useParams();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN', 'TEACHER', 'STUDENT', 'SUPER_ADMIN'] });\n    const { loggedUserProfile, loading } = useSelector((state) => state?.userProfile);\n    const { getUserProfileData } = useSelector((state) => state?.addUser);\n    const localProfileId = Cookies.get('profileId');\n    const [isEditable, setEditable] = useState(false);\n    const [file, setFile] = useState(null);\n    const [displayImage, setDisplayImage] = useState();\n    const { getAllSchoolData, getSchoolData, schoolList } = useSelector((state) => state?.school);\n    const fetchSchools = getAllSchoolData?.content;\n    const [openModal, setModal] = useState(false);\n    // const [openAddressModal, setAddressModal] = useState(false);\n    const [isEditData, setEditData] = useState(null);\n\n    console.log('school-list-------', schoolList);\n\n    const handleChangePhoto = function loadFile(event) {\n        // if (event.target.files.length > 0) {\n        //     const file = URL.createObjectURL(event.target.files[0]);\n        //     // const file = event.target.files[0];\n        //     setFile(file);\n        // }\n        setDisplayImage(URL.createObjectURL(event.target.files[0]));\n        setFile(event.target.files[0]);\n    };\n\n    const handleUpload = (e) => {\n        ProfileUpload();\n    };\n\n    const handleDelete = (e) => {\n        ProfileDelete();\n        //setDisplayImage(false);\n    };\n\n    const initialValues = {\n        firstName: loggedUserProfile?.firstName || '',\n        lastName: loggedUserProfile?.lastName || '',\n        mobile: loggedUserProfile?.mobile || '',\n        email: loggedUserProfile?.email || '',\n        profileId: localProfileId || '',\n        classAndSection: loggedUserProfile?.classAndSection || '',\n        schoolId: loggedUserProfile?.schoolId || ''\n    };\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n\n    const { reset, handleSubmit, setValue, watch } = methods;\n    const switchProfile = watch('profileId');\n\n    const onSubmit = (data) => {\n        const payload = {\n            firstName: data?.firstName,\n            lastName: data?.lastName,\n            mobile: data?.mobile,\n            email: data?.email,\n            classAndSection: data?.classAndSection,\n            schoolId: data?.schoolId\n        };\n\n        dispatch(\n            updateLoggedProfile(payload, () => {\n                dispatch(getLoggedUserProfile());\n            })\n        );\n        setEditable(false);\n    };\n    console.log('loggedUserProfile==', loggedUserProfile.id);\n    useEffect(() => {\n        if (loggedUserProfile && Object.keys(loggedUserProfile)?.length) {\n            setValue('firstName', loggedUserProfile?.firstName);\n            setValue('lastName', loggedUserProfile?.lastName);\n            setValue('mobile', loggedUserProfile?.mobile);\n            setValue('email', loggedUserProfile?.email);\n            setValue('classAndSection', loggedUserProfile?.classAndSection);\n\n            setDisplayImage(loggedUserProfile?.profilePictureUrl);\n        }\n    }, [loggedUserProfile, setValue]);\n\n    const token = Cookies.get('token');\n    useEffect(() => {\n        if (token) {\n            dispatch(getLoggedUserProfile());\n        }\n    }, [token, dispatch]);\n\n    useEffect(() => {\n        if (switchProfile) {\n            dispatch(\n                switchUserProfile(switchProfile, () => {\n                    dispatch(getLoggedUserProfile());\n                    dispatch(getUserProfile());\n                })\n            );\n        }\n    }, [switchProfile]);\n    const handleCloseModal = () => {\n        reset();\n        setModal(false);\n    };\n    const handleOpenModal = () => {\n        setEditData(null);\n        setModal(true);\n    };\n    const ProfileUpload = async () => {\n        const formData = new FormData();\n        formData.append('profilePicture', file);\n        await profileUpload(formData)\n            .then((res) => {\n                dispatch(setMessage(res?.message ? res?.message : 'Profile Picture Uploaded Successfully !'));\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.log(error);\n                dispatch(setMessage(error?.data?.message ? error?.data?.message : 'Please Select An Image!'));\n            });\n    };\n\n    const ProfileDelete = async () => {\n        const formData = new FormData();\n        formData.append('profilePicture', file);\n        await profileDelete(formData)\n            .then((res) => {\n                dispatch(setMessage('Profile Picture Removed Successfully'));\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    useEffect(() => {\n        dispatch(getAllSchool());\n        dispatch(getSchoolList());\n        dispatch(getSchool(loggedUserProfile?.schoolId));\n    }, []);\n\n    return (\n        <>\n            {loading && <BackDropLoader isOpen={true} />}\n            <Grid item container xs={12} sm={12} md={12} className={classes.card}>\n                <>\n                    <Card className={classes.infoCard}>\n                        <MainCard>\n                            <div className={classes.titleContainer}>\n                                <Person className={classes.viewIcon} />\n                                <span className={classes.pageTitle}>&nbsp; Profile Details </span>\n                            </div>\n                            <MainCard>\n                                {/* -------------User Profile------------------ */}\n\n                                <Grid container paddingLeft=\"15px\" rowSpacing={2}>\n                                    <Grid item xs={12} sm={12}>\n                                        <input\n                                            name=\"upload\"\n                                            type=\"file\"\n                                            id=\"upload\"\n                                            // onClick={ProfileUpload}\n                                            // accept=\"image/*\"\n                                            onChange={handleChangePhoto}\n                                            // onBlur={formik.handleBlur}\n                                            // value={formik.values.upload}\n                                            style={{ display: 'none', alignSelf: 'left' }}\n                                        />\n\n                                        <label htmlFor=\"upload\">\n                                            <div className={classes.nameEmail}>\n                                                <div>\n                                                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                                        <Avatar\n                                                            id=\"avatar\"\n                                                            src={displayImage}\n                                                            //src={loggedUserProfile?.profilePictureUrl}\n                                                            style={{\n                                                                width: '90px',\n                                                                height: '90px'\n                                                            }}\n                                                        ></Avatar>\n                                                    </IconButton>\n                                                </div>\n\n                                                <div>\n                                                    <Grid item xs={12} alignSelf=\"center\">\n                                                        <h5 style={{ width: '150px', marginTop: '23px' }}>\n                                                            {loggedUserProfile\n                                                                ? loggedUserProfile?.firstName + ' ' + loggedUserProfile?.lastName\n                                                                : ''}\n                                                        </h5>\n                                                        <p>{loggedUserProfile ? loggedUserProfile?.email : ''}</p>\n                                                    </Grid>\n                                                </div>\n                                            </div>\n                                        </label>\n                                    </Grid>\n                                    <br />\n                                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                                        <div>\n                                            <Button variant=\"contained\" className=\"btnProfile\" onClick={handleUpload}>\n                                                upload new\n                                            </Button>\n                                            &nbsp;\n                                            <Button variant=\"outlined\" className=\"btnProfile\" onClick={handleDelete}>\n                                                Remove\n                                            </Button>\n                                        </div>\n                                        <div>\n                                            <Edit\n                                                color=\"primary\"\n                                                fontSize=\"small\"\n                                                onClick={() => setEditable(true)}\n                                                style={{ cursor: 'pointer' }}\n                                            />\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                                    <Grid\n                                        container\n                                        xs={12}\n                                        sm={12}\n                                        spacing={2}\n                                        //columnSpacing={5}\n                                        style={{ paddingLeft: '15px', marginTop: 30 }}\n                                    >\n                                        <Grid item container xs={12} sm={6}>\n                                            <label className={classes.label}>\n                                                First Name<span className={classes.span}>*</span>\n                                            </label>\n                                            <RHFTextField\n                                                name=\"firstName\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <AccountCircle />\n                                                    </InputAdornment>\n                                                }\n                                                required\n                                                disabled={!isEditable}\n                                            />\n                                        </Grid>\n                                        <Grid item container xs={12} sm={6}>\n                                            <label className={classes.label}>\n                                                Last Name<span className={classes.span}>*</span>\n                                            </label>\n                                            <RHFTextField\n                                                name=\"lastName\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <AccountCircle />\n                                                    </InputAdornment>\n                                                }\n                                                required\n                                                disabled={!isEditable}\n                                            />\n                                        </Grid>\n                                        <Grid item container xs={12} sm={6}>\n                                            <label className={classes.label}>\n                                                Mobile <span className={classes.span}>*</span>\n                                            </label>\n                                            <RHFTextField\n                                                name=\"mobile\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <PhoneAndroidOutlined />\n                                                    </InputAdornment>\n                                                }\n                                                required\n                                                disabled={!isEditable}\n                                            />\n                                        </Grid>\n                                        <Grid item container xs={12} sm={6}>\n                                            <label className={classes.label}>\n                                                Email<span className={classes.span}>*</span>\n                                            </label>\n                                            <RHFTextField\n                                                name=\"email\"\n                                                startAdornment={\n                                                    <InputAdornment position=\"start\">\n                                                        <Email />\n                                                    </InputAdornment>\n                                                }\n                                                required\n                                                disabled\n                                            />\n                                        </Grid>\n                                        {loggedUserProfile?.role === 'SCHOOL_ADMIN' && (\n                                            <Grid item container xs={12} sm={6}>\n                                                <label className={classes.label}> School </label>\n                                                <RHFTextField name=\"school\" value={getSchoolData?.name} required disabled />\n                                            </Grid>\n                                        )}\n\n                                        {loggedUserProfile?.role === 'STUDENT' && (\n                                            <>\n                                                <Grid item container xs={12} sm={6}>\n                                                    <label className={classes.label}> School </label>\n                                                    <RHFSelect name=\"schoolId\" label=\"\" disabled={!isEditable}>\n                                                        {schoolList?.map((item, index) => (\n                                                            <option key={index} value={item?.id}>\n                                                                {item?.nameBranch}\n                                                            </option>\n                                                        ))}\n                                                    </RHFSelect>\n                                                </Grid>\n\n                                                <Grid item container xs={12} sm={6}>\n                                                    <label className={classes.label}> Class/Section </label>\n                                                    <RHFTextField name=\"classAndSection\" required disabled={!isEditable} />\n                                                </Grid>\n                                            </>\n                                        )}\n                                    </Grid>\n                                    <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ marginTop: 40, marginBottom: 40 }}>\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                            Save Changes\n                                        </Button>\n                                    </Grid>\n\n                                    {loggedUserProfile?.role === 'STUDENT' && (\n                                        <>\n                                            <div className={classes.titleContainer}>\n                                                <Person className={classes.viewIcon} />\n                                                <span className={classes.pageTitle}>&nbsp; Switch Profile </span>\n                                            </div>\n                                            <Grid item container xs={12} sm={6} alignItems={'end'}>\n                                                <Grid item xs={6}>\n                                                    <label className={classes.label}>Current Profile</label>\n                                                    <RHFSelect name=\"profileId\" label=\"\">\n                                                        {getUserProfileData?.userProfile?.map((item) => (\n                                                            <option key={item?.id} value={item?.id}>\n                                                                {item?.firstName} {item?.lastName}\n                                                            </option>\n                                                        ))}\n                                                    </RHFSelect>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        onClick={() => handleOpenModal()}\n                                                        style={{\n                                                            boxShadow: '0 0.5em 0.5em 0.1em #68c2d9',\n                                                            marginLeft: '20px',\n                                                            display: loggedUserProfile?.role === 'STUDENT' ? 'block' : 'none'\n                                                        }}\n                                                    >\n                                                        Add Profile\n                                                    </Button>\n                                                    {openModal && (\n                                                        <AddProfile\n                                                            open={openModal}\n                                                            onClose={handleCloseModal}\n                                                            isEditData={isEditData}\n                                                            userId={loggedUserProfile.id}\n                                                        />\n                                                    )}\n                                                </Grid>\n                                            </Grid>\n                                        </>\n                                    )}\n                                    <br />\n                                    <MyAddress />\n                                </FormProvider>\n                            </MainCard>\n                        </MainCard>\n                    </Card>\n                </>\n            </Grid>\n        </>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFCheckbox, RHFSelect } from '../../../components/hook-form';\nimport useStyles from '../styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { AddProfiles, viewProfileById } from '../../../store/actions/ProfileActions';\nimport { getAllSchool, getSchoolList } from '../../../store/actions/SchoolActions';\nimport { updateProfile } from '../../../store/actions/AddUserActions';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n        }\n    }\n};\n\nconst addProfileSchema = yup.object({\n    firstName: yup.string('Enter first name').required('First name is required'),\n    lastName: yup.string('Enter last name').required('Last name is required'),\n    status: yup.string('Status is required').required('Status is required'),\n    dob: yup.string('Enter Date Of Birth').required('Date Of Birth is required')\n});\n\nconst STATUS_ITEM = [\n    { id: 0, status: 'SELECT STATUS' },\n    { id: 1, status: 'ACTIVE' },\n    { id: 2, status: 'INACTIVE' }\n];\nconst STATUS_ITEMS = [\n    { id: 0, status: 'SELECT STATUS' },\n    { id: 1, status: 'ACTIVE_PENDING' },\n    { id: 2, status: 'ACTIVE_APPROVED' },\n    { id: 3, status: 'ACTIVE_REJECTED' }\n];\n\nexport default function AddProfile(props) {\n    const { open, onClose, isEditData, userId, isUserRole } = props;\n    console.log(isEditData);\n    // console.log('---User Role---', isUserRole);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    let { role } = useParams();\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n\n    const { schoolList } = useSelector((state) => state?.school);\n\n    const initialValues = {\n        firstName: isEditData?.firstName || '',\n        lastName: isEditData?.lastName || '',\n        default: isEditData?.default || false,\n        schoolId: isEditData?.schoolId || '',\n        classAndSection: isEditData?.classAndSection || '',\n        status: isEditData?.status,\n        dob: isEditData?.dob,\n        comments: isEditData?.adminComment\n    };\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(addProfileSchema),\n        defaultValues: initialValues\n    });\n\n    const { reset, handleSubmit, watch } = methods;\n    const hide = watch('schoolId');\n\n    useEffect(() => {\n        if (!isEditData) {\n            reset(initialValues);\n        }\n    }, [isEditData]);\n\n    const onSubmit = (data) => {\n        const payload = {\n            firstName: data?.firstName,\n            lastName: data?.lastName,\n            default: data?.default,\n            schoolId: data?.schoolId,\n            status: data?.status\n        };\n\n        let modifiedPayload = {};\n        if (data?.schoolId === '') {\n            modifiedPayload = {\n                firstName: data?.firstName,\n                lastName: data?.lastName,\n                default: data?.default,\n                status: data?.status,\n                dob: data?.dob,\n                adminComment: data?.comments\n            };\n        } else {\n            modifiedPayload = {\n                firstName: data?.firstName,\n                lastName: data?.lastName,\n                default: data?.default,\n                schoolId: data?.schoolId,\n                classAndSection: data?.classAndSection,\n                status: data?.status,\n                dob: data?.dob,\n                adminComment: data?.comments\n            };\n        }\n\n        if (isEditData) {\n            dispatch(\n                updateProfile(modifiedPayload, isEditData?.userId, isEditData?.id, () => {\n                    dispatch(viewProfileById(isEditData?.userId));\n                    reset(initialValues);\n                    onClose();\n                })\n            );\n        } else {\n            dispatch(\n                AddProfiles(modifiedPayload, userId, () => {\n                    dispatch(viewProfileById(userId));\n                    reset();\n                    onClose();\n                })\n            );\n        }\n    };\n\n    // const userRoleName = (role) => {\n    //     switch (role) {\n    //         case 'ADMIN':\n    //             return 'Admin';\n    //         case 'SCHOOL_ADMIN':\n    //             return 'School-Admin';\n    //         case 'TEACHER':\n    //             return 'Teacher';\n    //         case 'STUDENT':\n    //             return 'Student';\n\n    //         default:\n    //             return role;\n    //     }\n    // };\n\n    useEffect(() => {\n        // dispatch(getAllSchool());\n        dispatch(getSchoolList());\n    }, []);\n\n    return (\n        <div>\n            <Dialog open={open} onClose={onClose} maxWidth=\"xs\" classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{isEditData ? 'Update' : 'Add'} Profile</Typography>\n                        <Link to=\"#\" onClick={onClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    First Name <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"firstName\" placeholder=\"First name\" className={classes.loginInput} autoFocus />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Last Name <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"lastName\" placeholder=\"Last name\" className={classes.loginInput} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Date Of Birth <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField type=\"date\" name=\"dob\" placeholder=\"Date Of Birth\" className={classes.loginInput} />\n                            </Grid>\n                            {role == 'student' && (\n                                <Grid item xs={12} sm={12}>\n                                    <label className={classes.label}> School Name </label>\n                                    {/* <RHFTextField name=\"schoolId\" placeholder=\"schoolId\" className={classes.loginInput} /> */}\n                                    <RHFSelect name=\"schoolId\" label=\"\">\n                                        <option value=\"\"> Select School </option>\n                                        {schoolList?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.nameBranch}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            )}\n\n                            {role == 'school-admin' && (\n                                <Grid item xs={12} sm={12}>\n                                    <label className={classes.label}> School Name </label>\n                                    {/* <RHFTextField name=\"schoolId\" placeholder=\"schoolId\" className={classes.loginInput} /> */}\n                                    <RHFSelect name=\"schoolId\" label=\"\">\n                                        <option value=\"\"> Select School </option>\n                                        {schoolList?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.nameBranch}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            )}\n\n                            {hide !== '' && hide !== 'Select a School' && role == 'student' && (\n                                <Grid item xs={12}>\n                                    {/* {loggedUserProfile?.role !== 'SCHOOL_ADMIN' && ( */}\n                                    <RHFTextField name=\"classAndSection\" placeholder=\"Enter your class/section\" />\n                                    {/* )} */}\n                                </Grid>\n                            )}\n\n                            <Grid item xs={12}>\n                                <label>\n                                    Status <span className={classes.mandatory}>*</span>\n                                </label>\n                                {/* {loggedUserProfile?.role === 'SCHOOL_ADMIN' && (\n                                    <> */}\n                                {hide == '' && (\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEM?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                )}\n\n                                {hide !== '' && role == 'school-admin' && (\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEM?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                )}\n                                {/* </>\n                                )} */}\n                                {/* `${comment} Date:-${new Date()}` */}\n                                {hide !== '' && role == 'student' && (\n                                    <>\n                                        <RHFSelect name=\"status\" label=\"\">\n                                            {STATUS_ITEMS?.map((item, index) => (\n                                                <option key={index} value={item?.status}>\n                                                    {item?.status}\n                                                </option>\n                                            ))}\n                                        </RHFSelect>\n                                    </>\n                                )}\n                            </Grid>\n                            {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                <Grid item xs={12}>\n                                    <label>Comments</label>\n                                    <RHFTextField name=\"comments\" multiline rows={4} />\n                                </Grid>\n                            )}\n\n                            <Grid item xs={12} sm={12}>\n                                <RHFCheckbox name=\"default\" label=\"Default\" />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={onClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {isEditData ? 'Update' : 'Add'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n"],"sourceRoot":""}