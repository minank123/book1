{"version":3,"sources":["../node_modules/@material-ui/icons/ListAlt.js","../node_modules/@material-ui/icons/FileCopy.js","store/actions/MeetingActions/index.js","views/online-classes/meetings/add-meeting/index.js","views/online-classes/meetings/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getAllMeetingError","error","type","GET_ALL_MEETING_ERROR","addMeeting","payload","id","successCB","dispatch","http","process","concat","then","res","setMessage","message","catch","err","_err$data","console","log","data","cloneMeeting","_err$data2","_err$data3","updateMeeting","_err$data4","deleteMeeting","_err$data5","getAllMeeting","searchData","arguments","length","undefined","page","rowsPerPage","GET_ALL_MEETING_START","GET_ALL_MEETING_SUCCESS","getAllMeetingSuccess","allMeetings","STATUS_ITEMS","status","validationSchema","yup","agenda","required","sessionId","AddMeetings","props","openAddMeetings","setOpenAddMeetings","isEditData","meetingId","moduleId","classes","useStyles","useDispatch","_useState","useState","_useState2","_slicedToArray","isLoading","_useState3","_useState4","startUTC","setStartUTC","_useState5","_useState6","endUTC","setEndUTC","getFormattedDateTime","date","splittedDate","split","firstSplit","utcStartTime","startDateTime","startdate","moment","utc","format","localStartTime","add","utcEndTime","endDateTime","enddate","localEndTime","formInitialSchema","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","handlePopupClose","start_Date_time","Date","toISOString","end_Date_time","_useState7","_useState8","sessionList","setSessionList","GetAllSessions","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getAllSessions","stop","_x","apply","useEffect","_jsxs","style","children","Dialog","open","paper","dialog","_jsx","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","onSubmit","DialogContent","Grid","container","item","xs","spacing","sm","mandatory","RHFTextField","name","placeholder","textField","autoFocus","RHFSelect","label","map","_sessionList$filter$","defaultValue","filter","sess","title","onChange","e","receivedDataTime","target","currentDateTime","month","String","getMonth","getDate","hours","getHours","mins","getMinutes","formattedDate","getFullYear","index","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","buttonSubmit","loader","CircularProgressLoader","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","Meetings","useUserRole","roleList","history","useHistory","useTheme","_useParams","useParams","mId","setValue","setPage","setRowsPerPage","_useState9","_useState10","isMeetingUpdateData","setMeetingUpdateData","loggedUserProfile","useSelector","state","userProfile","meeting","newData","content","totalCount","totalElements","_useState11","isOpen","subTitle","_useState12","confirmDialog","setConfirmDialog","clearGroup","mid","_objectSpread","handleClone","_ref2","_callee2","_context2","_x2","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","display","justifyContent","OutlinedInput","searchControl","event","handleSearch","startAdornment","InputAdornment","position","IconSearch","stroke","size","role","btnAdd","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","TableBody","row","Moment","component","scope","width","whiteSpace","overflow","textOverflow","href","startUrl","success","main","warning","dark","Tooltip","IconButton","push","handleAssignment","ListAltIcon","cursor","FileCopyIcon","EditIcon","onConfirm","DeleteForeverIcon","textAlign","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog"],"mappings":"8HAEA,IAAIA,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,sLACD,WAEJP,EAAQE,QAAUG,C,oCCflB,IAAIT,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,6IACD,YAEJP,EAAQE,QAAUG,C,6KCAZG,EAAqB,SAACC,GACxB,MAAO,CAAEC,KAAMC,KAAuBF,QAC1C,EAYMG,EAAa,SAACC,EAASC,EAAIC,GAAS,OAAK,SAACC,GAC5C,IACIC,YAAKC,uCAAwC,OAAO,oCAADC,OAAsCL,GAAMD,GAAS,GACnGO,MAAK,SAACC,GACCA,IACAL,EAASM,YAAc,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,UACzBR,GAAaA,EAAUM,GAE/B,IACCG,OAAM,SAACC,GAAS,IAADC,EACZC,QAAQC,IAAIH,GACZT,EAASM,YAAc,OAAHG,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKI,YAAI,IAAAH,OAAN,EAAHA,EAAWH,SACnC,GACR,CAAE,MAAOd,GACLkB,QAAQC,IAAInB,EAChB,CACJ,CAAE,EAEIqB,EAAe,SAAChB,EAAIC,GAAS,OAAK,SAACC,GACrC,IACIC,YAAKC,uCAAwC,OAAO,4BAADC,OAA8BL,EAAE,UAAS,GACvFM,MAAK,SAACC,GACCA,IACAL,EAASM,YAAc,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,UACzBR,GAAaA,EAAUM,GAE/B,IACCG,OAAM,SAACC,GAAS,IAADM,EAAAC,EACZL,QAAQC,IAAIH,GACZT,EAASM,YAAc,OAAHG,QAAG,IAAHA,GAAS,QAANM,EAAHN,EAAKI,YAAI,IAAAE,GAATA,EAAWR,QAAa,OAAHE,QAAG,IAAHA,GAAS,QAANO,EAAHP,EAAKI,YAAI,IAAAG,OAAN,EAAHA,EAAWT,QAAU,YAClE,GACR,CAAE,MAAOd,GACLkB,QAAQC,IAAInB,EAChB,CACJ,CAAE,EAEIwB,EAAgB,SAACpB,EAASC,EAAIC,GAAS,OAAK,SAACC,GAC/C,IACIC,YAAKC,uCAAwC,MAAM,4BAADC,OAA8BL,GAAMD,GAAS,GAC1FO,MAAK,SAACC,GACCA,IACAL,EAASM,YAAc,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,UACzBR,GAAaA,EAAUM,GAE/B,IACCG,OAAM,SAACC,GAAS,IAADS,EACZP,QAAQC,IAAIH,GACZT,EAASM,YAAc,OAAHG,QAAG,IAAHA,GAAS,QAANS,EAAHT,EAAKI,YAAI,IAAAK,OAAN,EAAHA,EAAWX,SACnC,GACR,CAAE,MAAOd,GACLkB,QAAQC,IAAInB,EAChB,CACJ,CAAE,EAEI0B,EAAgB,SAACrB,EAAIC,GAAS,OAAK,SAACC,GACtC,IACIC,YAAKC,uCAAwC,SAAS,4BAADC,OAA8BL,IAAM,GACpFM,MAAK,SAACC,GACHL,EAASM,YAAW,iCACpBP,GAAaA,EAAUM,EAC3B,IACCG,OAAM,SAACC,GAAS,IAADW,EACZpB,EAASM,YAAc,OAAHG,QAAG,IAAHA,GAAS,QAANW,EAAHX,EAAKI,YAAI,IAAAO,OAAN,EAAHA,EAAWb,UAC/BI,QAAQC,IAAIH,EAChB,GACR,CAAE,MAAOhB,GACLkB,QAAQC,IAAInB,EAChB,CACJ,CAAE,EAqBI4B,EACF,SAACvB,GAAE,IAAEwB,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGI,EAAWJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAChD,SAACvB,GACGA,EA/GG,CAAEN,KAAMkC,OAgHX,IACI3B,YACIC,uCACA,MAAM,oCAADC,OAC+BL,EAAE,eAAAK,OAAcmB,EAAU,gBAAAnB,OAAeuB,EAAI,cAAAvB,OAAawB,IAC9F,GAECvB,MAAK,SAACC,GAIHL,EAzHS,SAACH,GAC1B,MAAO,CAAEH,KAAMmC,KAAyBhC,UAC5C,CAuH6BiC,CAHO,CACZC,YAAa1B,IAGrB,IACCG,OAAM,SAACC,GACJT,EAASR,EAAmBiB,IAC5BT,EAASM,YAAc,OAAHG,QAAG,IAAHA,OAAG,EAAHA,EAAKF,SAC7B,GACR,CAAE,MAAOd,GACLO,EAASR,EAAmB,wBAChC,CACJ,CAAE,E,yaChIAwC,GAAe,CACjB,CAAElC,GAAI,EAAGmC,OAAQ,WACjB,CAAEnC,GAAI,EAAGmC,OAAQ,WAGfC,GAAmBC,IAAW,CAChCC,OAAQD,IAAW,eAAeE,SAAS,sBAC3CC,UAAWH,IAAW,kBAAkBE,SAAS,yBAGtC,SAASE,GAAYC,GAChC,IAAQC,EAAyED,EAAzEC,gBAAiBC,EAAwDF,EAAxDE,mBAAoBC,EAAoCH,EAApCG,WAAYC,EAAwBJ,EAAxBI,UAAWC,EAAaL,EAAbK,SAC9DC,EAAUC,eACV/C,EAAWgD,cAEjBC,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CI,EAASF,EAAA,GAChBG,GAD8BH,EAAA,GACED,mBAAS,OAAKK,EAAAH,YAAAE,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAA4BR,mBAAS,MAAKS,EAAAP,YAAAM,EAAA,GAAnCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAuB,SAACC,GAC1B,IAAMC,EAAeD,EAAKE,MAAM,KAAK,GAI/BC,EAHeH,EAAKE,MAAM,KAAK,GAGLA,MAAM,KAEtC,OAAOD,EAAe,IAAME,EAAW,GAAK,IAAMA,EAAW,EACjE,EAEIC,EAAyB,OAAVxB,QAAU,IAAVA,OAAU,EAAVA,EAAYyB,cAE3BC,EAAYC,KAAOC,IAAIJ,GAAcK,SAIrCC,EAAiBX,EAFIQ,KAAOC,IAAIF,GAAWK,IAAI,EAAG,SAASA,IAAI,GAAI,WAAWF,UAI9EG,EAAuB,OAAVhC,QAAU,IAAVA,OAAU,EAAVA,EAAYiC,YAEzBC,EAAUP,KAAOC,IAAII,GAAYH,SAIjCM,EAAehB,EAFIQ,KAAOC,IAAIM,GAASH,IAAI,EAAG,SAASA,IAAI,GAAI,WAAWF,UAIxEO,EAAoB,CACtB3C,OAAkB,OAAVO,QAAU,IAAVA,OAAU,EAAVA,EAAYP,OACpBE,WAAqB,OAAVK,QAAU,IAAVA,OAAU,EAAVA,EAAYL,YAAa,GACpC8B,cAAeZ,GAAY,GAC3BoB,YAAahB,GAAU,GACvB3B,QAAkB,OAAVU,QAAU,IAAVA,OAAU,EAAVA,EAAYV,SAAU,WAG5B+C,EAAUC,YAAQ,CACpBC,KAAM,WACNC,SAAUC,YAAYlD,IACtBmD,cAAeN,IAGXO,EAAwBN,EAAxBM,MAAOC,EAAiBP,EAAjBO,aAETC,EAAmB,WACrB9C,GAAmB,GACnB4C,GACJ,EAEMG,EAAkB,IAAIC,KAAKlC,GAAUmC,cAErCC,EAAgB,IAAIF,KAAK9B,GAAQ+B,cA2BvCE,EAAsC3C,mBAAS,IAAG4C,EAAA1C,YAAAyC,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAAc,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOzD,GAAQ,OAAAuD,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC5BC,aAAe9D,GAChBzC,MAAK,SAACC,GACH2F,EAAe3F,EACnB,IACCG,OAAM,SAACf,GACJkB,QAAQC,IAAInB,EAChB,IAAG,KAAD,mBAAA+G,EAAAI,OAAA,GAAAN,EAAA,KACT,gBARmBO,GAAA,OAAAX,EAAAY,MAAA,KAAAvF,UAAA,KAgBpB,OANAwF,qBAAU,WACNd,EAAepD,GACfY,EAAYgB,GACZZ,EAAUiB,EACd,GAAG,CAACL,EAAgBK,IAGhBkC,gBAAA,OAAKC,MAAO,CAAC,EAAEC,SAAA,CACXF,gBAACG,KAAM,CAACC,KAAM3E,EAAiBK,QAAS,CAAEuE,MAAOvE,EAAQwE,QAASJ,SAAA,CAC9DK,eAACC,KAAW,CAACC,UAAW3E,EAAQ4E,YAAYR,SACxCF,gBAAA,OAAKS,UAAW3E,EAAQ6E,iBAAiBT,SAAA,CACrCK,eAACK,IAAU,CAACX,MAAO,CAAEY,SAAU,QAASX,SAAGvE,EAA6B,iBAAhB,gBACxD4E,eAACO,KAAI,CAACC,GAAG,IAAIC,QAASxC,EAAiB0B,SACnCK,eAACU,KAAS,CAACR,UAAW3E,EAAQoF,mBAI1ClB,gBAACmB,IAAY,CAACnD,QAASA,EAASoD,SAAU7C,GAtDrC,SAAC1E,GACd,IAAMhB,EAAU,CACZuC,OAAY,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,OACdE,UAAe,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,UACjB8B,cAAeqB,EACfb,YAAagB,EACb3D,OAAY,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,QAGdU,GACA3C,EACIiB,EAAcpB,EAAS8C,EAAW7C,IAAI,WAClCE,EAASqB,EAAcuB,GAC3B,KAEJ4C,MAEAxF,EACIJ,EAAWC,EAAS+C,GAAW,WAC3B5C,EAASqB,EAAcuB,GAC3B,KAEJ4C,IAER,IA8B6E0B,SAAA,CAC7DK,eAACc,KAAa,CAAAnB,SACVK,eAACe,IAAI,CAACC,WAAS,EAAArB,SACXK,eAACe,IAAI,CAACE,MAAI,EAACC,GAAI,GAAGvB,SACdF,gBAACsB,IAAI,CAACC,WAAS,EAACG,QAAS,EAAExB,SAAA,CACvBF,gBAACsB,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEzB,SAAA,CACrBF,gBAAA,SAAAE,SAAA,CAAO,UACIK,eAAA,QAAME,UAAW3E,EAAQ8F,UAAU1B,SAAC,SAE/CK,eAACsB,IAAY,CAACC,KAAK,SAASC,YAAY,cAActB,UAAW3E,EAAQkG,UAAWC,WAAS,OAEjG1B,eAAA,SAAM,IAACA,eAAA,SACPP,gBAACsB,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEzB,SAAA,CACrBK,eAAA,SAAAL,SAAO,cACPF,gBAACkC,IAAS,CAACJ,KAAK,YAAYK,MAAM,GAAEjC,SAAA,CAChCK,eAAA,UAAQtI,MAAO,GAAGiI,SAAC,uBACP,OAAXnB,QAAW,IAAXA,OAAW,EAAXA,EAAaqD,KAAI,SAACZ,GAAI,IAAAa,EAAA,OACnB9B,eAAA,UAEItI,MAAW,OAAJuJ,QAAI,IAAJA,OAAI,EAAJA,EAAM1I,GACbwJ,cACQ,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAM1I,OACK,OAAXiG,QAAW,IAAXA,GAAqE,QAA1DsD,EAAXtD,EAAawD,QAAO,SAACC,GAAI,OAAKA,EAAK1J,MAAiB,OAAV6C,QAAU,IAAVA,OAAU,EAAVA,EAAYoD,YAAW,IAAE,UAAE,IAAAsD,OAA1D,EAAXA,EAAuEvJ,IAC1EoH,SAEI,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,OAPE,OAAJjB,QAAI,IAAJA,OAAI,EAAJA,EAAM1I,GAQN,UAIrByH,eAAA,SACAA,eAAA,SACAP,gBAACsB,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEzB,SAAA,CACrBF,gBAAA,SAAAE,SAAA,CAAO,oBACcK,eAAA,QAAME,UAAW3E,EAAQ8F,UAAU1B,SAAC,SAEzDK,eAACsB,IAAY,CACTC,KAAK,gBACLpJ,KAAK,iBACLqJ,YAAY,uBACZtB,UAAW3E,EAAQkG,UACnBU,SAAU,SAACC,GACP,IAAIC,EAAmBD,EAAEE,OAAO5K,MAE5B6K,EAAkB,IAAIpE,KAEtBqE,EACAC,OAAOF,EAAgBG,YAAYzI,OAAS,EACtC,KAAOsI,EAAgBG,WAAa,GACpCH,EAAgBG,WAAa,EAEnClG,EACAiG,OAAOF,EAAgBI,WAAW1I,OAAS,EACrC,IAAMsI,EAAgBI,UACtBJ,EAAgBI,UAEtBC,EACAH,OAAOF,EAAgBM,YAAY5I,OAAS,EACtC,IAAMsI,EAAgBM,WACtBN,EAAgBM,WAEtBC,EACAL,OAAOF,EAAgBQ,cAAc9I,OAAS,EACxC,IAAMsI,EAAgBQ,aACtBR,EAAgBQ,aAEtBC,EAAa,GAAApK,OAAM2J,EAAgBU,cAAa,KAAArK,OAAI4J,EAAK,KAAA5J,OAAI4D,EAAI,KAAA5D,OAAIgK,EAAK,KAAAhK,OAAIkK,GAE9ET,EAAmBW,IAAeX,EAAmBW,GACzD9G,EAAYmG,EAChB,EACA3K,MAAOuE,OAGf+D,eAAA,SACAA,eAAA,SACAP,gBAACsB,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEzB,SAAA,CACrBF,gBAAA,SAAAE,SAAA,CAAO,kBACYK,eAAA,QAAME,UAAW3E,EAAQ8F,UAAU1B,SAAC,SAEvDK,eAACsB,IAAY,CACTC,KAAK,cACLpJ,KAAK,iBACLqJ,YAAY,qBACZtB,UAAW3E,EAAQkG,UACnBU,SAAU,SAACC,GAAC,OAAK9F,EAAU8F,EAAEE,OAAO5K,MAAM,EAC1CA,MAAO2E,OAGf2D,eAAA,SACAA,eAAA,SACAP,gBAACsB,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEzB,SAAA,CACrBF,gBAAA,SAAAE,SAAA,CAAO,UACIK,eAAA,QAAME,UAAW3E,EAAQ8F,UAAU1B,SAAC,SAE/CK,eAAC2B,IAAS,CAACJ,KAAK,SAASK,MAAM,GAAEjC,SAChB,OAAZlF,SAAY,IAAZA,QAAY,EAAZA,GAAcoH,KAAI,SAACZ,EAAMiC,GAAK,OAC3BlD,eAAA,UAAoBtI,MAAW,OAAJuJ,QAAI,IAAJA,OAAI,EAAJA,EAAMvG,OAAOiF,SAC/B,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMvG,QADEwI,EAEJ,kBAQrClD,eAACmD,KAAO,CAACzD,MAAO,CAAE0D,UAAW,MAC7B3D,gBAAC4D,KAAa,CAACnD,UAAW3E,EAAQ+H,aAAa3D,SAAA,CAC3CK,eAACuD,IAAM,CAACC,QAAQ,WAAWC,MAAM,YAAYvD,UAAW3E,EAAQmI,aAAcjD,QAASxC,EAAiB0B,SAAC,UAGzGK,eAACuD,IAAM,CAACC,QAAQ,YAAYC,MAAM,UAAUtL,KAAK,SAAS+H,UAAW3E,EAAQoI,aAAahE,SACpFvE,EAAqB,SAAR,iBAK/B4E,eAAA,QAAME,UAAW3E,EAAQqI,OAAOjE,SAAE7D,EAAY+H,eAA2B,OAGrF,C,4CCjOMC,GAAiBC,aAAW,SAACC,GAAK,MAAM,CAC1CC,KAAM,CACF,sBAAuB,CACnBC,gBAAiBF,EAAMG,QAAQC,OAAOC,QAGjD,GANsBN,CAMnBO,KAEW,SAASC,KACpB,IAAMhJ,EAAUC,cAChBgJ,aAAY,CAAEC,SAAU,CAAC,QAAS,UAAU,iBAC5C,IAAMC,EAAUC,eACVX,EAAQY,cACRnM,EAAWgD,cACjBoJ,EAAoBC,eAAZvM,EAAEsM,EAAFtM,GAAIwM,EAAGF,EAAHE,IACZrJ,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BhE,EAAKkE,EAAA,GAAEoJ,EAAQpJ,EAAA,GACtBG,EAA8CJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAtDb,EAAec,EAAA,GAAEb,EAAkBa,EAAA,GAE1CG,EAAwBR,mBAAS,GAAES,EAAAP,YAAAM,EAAA,GAA5BhC,EAAIiC,EAAA,GAAE6I,EAAO7I,EAAA,GACpBkC,EAAsC3C,mBAAS,IAAG4C,EAAA1C,YAAAyC,EAAA,GAA3ClE,GAAWmE,EAAA,GAAE2G,GAAc3G,EAAA,GAElC4G,GAAoDxJ,mBAAS,MAAKyJ,GAAAvJ,YAAAsJ,GAAA,GAA3DE,GAAmBD,GAAA,GAAEE,GAAoBF,GAAA,GACxCG,GAAsBC,aAAY,SAACC,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,WAAW,IAA/DH,kBAEA/K,GAAgBgL,aAAY,SAACC,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOE,OAAO,IAArDnL,YACFoL,GAAqB,OAAXpL,SAAW,IAAXA,QAAW,EAAXA,GAAaqL,QACvBC,GAAwB,OAAXtL,SAAW,IAAXA,QAAW,EAAXA,GAAauL,cAEhCC,GAA0CrK,mBAAS,CAC/CsK,QAAQ,EACR/D,MAAO,GACPgE,SAAU,KACZC,GAAAtK,YAAAmK,GAAA,GAJKI,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GAMhCG,GAAU,eAAA3H,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOwH,GAAG,OAAA1H,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACzBkH,GAAgBG,wBAAC,CAAC,EACXJ,IAAa,IAChBH,QAAQ,KAEZxN,EACImB,EAAc2M,GAAK,WACf9N,EAASqB,EAAcvB,GAC3B,KACF,wBAAA0G,EAAAI,OAAA,GAAAN,EAAA,KACL,gBAVeO,GAAA,OAAAX,EAAAY,MAAA,KAAAvF,UAAA,KAgBVyM,GAAW,eAAAC,EAAA9H,YAAAC,cAAAC,MAAG,SAAA6H,EAAOJ,GAAG,OAAA1H,cAAAG,MAAA,SAAA4H,GAAA,cAAAA,EAAA1H,KAAA0H,EAAAzH,MAAA,OAC1B1G,EACIc,EAAagN,GAAK,WACd9N,EAASqB,EAAcvB,GAC3B,KACF,wBAAAqO,EAAAvH,OAAA,GAAAsH,EAAA,KACL,gBANgBE,GAAA,OAAAH,EAAAnH,MAAA,KAAAvF,UAAA,KA2BjB,OAJAwF,qBAAU,WACN/G,EAASqB,EAAcvB,EAAIb,GAAgB,GAAIyC,EAAO,EAAGC,IAC7D,GAAG,CAAC1C,EAAOyC,EAAMC,KAGb4F,eAAA8G,YAAA,CAAAnH,SACIF,gBAACsH,IAAQ,CAAApH,SAAA,CACLF,gBAAA,OAAKS,UAAW3E,EAAQyL,eAAerH,SAAA,CACnCK,eAACiH,IAAW,CAAC/G,UAAW3E,EAAQ2L,WAChClH,eAAA,QAAME,UAAW3E,EAAQ4L,UAAUxH,SAAC,0BAExCF,gBAAC2H,IAAK,CAACC,UAAW,EAAGnH,UAAW3E,EAAQ0I,KAAKtE,SAAA,CACzCF,gBAACsB,IAAI,CAACrB,MAAO,CAAE4H,QAAS,OAAQC,eAAgB,iBAAkB5H,SAAA,CAC9DK,eAAA,OAAAL,SACIK,eAACwH,IAAa,CACV5F,MAAM,QACN1B,UAAW3E,EAAQkM,cACnBlP,GAAG,sBAEH4J,SAAU,SAACuF,GAAK,OAtBvB,SAACA,GAClB1C,EAAS0C,EAAMpF,OAAO5K,MAC1B,CAoBiDiQ,CAAaD,EAAM,EACxClG,YAAY,SACZoG,eACI5H,eAAC6H,IAAc,CAACC,SAAS,QAAOnI,SAC5BK,eAAC+H,IAAU,CAACC,OAAQ,IAAKC,KAAK,OAAO/H,UAAW3E,EAAQqM,uBAKxEnI,gBAACsB,IAAI,CAACrB,MAAO,CAAE4H,QAAS,QAAS3H,SAAA,CAAC,YAEA,WAAX,OAAjB4F,SAAiB,IAAjBA,QAAiB,EAAjBA,GAAmB2C,OAAgD,iBAAX,OAAjB3C,SAAiB,IAAjBA,QAAiB,EAAjBA,GAAmB2C,QACxDlI,eAAA,OAAAL,SACIK,eAACuD,IAAM,CACHC,QAAQ,YACR/C,QAAS,WACLtF,GAAmB,GACnBmK,GAAqB,KACzB,EACApF,UAAW3E,EAAQ4M,OAAOxI,SAC7B,wBAOjBK,eAACoI,IAAc,CAAClI,UAAW3E,EAAQ8M,eAAe1I,SAC9CF,gBAAC6I,IAAK,CAACpI,UAAW3E,EAAQgN,MAAO,aAAW,eAAc5I,SAAA,CACtDK,eAACwI,IAAS,CAACtI,UAAW3E,EAAQkN,gBAAgB9I,SAC1CF,gBAACqE,GAAc,CAAAnE,SAAA,CACXK,eAAC0I,IAAS,CAAA/I,SAAC,aACXK,eAAC0I,IAAS,CAAA/I,SAAC,wBACXK,eAAC0I,IAAS,CAAA/I,SAAC,sBACXK,eAAC0I,IAAS,CAAA/I,SAAC,UACXK,eAAC0I,IAAS,CAAA/I,SAAC,aACXK,eAAC0I,IAAS,CAAA/I,SAAC,kBAGjBiG,GAGE5F,eAAC2I,IAAS,CAAAhJ,SACE,OAAPiG,SAAO,IAAPA,QAAO,EAAPA,GAAS/D,KAAI,SAAC+G,GAAG,OACdnJ,gBAACqE,GAAc,CAAAnE,SAAA,CACXK,eAAC0I,IAAS,CAAA/I,SAAEiJ,EAAI/N,SAChBmF,eAAC0I,IAAS,CAAA/I,SACNK,eAAC6I,IAAM,CAAC5L,OAAO,qBAAqBT,KAAMoM,EAAI/L,kBAElDmD,eAAC0I,IAAS,CAAA/I,SACNK,eAAC6I,IAAM,CAAC5L,OAAO,qBAAqBT,KAAMoM,EAAIvL,gBAElD2C,eAAC0I,IAAS,CAACI,UAAU,KAAKC,MAAM,MAAKpJ,SACjCK,eAAA,OACIN,MAAO,CACH4H,QAAS,QACT0B,MAAO,QACPC,WAAY,SACZC,SAAU,SACVC,aAAc,YAChBxJ,SAEFF,gBAAA,KAAG2J,KAAMR,EAAIS,SAAS1J,SAAA,CAAC,IAAEiJ,EAAIS,gBAGrCrJ,eAAC0I,IAAS,CAAA/I,SACNK,eAACK,IAAU,CACPH,UAAW3E,EAAQb,OACnBgF,MAAO,CACHwE,gBACqB,YAAb,OAAH0E,QAAG,IAAHA,OAAG,EAAHA,EAAKlO,SAAuBsJ,EAAMG,QAAQmF,QAAQC,MAClC,aAAb,OAAHX,QAAG,IAAHA,OAAG,EAAHA,EAAKlO,SAAwBsJ,EAAMG,QAAQqF,QAAQC,MACnC,cAAb,OAAHb,QAAG,IAAHA,OAAG,EAAHA,EAAKlO,SAAyB,QACrCiF,SAEE,OAAHiJ,QAAG,IAAHA,OAAG,EAAHA,EAAKlO,WAGd+E,gBAACiJ,IAAS,CAAA/I,SAAA,CACNK,eAAC0J,IAAO,CAACxH,MAAM,mBAAkBvC,SAC7BK,eAAC2J,IAAU,CAAClJ,QAAS,kBA9H5C,SAAClI,GACtBmM,EAAQkF,KAAK,+BAADhR,OAAgCL,EAAE,eAClD,CA4H2EsR,CAAoB,OAAHjB,QAAG,IAAHA,OAAG,EAAHA,EAAKrQ,GAAG,EAACoH,SACjDK,eAAC8J,KAAW,CAACrG,MAAM,UAAU/D,MAAO,CAAEqK,OAAQ,iBAItD/J,eAAC0J,IAAO,CAACxH,MAAM,gBAAevC,SAC1BK,eAAC2J,IAAU,CAAClJ,QAAS,kBAAMgG,GAAe,OAAHmC,QAAG,IAAHA,OAAG,EAAHA,EAAKrQ,GAAG,EAACoH,SAC5CK,eAACgK,IAAY,CAACvG,MAAM,UAAU/D,MAAO,CAAEqK,OAAQ,iBAIvD/J,eAAC0J,IAAO,CAACxH,MAAM,iBAAgBvC,SAC3BK,eAAC2J,IAAU,CAAClJ,QAAS,kBAtH7C8F,EAsHkEqC,EArHtFzN,GAAmB,QACnBmK,GAAqBiB,GAFF,IAACA,CAsHsE,EAAC5G,SAC3CK,eAACiK,IAAQ,CAACxG,MAAM,UAAU/D,MAAO,CAAEqK,OAAQ,iBAGnD/J,eAAC0J,IAAO,CAACxH,MAAM,iBAAgBvC,SAC3BK,eAAC2J,IAAU,CACPlJ,QAAS,WACL4F,GAAiB,CACbJ,QAAQ,EACR/D,MAAO,iBACPgE,SAAU,gDACVgE,UAAW,WACP5D,GAAc,OAAHsC,QAAG,IAAHA,OAAG,EAAHA,EAAKrQ,GACpB,GAER,EAAEoH,SAEFK,eAACmK,IAAiB,CAAC1G,MAAM,QAAQ/D,MAAO,CAAEqK,OAAQ,sBAjE7CnB,EAAIrQ,GAqER,MAzEzByH,eAAA,WAASN,MAAO,CAAE0K,UAAW,UAAWzK,SAAC,kCA+ErDK,eAACqK,IAAe,CACZC,mBAAoB,CAAC,GAAI,GAAI,IAC7BxB,UAAU,MACVyB,MAAOzE,GACP1L,YAAaA,GACbD,KAAMA,EACNqQ,aA/JK,SAAC9C,EAAO+C,GAC7BxF,EAAQwF,EACZ,EA8JoBC,oBA5JY,SAAChD,GAC7BxC,IAAgBwC,EAAMpF,OAAO5K,MAEjC,EA0JoBiT,GAAI,CACA,oCAAqC,CACjCC,aAAc,GAElB,kCAAmC,CAC/BA,aAAc,SAK7B1P,GACG8E,eAAChF,GAAW,CACRE,gBAAiBA,EACjBC,mBAAoBA,EACpBE,UAAW9C,EACX+C,SAAUyJ,EACV3J,WAAYiK,KAGnBe,IAAiBpG,eAAC6K,IAAa,CAACzE,cAAeA,GAAeC,iBAAkBA,SAIjG,C","file":"static/js/58.2194bbae.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m1.1-2H3.9c-.5 0-.9.4-.9.9v16.2c0 .4.4.9.9.9h16.2c.4 0 .9-.5.9-.9V3.9c0-.5-.5-.9-.9-.9zM11 7h6v2h-6V7zm0 4h6v2h-6v-2zm0 4h6v2h-6zM7 7h2v2H7zm0 4h2v2H7zm0 4h2v2H7z\"\n}), 'ListAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4 6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","import { http } from '../../../utils/http';\nimport { setMessage } from '../MessageActions';\nimport {\n    GET_ALL_MEETING_START,\n    GET_ALL_MEETING_SUCCESS,\n    GET_ALL_MEETING_ERROR,\n    GET_MEETING_START,\n    GET_MEETING_SUCCESS,\n    GET_MEETING_ERROR\n} from '../../constants';\n\nconst getAllMeetingStart = () => {\n    return { type: GET_ALL_MEETING_START };\n};\nconst getAllMeetingSuccess = (payload) => {\n    return { type: GET_ALL_MEETING_SUCCESS, payload };\n};\nconst getAllMeetingError = (error) => {\n    return { type: GET_ALL_MEETING_ERROR, error };\n};\n\nconst getMeetingStart = () => {\n    return { type: GET_MEETING_START };\n};\nconst getMeetingSuccess = (payload) => {\n    return { type: GET_MEETING_SUCCESS, payload };\n};\nconst getMeetingError = (error) => {\n    return { type: GET_MEETING_ERROR, error };\n};\n\nconst addMeeting = (payload, id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'POST', `batches-service/meetings/batches/${id}`, payload, true)\n            .then((res) => {\n                if (res) {\n                    dispatch(setMessage(res?.message));\n                    successCB && successCB(res);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst cloneMeeting = (id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'POST', `batches-service/meetings/${id}/copy`, true)\n            .then((res) => {\n                if (res) {\n                    dispatch(setMessage(res?.message));\n                    successCB && successCB(res);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message ? err?.data?.message : 'Conflict'));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst updateMeeting = (payload, id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'PUT', `batches-service/meetings/${id}`, payload, true)\n            .then((res) => {\n                if (res) {\n                    dispatch(setMessage(res?.message));\n                    successCB && successCB(res);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst deleteMeeting = (id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'DELETE', `batches-service/meetings/${id}`, true)\n            .then((res) => {\n                dispatch(setMessage('Meeting deleted successfully'));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(setMessage(err?.data?.message))\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getMeeting = (id) => (dispatch) => {\n    dispatch(getMeetingStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'GET', `batches-service/meetings/${id}`, true)\n            .then((res) => {\n                const payload = {\n                    getMeetingData: res\n                };\n                dispatch(getMeetingSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getMeetingError(err));\n                dispatch(setMessage(err?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getAllMeeting =\n    (id, searchData = '', page = 1, rowsPerPage = 10) =>\n    (dispatch) => {\n        dispatch(getAllMeetingStart());\n        try {\n            http(\n                process.env.REACT_APP_ROOT_URL_BATCHES,\n                'GET',\n                `batches-service/meetings/batches/${id}?searchKey=${searchData}&pageNumber=${page}&pageSize=${rowsPerPage}`,\n                true\n            )\n                .then((res) => {\n                    const payload = {\n                        allMeetings: res\n                    };\n                    dispatch(getAllMeetingSuccess(payload));\n                })\n                .catch((err) => {\n                    dispatch(getAllMeetingError(err));\n                    dispatch(setMessage(err?.message));\n                });\n        } catch (error) {\n            dispatch(getAllMeetingError('Something went wrong'));\n        }\n    };\n\nexport { updateMeeting, getAllMeeting, addMeeting, cloneMeeting, deleteMeeting, getMeeting };\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFSelect } from '../../../../components/hook-form';\nimport * as yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMeeting, updateMeeting, getAllMeeting } from '../../../../store/actions/MeetingActions';\n\nimport CircularProgressLoader from '../../../../ui-component/CircularProgressLoader';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\nimport { getAllSessions } from '../../../../services/ModuleServices';\nimport useStyles from '../../../DialogStyles';\nimport moment from 'moment/moment';\n\nconst STATUS_ITEMS = [\n    { id: 0, status: 'PENDING' },\n    { id: 1, status: 'ACTIVE' }\n];\n\nconst validationSchema = yup.object({\n    agenda: yup.string('Enter Title').required('Agenda is required'),\n    sessionId: yup.string('Select Session').required('Session is required')\n});\n\nexport default function AddMeetings(props) {\n    const { openAddMeetings, setOpenAddMeetings, isEditData, meetingId, moduleId } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [startUTC, setStartUTC] = useState(null);\n    const [endUTC, setEndUTC] = useState(null);\n\n    const getFormattedDateTime = (date) => {\n        const splittedDate = date.split('T')[0];\n        const splittedTime = date.split('T')[1];\n\n        //2022-06-19T07:17:00Z\n        const firstSplit = splittedTime.split(':');\n\n        return splittedDate + 'T' + firstSplit[0] + ':' + firstSplit[1];\n    };\n\n    let utcStartTime = isEditData?.startDateTime;\n\n    var startdate = moment.utc(utcStartTime).format();\n\n    var returned_startdate = moment.utc(startdate).add(5, 'hours').add(30, 'minutes').format(); // see the cloning?\n\n    let localStartTime = getFormattedDateTime(returned_startdate);\n\n    let utcEndTime = isEditData?.endDateTime;\n\n    var enddate = moment.utc(utcEndTime).format();\n\n    var returned_enddate = moment.utc(enddate).add(5, 'hours').add(30, 'minutes').format(); // see the cloning?\n\n    let localEndTime = getFormattedDateTime(returned_enddate);\n\n    const formInitialSchema = {\n        agenda: isEditData?.agenda,\n        sessionId: isEditData?.sessionId || '',\n        startDateTime: startUTC || '',\n        endDateTime: endUTC || '',\n        status: isEditData?.status || 'PENDING'\n    };\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: formInitialSchema\n    });\n\n    const { reset, handleSubmit } = methods;\n\n    const handlePopupClose = () => {\n        setOpenAddMeetings(false);\n        reset();\n    };\n\n    const start_Date_time = new Date(startUTC).toISOString();\n\n    const end_Date_time = new Date(endUTC).toISOString();\n\n    const onSubmit = (data) => {\n        const payload = {\n            agenda: data?.agenda,\n            sessionId: data?.sessionId,\n            startDateTime: start_Date_time,\n            endDateTime: end_Date_time,\n            status: data?.status\n        };\n\n        if (isEditData) {\n            dispatch(\n                updateMeeting(payload, isEditData.id, () => {\n                    dispatch(getAllMeeting(meetingId));\n                })\n            );\n            handlePopupClose();\n        } else {\n            dispatch(\n                addMeeting(payload, meetingId, () => {\n                    dispatch(getAllMeeting(meetingId));\n                })\n            );\n            handlePopupClose();\n        }\n    };\n    const [sessionList, setSessionList] = useState([]);\n\n    const GetAllSessions = async (moduleId) => {\n        await getAllSessions(moduleId)\n            .then((res) => {\n                setSessionList(res);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    useEffect(() => {\n        GetAllSessions(moduleId);\n        setStartUTC(localStartTime);\n        setEndUTC(localEndTime);\n    }, [localStartTime, localEndTime]);\n\n    return (\n        <div style={{}}>\n            <Dialog open={openAddMeetings} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add Meeting' : 'Update Meeting'}</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={6}>\n                                        <label>\n                                            Agenda <span className={classes.mandatory}>*</span>\n                                        </label>\n                                        <RHFTextField name=\"agenda\" placeholder=\"Agenda here\" className={classes.textField} autoFocus />\n                                    </Grid>\n                                    <br /> <br />\n                                    <Grid item xs={12} sm={6}>\n                                        <label> Session </label>\n                                        <RHFSelect name=\"sessionId\" label=\"\">\n                                            <option value={''}> Choose a session </option>\n                                            {sessionList?.map((item) => (\n                                                <option\n                                                    key={item?.id}\n                                                    value={item?.id}\n                                                    defaultValue={\n                                                        item?.id ===\n                                                        sessionList?.filter((sess) => sess.id === isEditData?.sessionList)[0]?.id\n                                                    }\n                                                >\n                                                    {item?.title}\n                                                </option>\n                                            ))}\n                                        </RHFSelect>\n                                    </Grid>\n                                    <br />\n                                    <br />\n                                    <Grid item xs={12} sm={6}>\n                                        <label>\n                                            Start(Date/Time) <span className={classes.mandatory}>*</span>\n                                        </label>\n                                        <RHFTextField\n                                            name=\"startDateTime\"\n                                            type=\"datetime-local\"\n                                            placeholder=\"Start date-time here\"\n                                            className={classes.textField}\n                                            onChange={(e) => {\n                                                let receivedDataTime = e.target.value;\n\n                                                let currentDateTime = new Date();\n\n                                                let month =\n                                                    String(currentDateTime.getMonth()).length < 2\n                                                        ? '0' + (currentDateTime.getMonth() + 1)\n                                                        : currentDateTime.getMonth() + 1;\n\n                                                let date =\n                                                    String(currentDateTime.getDate()).length < 2\n                                                        ? '0' + currentDateTime.getDate()\n                                                        : currentDateTime.getDate();\n\n                                                let hours =\n                                                    String(currentDateTime.getHours()).length < 2\n                                                        ? '0' + currentDateTime.getHours()\n                                                        : currentDateTime.getHours();\n\n                                                let mins =\n                                                    String(currentDateTime.getMinutes()).length < 2\n                                                        ? '0' + currentDateTime.getMinutes()\n                                                        : currentDateTime.getMinutes();\n\n                                                let formattedDate = `${currentDateTime.getFullYear()}-${month}-${date}T${hours}:${mins}`;\n\n                                                if (receivedDataTime < formattedDate) receivedDataTime = formattedDate;\n                                                setStartUTC(receivedDataTime);\n                                            }}\n                                            value={startUTC}\n                                        />\n                                    </Grid>\n                                    <br />\n                                    <br />\n                                    <Grid item xs={12} sm={6}>\n                                        <label>\n                                            End(Date/Time) <span className={classes.mandatory}>*</span>\n                                        </label>\n                                        <RHFTextField\n                                            name=\"endDateTime\"\n                                            type=\"datetime-local\"\n                                            placeholder=\"End date-time here\"\n                                            className={classes.textField}\n                                            onChange={(e) => setEndUTC(e.target.value)}\n                                            value={endUTC}\n                                        />\n                                    </Grid>\n                                    <br />\n                                    <br />\n                                    <Grid item xs={12} sm={6}>\n                                        <label>\n                                            Status <span className={classes.mandatory}>*</span>\n                                        </label>\n                                        <RHFSelect name=\"status\" label=\"\">\n                                            {STATUS_ITEMS?.map((item, index) => (\n                                                <option key={index} value={item?.status}>\n                                                    {item?.status}\n                                                </option>\n                                            ))}\n                                        </RHFSelect>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n            <span className={classes.loader}>{isLoading ? CircularProgressLoader() : ''}</span>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cloneMeeting, deleteMeeting, getAllMeeting } from '../../../store/actions/MeetingActions';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport ConfirmDialog from '../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    Typography,\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport useStyles from '../../ViewTableStyles';\nimport AddMeetings from './add-meeting';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function Meetings() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'TEACHER','SUPER_ADMIN'] });\n    const history = useHistory();\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const { id, mId } = useParams();\n    const [value, setValue] = useState('');\n    const [openAddMeetings, setOpenAddMeetings] = useState(false);\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    const [isMeetingUpdateData, setMeetingUpdateData] = useState(null);\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n\n    const { allMeetings } = useSelector((state) => state?.meeting);\n    const newData = allMeetings?.content;\n    const totalCount = allMeetings?.totalElements;\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n\n    const clearGroup = async (mid) => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n        dispatch(\n            deleteMeeting(mid, () => {\n                dispatch(getAllMeeting(id));\n            })\n        );\n    };\n\n    const handleAssignment = (id) => {\n        history.push(`/admin/course/batch/meeting/${id}/assignment`);\n    };\n\n    const handleClone = async (mid) => {\n        dispatch(\n            cloneMeeting(mid, () => {\n                dispatch(getAllMeeting(id));\n            })\n        );\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        //setPage(0);\n    };\n    const handleMeetings = (mid) => {\n        setOpenAddMeetings(true);\n        setMeetingUpdateData(mid);\n    };\n    const handleSearch = (event) => {\n        setValue(event.target.value);\n    };\n    useEffect(() => {\n        dispatch(getAllMeeting(id, value ? value : '', page + 1, rowsPerPage));\n    }, [value, page, rowsPerPage]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; All Meetings </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div>\n                            <OutlinedInput\n                                label=\"hello\"\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                //value={value}\n                                onChange={(event) => handleSearch(event)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </div>\n                        <Grid style={{ display: 'flex' }}>\n                            &nbsp;&nbsp;\n                            {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                <div>\n                                    <Button\n                                        variant=\"contained\"\n                                        onClick={() => {\n                                            setOpenAddMeetings(true);\n                                            setMeetingUpdateData(null);\n                                        }}\n                                        className={classes.btnAdd}\n                                    >\n                                        Add Meeting\n                                    </Button>\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Agenda </TableCell>\n                                    <TableCell> Start (Date-Time) </TableCell>\n                                    <TableCell> End (Date-Time) </TableCell>\n                                    <TableCell> Url </TableCell>\n                                    <TableCell> Status </TableCell>\n                                    <TableCell> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row) => (\n                                        <StyledTableRow key={row.id}>\n                                            <TableCell>{row.agenda}</TableCell>\n                                            <TableCell>\n                                                <Moment format=\"YYYY/MM/DD hh:mm a\" date={row.startDateTime} />\n                                            </TableCell>\n                                            <TableCell>\n                                                <Moment format=\"YYYY/MM/DD hh:mm a\" date={row.endDateTime} />\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <div\n                                                    style={{\n                                                        display: 'block',\n                                                        width: '200px',\n                                                        whiteSpace: 'nowrap',\n                                                        overflow: 'hidden',\n                                                        textOverflow: 'ellipsis'\n                                                    }}\n                                                >\n                                                    <a href={row.startUrl}> {row.startUrl}</a>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'PENDING' && theme.palette.warning.dark) ||\n                                                            (row?.status === 'INACTIVE' && 'blue')\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell>\n                                                <Tooltip title=\"View Assignments\">\n                                                    <IconButton onClick={() => handleAssignment(row?.id)}>\n                                                        <ListAltIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n\n                                                <Tooltip title=\"Clone Meeting\">\n                                                    <IconButton onClick={() => handleClone(row?.id)}>\n                                                        <FileCopyIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n\n                                                <Tooltip title=\"Update Meeting\">\n                                                    <IconButton onClick={() => handleMeetings(row)}>\n                                                        <EditIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <Tooltip title=\"Delete meeting\">\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            setConfirmDialog({\n                                                                isOpen: true,\n                                                                title: 'Delete Meeting',\n                                                                subTitle: 'Are you sure you want to delete this meeting.',\n                                                                onConfirm: () => {\n                                                                    clearGroup(row?.id);\n                                                                }\n                                                            });\n                                                        }}\n                                                    >\n                                                        <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={totalCount}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openAddMeetings && (\n                    <AddMeetings\n                        openAddMeetings={openAddMeetings}\n                        setOpenAddMeetings={setOpenAddMeetings}\n                        meetingId={id}\n                        moduleId={mId}\n                        isEditData={isMeetingUpdateData}\n                    />\n                )}\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}