{"version":3,"sources":["views/online-classes/assignments/add-assignment/index.js","views/online-classes/assignments/assignment-details/index.js"],"names":["STATUS_ITEMS","id","status","validationSchema","yup","title","required","trim","description","endDate","AddAssignment","props","openAddAssignments","setOpenAddAssignments","isEditData","batchId","classes","useStyles","dispatch","useDispatch","formInitialSchema","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","handlePopupClose","_jsx","children","_jsxs","Dialog","open","paper","dialog","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","onSubmit","data","payload","updateAssignment","getAllAssignment","addAssignment","DialogContent","Grid","container","item","xs","mandatory","RHFTextField","name","placeholder","textField","autoFocus","type","RHFSelect","label","map","index","value","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","buttonSubmit","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AssignmentDetails","_newData$slice","useUserRole","roleList","useTheme","history","useHistory","useParams","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","isAssignUpdateData","setAssignUpdateData","allAssignments","useSelector","state","course","newData","content","totalCount","totalElements","_useState9","isOpen","subTitle","_useState10","confirmDialog","setConfirmDialog","_useState11","_useState12","isSearchAssignment","setSearchAssignment","useEffect","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","display","justifyContent","OutlinedInput","searchControl","onChange","event","target","handleSearchAssignment","startAdornment","InputAdornment","position","IconSearch","stroke","size","btnAddAssignment","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","slice","row","success","main","warning","dark","Tooltip","IconButton","Visibility","push","concat","handleViewSubmissions","cursor","handleViewAssignment","aid","EditIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","AddAssignments","ConfirmDialog"],"mappings":"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","file":"static/js/91.f40bb4bc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFSelect } from '../../../../components/hook-form';\nimport * as yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch } from 'react-redux';\nimport { updateAssignment, getAllAssignment, addAssignment } from '../../../../store/actions/CourseActions';\nimport useStyles from '../../../DialogStyles';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\n\nconst STATUS_ITEMS = [\n    { id: 0, status: 'PENDING' },\n    { id: 1, status: 'ACTIVE' }\n];\n\nconst validationSchema = yup.object({\n    title: yup.string('Enter Title').required('Title is required').trim(),\n    description: yup.string('Enter description here').required('Description is required').trim(),\n    endDate: yup.string('End date here').required('Date is required'),\n    status: yup.string('Select status here').required('Status is required')\n});\n\nexport default function AddAssignment(props) {\n    const { openAddAssignments, setOpenAddAssignments, isEditData, batchId } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const formInitialSchema = {\n        title: isEditData?.title || '',\n        description: isEditData?.description || '',\n        endDate: isEditData?.endDate || '',\n        status: isEditData?.status || 'PENDING'\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: formInitialSchema\n    });\n\n    const { reset, handleSubmit } = methods;\n\n    const handlePopupClose = () => {\n        setOpenAddAssignments(false);\n        reset();\n    };\n\n    const onSubmit = (data) => {\n        const payload = {\n            title: data?.title,\n            description: data?.description,\n            endDate: data?.endDate,\n            status: data?.status\n        };\n\n        if (isEditData) {\n            dispatch(\n                updateAssignment(payload, isEditData.id, () => {\n                    dispatch(getAllAssignment(batchId));\n                    handlePopupClose();\n                })\n            );\n            handlePopupClose();\n        } else {\n            dispatch(\n                addAssignment(payload, batchId, () => {\n                    dispatch(getAllAssignment(batchId));\n                    handlePopupClose();\n                })\n            );\n            handlePopupClose();\n        }\n    };\n    return (\n        <div>\n            <Dialog\n                open={openAddAssignments}\n                // onClose={handlePopupClose}\n                classes={{ paper: classes.dialog }}\n            >\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add Assignment' : 'Update Assignment'}</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <label>\n                                    Title <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"title\" placeholder=\"Title here\" className={classes.textField} autoFocus />\n                                <br /> <br />\n                                <label>\n                                    Description <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"description\" placeholder=\"Description here\" className={classes.textField} />\n                                <br />\n                                <br />\n                                <label>\n                                    Deadline <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"endDate\" type=\"date\" className={classes.textField} />\n                                <br /> <br />\n                                <label>\n                                    Status <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFSelect name=\"status\" label=\"\">\n                                    {STATUS_ITEMS?.map((item, index) => (\n                                        <option key={index} value={item?.status}>\n                                            {item?.status}\n                                        </option>\n                                    ))}\n                                </RHFSelect>\n                                <br />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getAllAssignment, getAssignment } from '../../../../store/actions/CourseActions';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport { useParams } from 'react-router-dom';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Typography,\n    Tooltip\n} from '@material-ui/core';\nimport { IconSearch } from '@tabler/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport AddAssignments from '../../assignments/add-assignment';\nimport { Visibility } from '@material-ui/icons';\nimport useStyles from '../../../ViewTableStyles';\nimport useUserRole from '../../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AssignmentDetails() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'TEACHER','SUPER_ADMIN'] });\n    const theme = useTheme();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [openAddAssignments, setOpenAddAssignments] = useState(false);\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    const [isAssignUpdateData, setAssignUpdateData] = useState(null);\n\n    const { allAssignments } = useSelector((state) => state?.course);\n    const newData = allAssignments?.content;\n    const totalCount = allAssignments?.totalElements;\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n\n    const [isSearchAssignment, setSearchAssignment] = useState('');\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleAddAssignment = (aid) => {\n        setOpenAddAssignments(true);\n        setAssignUpdateData(aid);\n    };\n\n    const handleViewSubmissions = (id) => {\n        history.push(`/admin/assignment/${id}/submission`);\n    };\n    const handleViewAssignment = (id) => {\n        history.push(`/admin/assignment/${id}`);\n    };\n    const handleSearchAssignment = (event) => {\n        setSearchAssignment(event.target.value);\n    };\n    useEffect(() => {\n        dispatch(getAllAssignment(id, isSearchAssignment ? isSearchAssignment : '', page + 1, rowsPerPage));\n    }, [isSearchAssignment, page, rowsPerPage]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; All Assignments </span>\n                </div>\n\n                <br />\n                <Paper elevation={5} className={classes.root}>\n                    <Grid style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                onChange={(event) => handleSearchAssignment(event)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </div>\n                        <div>\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => {\n                                    setOpenAddAssignments(true);\n                                    setAssignUpdateData(null);\n                                }}\n                                className={classes.btnAddAssignment}\n                            >\n                                Add Assignment\n                            </Button>\n                        </div>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Title </TableCell>\n                                    <TableCell> Description </TableCell>\n                                    <TableCell align=\"center\"> Deadline </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell> {row?.title} </TableCell>\n                                            <TableCell> {row?.description} </TableCell>\n                                            <TableCell align=\"center\"> {row?.endDate} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'PENDING' && theme.palette.warning.dark) ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n\n                                            <TableCell align=\"right\">\n                                                <Tooltip title=\"View Submissions\">\n                                                    <IconButton>\n                                                        <Visibility\n                                                            color=\"primary\"\n                                                            onClick={() => handleViewSubmissions(row?.id)}\n                                                            style={{ cursor: 'pointer' }}\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <Tooltip title=\"View doc links\">\n                                                    <IconButton>\n                                                        <Visibility\n                                                            color=\"primary\"\n                                                            onClick={() => handleViewAssignment(row?.id)}\n                                                            style={{ cursor: 'pointer' }}\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n\n                                                <Tooltip title=\"Update Assignment\">\n                                                    <IconButton onClick={() => handleAddAssignment(row)}>\n                                                        <EditIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={totalCount}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openAddAssignments && (\n                    <AddAssignments\n                        openAddAssignments={openAddAssignments}\n                        setOpenAddAssignments={setOpenAddAssignments}\n                        isEditData={isAssignUpdateData}\n                        batchId={id}\n                    />\n                )}\n\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}