{"version":3,"sources":["views/students/Refer/styles.js","views/students/Refer/index.js"],"names":["makeStyles","theme","_searchControl","paper","padding","mandatory","color","palette","error","main","label","marginBottom","marginLeft","input","marginTop","submit","width","height","boxShadow","img","border","borderRadius","divider","form","title","paddingLeft","paddingTop","paddingBottom","loader","position","top","left","transform","zIndex","loginInput","_objectSpread","typography","customInput","schoolList","grey500","display","em","fontStyle","ScrollHeight","maxHeight","overflowX","categoryBox","maxWidth","backgroundColor","background","overflow","listSection","ul","table","minWidth","tableContainer","tableHeaderCell","fontWeight","primary","light","status","fontSize","root","btnAddPlanOptions","cursor","titleContainer","pageTitle","viewIcon","verticalAlign","searchControl","paddingRight","_defineProperty","breakpoints","down","startAdornment","grey","imageContainer","imageInput","justifyContent","alignItems","textAlignEnd","validationSchema","yup","referrals","of","name","required","referredFor","email","mobile","message","Refer","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setReferData","classes","useStyles","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_error$data","wrap","_context","prev","next","referAFriend","setMessage","window","location","reload","t0","console","log","data","stop","_x","apply","arguments","formik","useFormik","initialValues","enableReinitialize","handleAddClick","setFieldValue","concat","_toConsumableArray","_jsxs","_Fragment","children","_jsx","Header","MainCard","style","margin","className","HistoryIcon","Paper","elevation","handleSubmit","map","referral","index","React","Fragment","Typography","Grid","container","spacing","item","xs","OutlinedInput","textField","fullWidth","variant","id","size","value","onChange","handleChange","Select","placeholder","renderValue","selected","inputProps","MenuItem","type","length","Button","onClick","filter","_","i","handleRemoveClick","TextField","multiline","minRows","resize","FooterNew"],"mappings":"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","file":"static/js/6.ecc85cec.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n    paper: {\n        padding: 30\n    },\n    mandatory: {\n        color: theme.palette.error.main\n    },\n    label: {\n        marginBottom: 0,\n        marginLeft: 10\n    },\n    input: {\n        marginTop: 3,\n        marginBottom: 0\n    },\n    submit: {\n        width: 100,\n        height: 40,\n        marginTop: 30,\n        boxShadow: '0 0.5em 0.5em -0.4em #68c2d9',\n        '&:hover': {\n            boxShadow: '0 0.5em 0.5em 0.1em #68c2d9'\n        }\n    },\n    img: {\n        border: '1px solid #D3D3D3',\n        width: '200px',\n        height: '160px',\n        borderRadius: 12,\n        marginTop: 0\n    },\n    divider: {\n        marginTop: 10\n    },\n    form: {\n        padding: '30px 60px'\n    },\n    title: {\n        paddingLeft: 40,\n        paddingTop: 20,\n        paddingBottom: 5\n    },\n    loader: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 1000\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    },\n    schoolList: {\n        marginTop: 8,\n        marginBottom: 8,\n        '& > label': {\n            top: '10px',\n            left: 0,\n            color: theme.grey500,\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    em: {\n        fontStyle: 'normal',\n        color: '#D3D3D3'\n    },\n    ScrollHeight: {\n        height: '100%',\n        width: '100%',\n        maxHeight: 'calc(100vh - 390px)',\n        overflowX: 'hidden',\n        border: '1px solid #D3D3D3',\n        borderRadius: 8,\n        marginTop: 8\n    },\n    categoryBox: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300\n    },\n    listSection: {\n        backgroundColor: 'inherit'\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0\n    },\n    table: {\n        minWidth: 650\n    },\n    tableContainer: {\n        borderRadius: 15,\n        marginTop: 16\n    },\n    tableHeaderCell: {\n        fontWeight: 'lighter',\n        backgroundColor: theme.palette.primary.light,\n        color: '#ffffff'\n    },\n    status: {\n        fontWeight: 'lighter',\n        fontSize: '0.75rem',\n        color: 'white',\n        backgroundColor: 'gray',\n        borderRadius: 8,\n        padding: '3px 10px',\n        display: 'inline-block'\n    },\n    root: {\n        padding: 16,\n        width: '100%'\n    },\n    btnAddPlanOptions: {\n        cursor: 'pointer',\n        boxShadow: '0 0.5em 0.5em 0.1em #68c2d9'\n    },\n    titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n\n    viewIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    searchControl: {\n        width: '234px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n    imageContainer: {\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 40\n        }\n    },\n    imageInput: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            textAlignEnd: 'center'\n        }\n    }\n}));\n","import React, { useState } from 'react';\nimport Header from '../../home/components/header';\nimport FooterNew from '../../home/components/FooterNew';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport useStyles from './styles';\nimport HistoryIcon from '@material-ui/icons/History';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from '../../../store/actions/MessageActions';\nimport Select from '@material-ui/core/Select';\nimport { Grid, Typography, Button, Paper, OutlinedInput, TextField, MenuItem } from '@material-ui/core';\nimport { referAFriend } from '../../../services/referServices';\n\nconst validationSchema = yup.object({\n    referrals: yup.array().of(\n        yup.object({\n            name: yup.string('Enter Name').required('Name is required'),\n            referredFor: yup.string('Select refer for').required('Refer For is required'),\n            email: yup.string('Enter email address').required('Email address is required'),\n            mobile: yup.string('Enter mobile number').required('Mobile number is required'),\n            message: yup.string('Enter message')\n        })\n    )\n});\n\nfunction Refer() {\n    const dispatch = useDispatch();\n    const [referData, setReferData] = useState([]);\n    const classes = useStyles();\n\n    const initialValues = {\n        referrals: [{ name: '', email: '', referredFor: '', mobile: '', message: '' }]\n    };\n\n    const onSubmit = async (values) => {\n        try {\n            await referAFriend(values.referrals);\n            setReferData(values.referrals);\n            dispatch(setMessage('Added Successfully!'));\n            window.location.reload();\n        } catch (error) {\n            console.log(error);\n            dispatch(setMessage(error?.data?.message));\n        }\n    };\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        enableReinitialize: true,\n        onSubmit\n    });\n\n    const handleRemoveClick = (index) => {\n        const { referrals } = formik.values;\n        formik.setFieldValue(\n            'referrals',\n            referrals.filter((_, i) => i !== index)\n        );\n    };\n\n    const handleAddClick = () => {\n        const { referrals } = formik.values;\n        formik.setFieldValue('referrals', [...referrals, { name: '', email: '', referredFor: '', mobile: '', message: '' }]);\n    };\n\n    return (\n        <>\n            <Header />\n            <MainCard style={{ margin: '20px' }}>\n                <div className={classes.titleContainer}>\n                    <HistoryIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Refer a friend </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <br />\n                    <form onSubmit={formik.handleSubmit}>\n                        <MainCard>\n                            {formik.values.referrals.map((referral, index) => (\n                                <React.Fragment key={index}>\n                                    <Typography style={{ color: '#68c2d9' }}>Referral</Typography>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={2.5}>\n                                            <label className={classes.label}>\n                                                Name<span className={classes.mandatory}>*</span>\n                                            </label>\n                                            <OutlinedInput\n                                                className={classes.textField}\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id={`name-${index}`}\n                                                name={`referrals[${index}].name`}\n                                                size=\"small\"\n                                                value={referral.name}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={2.5}>\n                                            <label className={classes.label}>\n                                                Referred For<span className={classes.mandatory}>*</span>\n                                            </label>\n                                            <Select\n                                                className={classes.textField}\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id={`referredFor-${index}`}\n                                                name={`referrals[${index}].referredFor`}\n                                                size=\"small\"\n                                                placeholder=\"Select Referred For\"\n                                                value={referral.referredFor}\n                                                onChange={formik.handleChange}\n                                                renderValue={(selected) => selected}\n                                                inputProps={{ 'aria-label': 'Without label' }}\n                                            >\n                                                <MenuItem value=\"LIBRARY\">LIBRARY</MenuItem>\n                                                <MenuItem value=\"ONLINE_CLASS\">ONLINE CLASS</MenuItem>\n                                            </Select>\n                                        </Grid>\n                                        <Grid item xs={2.5}>\n                                            <label className={classes.label}>\n                                                Email<span className={classes.mandatory}>*</span>\n                                            </label>\n                                            <OutlinedInput\n                                                className={classes.textField}\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id={`email-${index}`}\n                                                name={`referrals[${index}].email`}\n                                                size=\"small\"\n                                                value={referral.email}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={2.5}>\n                                            <label className={classes.label}>\n                                                Mobile<span className={classes.mandatory}>*</span>\n                                            </label>\n                                            <OutlinedInput\n                                                className={classes.textField}\n                                                type=\"number\"\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id={`mobile-${index}`}\n                                                name={`referrals[${index}].mobile`}\n                                                size=\"small\"\n                                                value={referral.mobile}\n                                                onChange={formik.handleChange}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={2} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                            {formik.values.referrals.length > 1 && (\n                                                <Button style={{ color: 'red' }} size=\"small\" onClick={() => handleRemoveClick(index)}>\n                                                    Remove\n                                                </Button>\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid xs={12}>\n                                        <label> Short Message: </label>\n                                        <br />\n                                        <TextField\n                                            id={`message-${index}`}\n                                            name={`referrals[${index}].message`}\n                                            multiline\n                                            minRows={2}\n                                            value={referral.message}\n                                            onChange={formik.handleChange}\n                                            style={{ borderRadius: '6px', width: '40%', resize: 'none' }}\n                                        />\n                                    </Grid>\n                                    <br />\n                                    {formik.values.referrals.length - 1 === index && (\n                                        <Button variant=\"outlined\" onClick={handleAddClick}>\n                                            Add more Referral\n                                        </Button>\n                                    )}\n                                </React.Fragment>\n                            ))}\n                        </MainCard>\n                        <br />\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                            Submit\n                        </Button>\n                    </form>\n                </Paper>\n            </MainCard>\n            <FooterNew />\n        </>\n    );\n}\n\nexport default Refer;\n"],"sourceRoot":""}