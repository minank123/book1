{"version":3,"sources":["views/online-classes/batches/add-student/index.js","views/online-classes/batches/students/index.js"],"names":["AddStudent","props","isOpen","setOpen","batchId","classes","useStyles","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","selectedOptions","setSelectedOptions","getSearchedProfileData","useSelector","state","addUser","handlePopupClose","useEffect","userProfileSearch","_jsx","children","_jsxs","Dialog","open","paper","dialog","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","href","onClick","e","preventDefault","CloseIcon","closeIcon","DialogContent","Grid","container","item","xs","mandatory","Autocomplete","autoHighlight","id","options","getOptionLabel","option","emailFirstNameLastName","onChange","event","value","onInputChange","filterSelectedOptions","renderInput","params","TextField","_objectSpread","variant","Divider","marginTop","DialogActions","dialogAction","Button","color","buttonCancel","type","add_Student_In_Batch","profileId","get_Batch_All_Student","buttonSubmit","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","BatchStudents","useParams","setValue","_useState3","_useState4","openAddStudent","setOpenAddStudent","_useState5","_useState6","page","setPage","_useState7","_useState8","rowsPerPage","setRowsPerPage","loggedUserProfile","userProfile","allStudentsData","course","_useState9","title","subTitle","_useState10","confirmDialog","setConfirmDialog","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","display","justifyContent","alignItems","Box","sx","md","OutlinedInput","searchControl","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","inputProps","role","btnAddBatch","cursor","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","slice","map","row","email","firstName","lastName","mobile","Tooltip","IconButton","onConfirm","teacherId","delete_Student_In_Batch","DeleteForeverIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","newPage","onRowsPerPageChange","marginBottom","ConfirmDialog"],"mappings":"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","file":"static/js/93.91b8edb3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '../../../DialogStyles';\nimport { userProfileSearch } from '../../../../store/actions/AddUserActions';\nimport { add_Student_In_Batch, get_Batch_All_Student } from '../../../../store/actions/CourseActions';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Typography,\n    Grid,\n    Link,\n    Divider,\n    TextField,\n    Autocomplete\n} from '@material-ui/core';\n\nexport default function AddStudent(props) {\n    const { isOpen, setOpen, batchId } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [selectedOptions, setSelectedOptions] = useState(null);\n    const { getSearchedProfileData } = useSelector((state) => state?.addUser);\n\n    const handlePopupClose = () => {\n        setOpen(false);\n    };\n    const handleChange = (event, value) => setSelectedOptions(value);\n\n    const handleInputChange = (event, value) => {\n        dispatch(userProfileSearch(value, 'STUDENT'));\n    };\n\n    const handleSubmitData = () => {\n        dispatch(\n            add_Student_In_Batch(selectedOptions?.profileId, batchId, () => {\n                dispatch(get_Batch_All_Student(batchId));\n                handlePopupClose();\n            })\n        );\n    };\n\n    useEffect(() => {\n        dispatch(userProfileSearch('', 'STUDENT'));\n    }, [dispatch]);\n\n    return (\n        <div>\n            <Dialog open={isOpen} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}> Add Student </Typography>\n                        <Link\n                            href=\"#\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                handlePopupClose();\n                            }}\n                        >\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <label>\n                                Students<span className={classes.mandatory}>*</span>\n                            </label>\n                            <Autocomplete\n                                autoHighlight\n                                id=\"students\"\n                                options={getSearchedProfileData}\n                                getOptionLabel={(option) => option.emailFirstNameLastName}\n                                onChange={handleChange}\n                                onInputChange={handleInputChange}\n                                filterSelectedOptions\n                                renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <Divider style={{ marginTop: 15 }} />\n                <DialogActions className={classes.dialogAction}>\n                    <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"contained\" type=\"submit\" onClick={handleSubmitData} className={classes.buttonSubmit}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Box,\n    Tooltip\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get_Batch_All_Student, delete_Student_In_Batch } from '../../../../store/actions/CourseActions';\nimport useStyles from '../../../ViewTableStyles';\nimport { IconSearch } from '@tabler/icons';\nimport { useParams } from 'react-router-dom';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport AddStudent from '../add-student';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function BatchStudents() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const [value, setValue] = useState('');\n    const [openAddStudent, setOpenAddStudent] = useState(false);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const { allStudentsData } = useSelector((state) => state?.course);\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        //setPage(0);\n    };\n\n    const handleStudent = (batchId) => {\n        setOpenAddStudent(true);\n    };\n\n    const handleDelete = (teacherId) => {\n        dispatch(\n            delete_Student_In_Batch(teacherId, id, () => {\n                dispatch(get_Batch_All_Student(id));\n            })\n        );\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n    };\n\n    useEffect(() => {\n        dispatch(get_Batch_All_Student(id, value ? value : ''));\n    }, [value]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}> Batch Students </span>\n                </div>\n                <br />\n                <Paper elevation={5} className={classes.root}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Box sx={{ display: { xs: '12', md: 'block' } }}>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                value={value}\n                                color=\"secondary\"\n                                onChange={(e) => setValue(e.target.value)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    'aria-label': 'weight'\n                                }}\n                            />\n                        </Box>\n                        &nbsp;\n                        {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                    handleStudent();\n                                }}\n                                className={classes.btnAddBatch}\n                                style={{ cursor: 'pointer' }}\n                            >\n                                Add Student\n                            </Button>\n                        )}\n                    </div>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell>Email </TableCell>\n                                    <TableCell align=\"center\"> First Name </TableCell>\n                                    <TableCell align=\"center\"> Last Name </TableCell>\n                                    <TableCell align=\"center\"> Mobile </TableCell>\n                                    {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                        <TableCell align=\"right\"> Action </TableCell>\n                                    )}\n                                </StyledTableRow>\n                            </TableHead>\n                            {!allStudentsData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {allStudentsData?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                                        <StyledTableRow key={row?.id}>\n                                            <TableCell>{row.email}</TableCell>\n                                            <TableCell align=\"center\">{row?.firstName}</TableCell>\n                                            <TableCell align=\"center\">{row?.lastName}</TableCell>\n                                            <TableCell align=\"center\">{row?.mobile}</TableCell>\n                                            {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                                <TableCell align=\"right\">\n                                                    <Tooltip title=\"Delete Student\">\n                                                        <IconButton\n                                                            onClick={() => {\n                                                                setConfirmDialog({\n                                                                    isOpen: true,\n                                                                    title: 'Delete Student',\n                                                                    subTitle: 'Are you sure you want to delete this student.',\n                                                                    onConfirm: () => {\n                                                                        handleDelete(row?.profileId);\n                                                                    }\n                                                                });\n                                                            }}\n                                                        >\n                                                            <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            )}\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 15, 25]}\n                        component=\"div\"\n                        count={allStudentsData?.length || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n\n                {openAddStudent && <AddStudent isOpen={openAddStudent} setOpen={setOpenAddStudent} batchId={id} />}\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}