{"version":3,"sources":["views/user-management/profile/AllProfile.js","views/user-management/styles.js","services/export.js","views/user-management/profile/AddProfileModal.js","ui-component/messages/SuccessMsg.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllProfile","_React$useState","React","useState","_React$useState2","_slicedToArray","setData","_useState","_useState2","isExporting","setExporting","classes","useStyles","useUserRole","roleList","dispatch","useDispatch","history","useHistory","role","useParams","useTheme","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","_useState9","_useState10","openModal","setModal","_useState11","_useState12","isEditData","_useState13","_useState14","_useState15","_useState16","isUserRole","setUserRole","_useState17","_useState18","searchValue","setSearchValue","_useState19","_useState20","debouncedSearchValue","setDebouncedSearchValue","getAllUserProfileData","useSelector","state","addUser","newData","content","totalCount","totalElements","reset","useForm","_useState21","_useState22","useEffect","roleStr","String","toUpperCase","replace","timer","setTimeout","clearTimeout","getAllUserProfile","userRoleNameExport","GetAllExport","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getAllExport","sent","t0","console","log","stop","apply","arguments","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","GroupIcon","pageTitleIcon","pageTitle","userRoleName","Paper","elevation","Grid","container","spacing","style","margin","OutlinedInput","searchControl","id","onChange","e","target","value","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","Button","variant","color","disabled","warning","dark","success","main","CircularProgress","marginRight","boxShadow","marginLeft","onClick","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","_row$user","_row$user2","_row$user3","_row$user4","_row$user5","Typography","status","user","libraryUser","classUser","concat","firstName","lastName","age","schoolName","email","mobile","Moment","format","date","createdAt","adminComment","Tooltip","title","IconButton","userId","push","VisibilityIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom","AddProfile","open","onClose","makeStyles","_searchControl","minWidth","borderRadius","marginTop","fontWeight","primary","light","fontSize","padding","display","width","background","paper","verticalAlign","paddingRight","paddingLeft","_defineProperty","breakpoints","down","grey","buttonSubmit","height","buttonCancel","label","dialog","dialogAction","justifyContent","closeIcon","cursor","dialogTitle","dialogTitleChild","mandatory","error","ScrollHeight","maxHeight","input","ellipsis","maxWidth","whiteSpace","overflow","textOverflow","roleName","Promise","resolve","reject","http","process","Accept","responseType","then","data","FileSaver","saveAs","Blob","catch","err","getUserExport","getTransactionExport","selected","transactionIds","getModuleTransactionExport","getBookExport","bookIds","getOrderExport","orderIds","getOrderBookExport","orderBookIds","getSubscriptionLibrary","subscriptionIds","addProfileSchema","yup","required","dob","STATUS_ITEM","STATUS_ITEMS","props","loggedUserProfile","userProfile","schoolList","school","initialValues","default","schoolId","classAndSection","comments","methods","mode","resolver","yupResolver","defaultValues","handleSubmit","hide","watch","getSchoolList","Dialog","DialogTitle","Link","to","CloseIcon","FormProvider","onSubmit","modifiedPayload","updateProfile","viewProfileById","AddProfiles","DialogContent","item","xs","sm","RHFTextField","name","loginInput","autoFocus","type","RHFSelect","index","nameBranch","multiline","rows","RHFCheckbox","Divider","DialogActions"],"mappings":"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","file":"static/js/26.40f58452.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { IconSearch } from '@tabler/icons';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SuccessMsg from '../../../ui-component/messages/SuccessMsg';\nimport ConfirmDialog from '../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport FileDownload from 'js-file-download';\nimport useStyles from '../styles';\nimport Moment from 'react-moment';\nimport { CSVLink, CSVDownload } from 'react-csv';\nimport {\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    Grid,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    CircularProgress\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllProfile, getAllUserProfile } from '../../../store/actions/AddUserActions';\nimport { useForm } from 'react-hook-form';\nimport { Tooltip } from '@mui/material';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport AddProfile from './AddProfileModal';\nimport useUserRole from '../../../hooks/useUserRole';\nimport { ExportToExcel } from '../admins/ExportToExcel';\nimport { getAllExport } from '../../../services/export';\nimport Cookies from 'js-cookie';\nimport { getProfileSubscription, getInvoice } from '../../../store/actions/SubscriptionActions';\nimport MainCard from '../../../ui-component/cards/MainCard';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllProfile() {\n    const [data, setData] = React.useState([]);\n    const [isExporting, setExporting] = useState(false);\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const history = useHistory();\n    let { role } = useParams();\n    const theme = useTheme();\n    const [page, setPage] = useState(0);\n\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n\n    const [isProfileId, setProfileId] = useState(null);\n    const [openModal, setModal] = useState(false);\n    const [isEditData, setEditData] = useState(null);\n    const [isSearchUser, setSearchUser] = useState('');\n    const [isUserRole, setUserRole] = useState('');\n\n    const [searchValue, setSearchValue] = useState('');\n\n    // Create a state variable to hold the debounced search value\n    const [debouncedSearchValue, setDebouncedSearchValue] = useState('');\n\n    const { getAllUserProfileData } = useSelector((state) => state?.addUser);\n    const newData = getAllUserProfileData?.content;\n    const totalCount = getAllUserProfileData?.totalElements;\n\n    const { reset } = useForm();\n    const [anchorEl, setAnchorEl] = useState(null);\n    useEffect(() => {\n        const roleStr = String(role).toUpperCase().replace('-', '_');\n        setUserRole(roleStr);\n    }, [role]);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleCloseModal = () => {\n        reset();\n        setModal(false);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    const handleProfile = (id) => {\n        history.push(`/admin/users/profile/${id}/${role}`);\n    };\n    const handleOpenModal = () => {\n        setEditData(null);\n        setModal(true);\n    };\n    const handleSearchUser = (event) => {\n        setSearchValue(event.target.value);\n    };\n\n    useEffect(() => {\n        const delay = 500;\n        const timer = setTimeout(() => {\n            setDebouncedSearchValue(searchValue);\n        }, delay);\n\n        return () => clearTimeout(timer);\n    }, [searchValue]);\n\n    useEffect(() => {\n        if (isUserRole) {\n            dispatch(getAllUserProfile(rowsPerPage, debouncedSearchValue ? debouncedSearchValue : '', page + 1, isUserRole));\n        }\n    }, [rowsPerPage, debouncedSearchValue, page, isUserRole]);\n\n    const userRoleName = (role) => {\n        switch (role) {\n            case 'ADMIN':\n                return 'Admin';\n            case 'SCHOOL_ADMIN':\n                return 'School-Admin';\n            case 'TEACHER':\n                return 'Teacher';\n            case 'STUDENT':\n                return 'Student';\n\n            default:\n                return role;\n        }\n    };\n    const userRoleNameExport = (role) => {\n        switch (role) {\n            case 'ADMIN':\n                return 'ADMIN';\n            case 'SCHOOL_ADMIN':\n                return 'SCHOOL_ADMIN';\n            case 'TEACHER':\n                return 'TEACHER';\n            case 'STUDENT':\n                return 'STUDENT';\n\n            default:\n                return role;\n        }\n    };\n\n    const fileName = 'myfile';\n\n    const GetAllExport = async () => {\n        setExporting(true);\n        try {\n            const response = await getAllExport(userRoleNameExport(isUserRole));\n            setData(response);\n            setExporting(false); // Set exporting state to false after the export API returns a response\n        } catch (error) {\n            console.log(error);\n            setExporting(false); // Set exporting state to false in case of an error\n        }\n    };\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <GroupIcon className={classes.pageTitleIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Bookeinstein {userRoleName(isUserRole)}</span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={2} style={{margin: 5}}>\n                        <OutlinedInput\n                            className={classes.searchControl}\n                            id=\"input-search-header\"\n                            onChange={(e) => handleSearchUser(e)}\n                            placeholder=\"Search\"\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                </InputAdornment>\n                            }\n                        />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <Button\n                            variant=\"contained\"\n                            style={{ backgroundColor: 'grey', color: 'white' }}\n                            disabled\n                        >\n                            No plan\n                        </Button>&nbsp;&nbsp;\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ backgroundColor: theme.palette.warning.dark, color: 'white' }}\n                            disabled\n                        >\n                            Class User\n                        </Button>&nbsp;&nbsp;\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ backgroundColor: '#add8e6', color: 'white' }}\n                            disabled\n                        >\n                            Library User\n                        </Button>&nbsp;&nbsp;\n                        <Button\n                            variant=\"contained\"\n                            style={{ backgroundColor: theme.palette.success.main, color: 'white' }}\n                            disabled\n                        >\n                            Both\n                        </Button>&nbsp;&nbsp;\n\n                        {isExporting ? (\n                            <CircularProgress style={{ marginRight: '10px' }} size={24} />\n                        ) : (\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9', marginLeft: '25px' }}\n                                onClick={GetAllExport}\n                            >\n                                Export\n                            </Button>\n                        )}\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\" id=\"table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell align=\"center\"> Cus ID </TableCell>\n\n                                    <TableCell align=\"center\"> Full Name </TableCell>\n                                    <TableCell align=\"centre\"> Age </TableCell>\n                                    <TableCell align=\"center\"> Delivery Status </TableCell>\n                                    <TableCell align=\"center\"> Email </TableCell>\n                                    <TableCell align=\"center\"> Mobile </TableCell>\n                                    <TableCell align=\"center\"> Joined </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"center\"> Comment </TableCell>\n                                    <TableCell align=\"center\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!getAllUserProfileData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row) => (\n                                        <StyledTableRow key={row?.id}>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            row?.user?.libraryUser ?\n                                                                row?.user?.classUser ? theme.palette.success.main : '#add8e6' :\n                                                                row?.user?.classUser ? theme.palette.warning.dark : ''\n                                                    }}\n                                                >\n                                                    {row?.id}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">{`${row?.firstName} ${row?.lastName}` || '-'}</TableCell>\n                                            <TableCell align='centre'>{row?.age}</TableCell>\n                                            <TableCell align=\"center\"> {row?.schoolName || 'Home'} </TableCell>\n                                            <TableCell align=\"center\"> {row?.user?.email} </TableCell>\n                                            <TableCell align=\"center\"> {row?.user?.mobile} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Moment format=\"YYYY/MM/DD\" date={row?.createdAt} />\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            row?.status === 'ACTIVE' ? theme.palette.success.main : theme.palette.warning.dark\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row?.adminComment ? \"Yes\" : \"No\"}</TableCell>\n                                            <TableCell align=\"center\">\n                                                <Tooltip title=\"View Profile\">\n                                                    <IconButton onClick={() => handleProfile(row?.userId)}>\n                                                        <VisibilityIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={totalCount}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openModal && <AddProfile open={openModal} onClose={handleCloseModal} isEditData={isEditData} isUserRole={isUserRole} />}\n            </MainCard>\n        </>\n    );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n    table: {\n        minWidth: 650\n    },\n    tableContainer: {\n        borderRadius: 15,\n        marginTop: 16\n    },\n    tableHeaderCell: {\n        fontWeight: 'lighter',\n        backgroundColor: theme.palette.primary.light,\n        color: '#ffffff'\n    },\n    status: {\n        fontWeight: 'lighter',\n        fontSize: '0.75rem',\n        color: 'white',\n        backgroundColor: 'gray',\n        borderRadius: 8,\n        padding: '5px 10px',\n        display: 'inline-block'\n    },\n    root: {\n        padding: 16,\n        width: '100%'\n    },\n    titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n    pageTitleIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    searchControl: {\n        width: '234px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n\n    //------Dialog styles--------\n\n    buttonSubmit: {\n        height: 40,\n        width: 100,\n        marginRight: 10\n    },\n    buttonCancel: {\n        height: 40,\n        width: 100\n    },\n    label: {\n        marginBottom: 5,\n        marginLeft: 10,\n        fontSize: 14\n    },\n    dialog: {\n        position: 'absolute'\n    },\n    dialogAction: {\n        justifyContent: 'right',\n        marginRight: 10,\n        marginBottom: 10,\n        marginTop: 10\n    },\n    closeIcon: {\n        color: '#FFFFFF',\n        marginBottom: '-5px',\n        cursor: 'pointer'\n    },\n    dialogTitle: {\n        backgroundColor: theme.palette.primary.main,\n        color: '#FFFFFF',\n        marginBottom: 20\n    },\n    dialogTitleChild: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    mandatory: {\n        color: theme.palette.error.main\n    },\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 240px)'\n    },\n    input: {\n        display: 'none'\n    },\n    ellipsis: {\n        maxWidth: 200, // percentage also works\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n","import { http } from '../utils/http';\nimport FileSaver from 'file-saver';\nimport { useParams } from 'react-router';\n\nexport const getAllExport = (roleName) => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL,\n            'GET',\n            `users-service/users/users/export/excel?role=${roleName}`,\n            {},\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'excel.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getUserExport = () => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL,\n            'GET',\n            `users-service/users/users/export/excel`,\n            {},\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'users.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getTransactionExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS,\n            'POST',\n            `subscriptions-service/transactions/export/excel`,\n            { transactionIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'transactions.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getModuleTransactionExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS,\n            'POST',\n            `subscriptions-service/transactions/module/export/excel`,\n            { transactionIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'transactions.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getBookExport = (selected) => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL_BOOK,\n            'POST',\n            `books-service/books/export/excel`,\n            { bookIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'books.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getOrderExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_ORDER,\n            'POST',\n            `orders-service/orders/export/excel`,\n            { orderIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'orders.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getOrderBookExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_ORDER,\n            'POST',\n            `orders-service/orders/books/export/excel`,\n            { orderBookIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'order-books.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getSubscriptionLibrary = (selected) => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS,\n            'POST',\n            `subscriptions-service/plan-subscriptions/export/excel`,\n            { subscriptionIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'subscriptions.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFCheckbox, RHFSelect } from '../../../components/hook-form';\nimport useStyles from '../styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { AddProfiles, viewProfileById } from '../../../store/actions/ProfileActions';\nimport { getAllSchool, getSchoolList } from '../../../store/actions/SchoolActions';\nimport { updateProfile } from '../../../store/actions/AddUserActions';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n        }\n    }\n};\n\nconst addProfileSchema = yup.object({\n    firstName: yup.string('Enter first name').required('First name is required'),\n    lastName: yup.string('Enter last name').required('Last name is required'),\n    status: yup.string('Status is required').required('Status is required'),\n    dob: yup.string('Enter Date Of Birth').required('Date Of Birth is required')\n});\n\nconst STATUS_ITEM = [\n    { id: 0, status: 'SELECT STATUS' },\n    { id: 1, status: 'ACTIVE' },\n    { id: 2, status: 'INACTIVE' }\n];\nconst STATUS_ITEMS = [\n    { id: 0, status: 'SELECT STATUS' },\n    { id: 1, status: 'ACTIVE_PENDING' },\n    { id: 2, status: 'ACTIVE_APPROVED' },\n    { id: 3, status: 'ACTIVE_REJECTED' }\n];\n\nexport default function AddProfile(props) {\n    const { open, onClose, isEditData, userId, isUserRole } = props;\n    console.log(isEditData);\n    // console.log('---User Role---', isUserRole);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    let { role } = useParams();\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n\n    const { schoolList } = useSelector((state) => state?.school);\n\n    const initialValues = {\n        firstName: isEditData?.firstName || '',\n        lastName: isEditData?.lastName || '',\n        default: isEditData?.default || false,\n        schoolId: isEditData?.schoolId || '',\n        classAndSection: isEditData?.classAndSection || '',\n        status: isEditData?.status,\n        dob: isEditData?.dob,\n        comments: isEditData?.adminComment\n    };\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(addProfileSchema),\n        defaultValues: initialValues\n    });\n\n    const { reset, handleSubmit, watch } = methods;\n    const hide = watch('schoolId');\n\n    useEffect(() => {\n        if (!isEditData) {\n            reset(initialValues);\n        }\n    }, [isEditData]);\n\n    const onSubmit = (data) => {\n        const payload = {\n            firstName: data?.firstName,\n            lastName: data?.lastName,\n            default: data?.default,\n            schoolId: data?.schoolId,\n            status: data?.status\n        };\n\n        let modifiedPayload = {};\n        if (data?.schoolId === '') {\n            modifiedPayload = {\n                firstName: data?.firstName,\n                lastName: data?.lastName,\n                default: data?.default,\n                status: data?.status,\n                dob: data?.dob,\n                adminComment: data?.comments\n            };\n        } else {\n            modifiedPayload = {\n                firstName: data?.firstName,\n                lastName: data?.lastName,\n                default: data?.default,\n                schoolId: data?.schoolId,\n                classAndSection: data?.classAndSection,\n                status: data?.status,\n                dob: data?.dob,\n                adminComment: data?.comments\n            };\n        }\n\n        if (isEditData) {\n            dispatch(\n                updateProfile(modifiedPayload, isEditData?.userId, isEditData?.id, () => {\n                    dispatch(viewProfileById(isEditData?.userId));\n                    reset(initialValues);\n                    onClose();\n                })\n            );\n        } else {\n            dispatch(\n                AddProfiles(modifiedPayload, userId, () => {\n                    dispatch(viewProfileById(userId));\n                    reset();\n                    onClose();\n                })\n            );\n        }\n    };\n\n    // const userRoleName = (role) => {\n    //     switch (role) {\n    //         case 'ADMIN':\n    //             return 'Admin';\n    //         case 'SCHOOL_ADMIN':\n    //             return 'School-Admin';\n    //         case 'TEACHER':\n    //             return 'Teacher';\n    //         case 'STUDENT':\n    //             return 'Student';\n\n    //         default:\n    //             return role;\n    //     }\n    // };\n\n    useEffect(() => {\n        // dispatch(getAllSchool());\n        dispatch(getSchoolList());\n    }, []);\n\n    return (\n        <div>\n            <Dialog open={open} onClose={onClose} maxWidth=\"xs\" classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{isEditData ? 'Update' : 'Add'} Profile</Typography>\n                        <Link to=\"#\" onClick={onClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    First Name <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"firstName\" placeholder=\"First name\" className={classes.loginInput} autoFocus />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Last Name <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"lastName\" placeholder=\"Last name\" className={classes.loginInput} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Date Of Birth <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField type=\"date\" name=\"dob\" placeholder=\"Date Of Birth\" className={classes.loginInput} />\n                            </Grid>\n                            {role == 'student' && (\n                                <Grid item xs={12} sm={12}>\n                                    <label className={classes.label}> School Name </label>\n                                    {/* <RHFTextField name=\"schoolId\" placeholder=\"schoolId\" className={classes.loginInput} /> */}\n                                    <RHFSelect name=\"schoolId\" label=\"\">\n                                        <option value=\"\"> Select School </option>\n                                        {schoolList?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.nameBranch}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            )}\n\n                            {role == 'school-admin' && (\n                                <Grid item xs={12} sm={12}>\n                                    <label className={classes.label}> School Name </label>\n                                    {/* <RHFTextField name=\"schoolId\" placeholder=\"schoolId\" className={classes.loginInput} /> */}\n                                    <RHFSelect name=\"schoolId\" label=\"\">\n                                        <option value=\"\"> Select School </option>\n                                        {schoolList?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.nameBranch}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            )}\n\n                            {hide !== '' && hide !== 'Select a School' && role == 'student' && (\n                                <Grid item xs={12}>\n                                    {/* {loggedUserProfile?.role !== 'SCHOOL_ADMIN' && ( */}\n                                    <RHFTextField name=\"classAndSection\" placeholder=\"Enter your class/section\" />\n                                    {/* )} */}\n                                </Grid>\n                            )}\n\n                            <Grid item xs={12}>\n                                <label>\n                                    Status <span className={classes.mandatory}>*</span>\n                                </label>\n                                {/* {loggedUserProfile?.role === 'SCHOOL_ADMIN' && (\n                                    <> */}\n                                {hide == '' && (\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEM?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                )}\n\n                                {hide !== '' && role == 'school-admin' && (\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEM?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                )}\n                                {/* </>\n                                )} */}\n                                {/* `${comment} Date:-${new Date()}` */}\n                                {hide !== '' && role == 'student' && (\n                                    <>\n                                        <RHFSelect name=\"status\" label=\"\">\n                                            {STATUS_ITEMS?.map((item, index) => (\n                                                <option key={index} value={item?.status}>\n                                                    {item?.status}\n                                                </option>\n                                            ))}\n                                        </RHFSelect>\n                                    </>\n                                )}\n                            </Grid>\n                            {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                <Grid item xs={12}>\n                                    <label>Comments</label>\n                                    <RHFTextField name=\"comments\" multiline rows={4} />\n                                </Grid>\n                            )}\n\n                            <Grid item xs={12} sm={12}>\n                                <RHFCheckbox name=\"default\" label=\"Default\" />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={onClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {isEditData ? 'Update' : 'Add'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","import ReactDOM from 'react-dom';\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/styles';\n\nconst styles = {\n    snackbarStyleViaContentProps: {\n        backgroundColor: 'orange'\n    },\n    snackbarStyleViaNestedContent: {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n    }\n};\n\nconst SuccessMsg = (props) => {\n    const { isSuccessful, setIsSuccessful, message, classes } = props;\n    const theme = useTheme();\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center'\n            }}\n            open={isSuccessful}\n            // ContentProps={{\n            //     'aria-describedby': 'message-id',\n            //     className: classes.snackbarStyleViaContentProps\n            // }}\n            autoHideDuration={3000}\n            onClose={() => setIsSuccessful(false)}\n        >\n            <Alert\n                onClose={() => setIsSuccessful(false)}\n                severity=\"success\"\n                //style={{ backgroundColor: theme.palette.success.main, color: '#fff' }}\n            >\n                {message}\n            </Alert>\n        </Snackbar>\n    );\n};\nexport default SuccessMsg;\n// const StyledApp = withStyles(styles)(SuccessMsg);\n\n// const rootElement = document.getElementById('root');\n// ReactDOM.render(<StyledApp />, rootElement);\n"],"sourceRoot":""}