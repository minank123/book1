{"version":3,"sources":["views/SchoolAdminBooks/index.js","ui-component/messages/DeleteMsg.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","SchoolAdminBooks","_allBooks$content","classes","useStyles","dispatch","useDispatch","useTheme","_useState","useHistory","useState","_useState2","_slicedToArray","isDeleted","setIsDeleted","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","allBooks","useSelector","state","books","_useState7","_useState8","isSearchBook","setSearchBook","_useState9","_useState10","loggedUserProfile","userProfile","profile_id","profileId","_useState11","isOpen","title","subTitle","_useState12","confirmDialog","setConfirmDialog","useEffect","getBooks","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","Grid","container","spacing","item","xs","sm","md","OutlinedInput","searchControl","id","value","onChange","event","target","handleSearchBook","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","content","map","row","index","_row$imageUrls","concat","src","imageUrls","alt","width","height","author","publisher","isbn","shelfId","Typography","status","style","success","main","warning","dark","Tooltip","IconButton","AddIcon","color","cursor","onClick","bookId","payload","addToCartBySchoolAdmin","handleAddToCart","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog","DeleteMsg","message","props","setDeleted","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","background","info"],"mappings":"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","file":"static/js/70.77cebf2c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n    Grid,\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\n\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ConfirmDialog from '../../ui-component/ConfirmDialog/ConfirmDialog';\nimport DeleteMsg from '../../ui-component/messages/DeleteMsg';\nimport useStyles from '../../views/ViewTableStyles'\nimport { getBooks } from '../../store/actions/BookActions';\nimport { BOOK_ID } from '../../store/actions';\nimport { useHistory } from 'react-router';\nimport { addToCartBySchoolAdmin } from '../../store/actions/CartActions';\n\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function SchoolAdminBooks() {\n \n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const history = useHistory();\n    const [isDeleted, setIsDeleted] = useState(false);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const { allBooks } = useSelector((state) => state.books);\n    const [isSearchBook, setSearchBook] = useState('');\n    const [selected, setSelected] = useState([]);\nconst { loggedUserProfile } = useSelector((state) => state?.userProfile);\nconst profile_id = loggedUserProfile?.profileId;\n    const handleAddToCart = (bookId) => {\n        const payload = {\n            bookId: bookId, \n          };\n        dispatch(addToCartBySchoolAdmin(payload, profile_id));\n       \n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n    const handleSearchBook = (event) => {\n        setSearchBook(event.target.value);\n        setPage(0);\n    };\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    useEffect(() => {\n        \n        dispatch(getBooks(isSearchBook ? isSearchBook : '', page + 1, rowsPerPage));\n    }, [rowsPerPage, isSearchBook, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; All Books </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6} md={3}>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                value={isSearchBook}\n                                onChange={(event) => handleSearchBook(event)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Cover </TableCell>\n                                    <TableCell> Title </TableCell>\n                                    <TableCell> Author </TableCell>\n                                    <TableCell> Publisher </TableCell>\n                                    <TableCell> Isbn No. </TableCell>\n                                    <TableCell align=\"center\"> Shelf No. </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Cart </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            <TableBody>\n                                {allBooks?.content?.map((row, index) => {\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n                                    return (\n                                        <StyledTableRow key={row?.id}>\n                                            <TableCell>\n                                                <img src={row?.imageUrls?.[0]} alt=\"book\" width=\"60px\" height={100} />\n                                            </TableCell>\n                                            <TableCell> {row?.title} </TableCell>\n                                            <TableCell> {row?.author} </TableCell>\n                                            <TableCell> {row?.publisher} </TableCell>\n                                            <TableCell> {row?.isbn} </TableCell>\n                                            <TableCell align=\"center\"> {row?.shelfId} </TableCell>\n                                           \n                                           \n\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'PENDING' && 'blue') ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Tooltip title=\"Cart Book\">\n                                                    <IconButton>\n                                                        <AddIcon\n                                                            color=\"primary\"\n                                                            style={{ cursor: 'pointer' }}\n                                                            onClick={() => handleAddToCart(row?.id)}\n                                                        />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={allBooks?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n\n                <DeleteMsg isDeleted={isDeleted} setIsDeleted={setIsDeleted} message={'Book Deleted Successfully'} />\n            </MainCard>\n        </>\n    );\n}\n","import { Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nconst DeleteMsg = (props) => {\r\n    const { isDeleted, setDeleted, message } = props\r\n    const theme = useTheme();\r\n    return (\r\n\r\n        <Snackbar\r\n        anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n            open={isDeleted}\r\n            autoHideDuration={3000}\r\n            onClose={() => setDeleted(false)}>\r\n            <Alert onClose={() => setDeleted(false)}\r\n                severity=\"info\" style={{ background: theme.palette.info.dark, color: '#fff' }}>\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n    );\r\n}\r\nexport default DeleteMsg;"],"sourceRoot":""}