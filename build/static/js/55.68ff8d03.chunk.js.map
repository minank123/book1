{"version":3,"sources":["views/stock-management/ViewStock.js","store/actions/StockActions/index.js","views/stock-management/AddEditStock.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","ViewStock","classes","useStyles","useUserRole","roleList","loggedUserProfile","useSelector","state","userProfile","id","useHistory","useParams","dispatch","useDispatch","_useState","useTheme","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","isOpenModal","setOpenModal","_useState9","_useState10","isEditData","setEditData","_useState11","_useState12","isSchoolId","setSchoolId","viewStockData","stock","newData","content","totalCount","totalElements","console","log","_useState13","isOpen","title","subTitle","_useState14","confirmDialog","setConfirmDialog","useEffect","viewStock","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SchoolIcon","viewIcon","role","pageTitle","Paper","elevation","style","display","justifyContent","OutlinedInput","searchControl","onChange","e","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","TableBody","map","row","index","_row$bookDetail","_row$bookDetail$image","_row$bookDetail2","_row$bookDetail3","_row$bookDetail4","_row$bookDetail5","src","bookDetail","imageUrls","alt","width","height","objectFit","author","publisher","isbn","align","totalQuantity","textAlign","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom","AddEditStock","open","close","ConfirmDialog","viewStockError","error","type","VIEW_STOCK_ERROR","updateStockError","UPDATE_STOCK_ERROR","addStockError","ADD_STOCK_ERROR","getLibraryStockError","GET_LIBRARY_STOCK_ERROR","updateLibraryStockError","UPDATE_LIBRARY_STOCK_ERROR","schoolId","searchData","arguments","length","undefined","rowsPerpage","VIEW_STOCK_START","http","process","concat","then","res","payload","VIEW_STOCK_SUCCESS","viewStockSuccess","catch","err","setMessage","message","deleteBookFromStok","bid","profileId","successCB","_err$data","data","updateStock","bookId","successCb","UPDATE_STOCK_START","UPDATE_STOCK_SUCCESS","updateStockSuccess","_err$data2","addStock","ADD_STOCK_START","ADD_STOCK_SUCCESS","addStockSuccess","_err$data3","getLibraryStock","GET_LIBRARY_STOCK_START","GET_LIBRARY_STOCK_SUCCESS","getLibraryStockSuccess","libraryStockData","updateLibraryStock","quantity","UPDATE_LIBRARY_STOCK_START","isIncrement","UPDATE_LIBRARY_STOCK_SUCCESS","_err$data4","validationSchema","yup","required","props","isBooksId","history","initialValues","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","Dialog","paper","dialog","DialogTitle","dialogTitle","dialogTitleChild","Typography","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","onSubmit","parseInt","push","DialogContent","Grid","container","spacing","item","xs","sm","label","mandatory","RHFTextField","name","textField","autoFocus","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","buttonSubmit"],"mappings":"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","file":"static/js/55.68ff8d03.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip,\n    Checkbox\n} from '@material-ui/core';\nimport { IconSearch } from '@tabler/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport SchoolIcon from '@material-ui/icons/School';\nimport useStyles from '../ViewTableStyles';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { deleteBookFromStok, viewStock } from '../../store/actions/StockActions';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport AddEditStock from './AddEditStock';\nimport useUserRole from '../../hooks/useUserRole';\nimport ConfirmDialog from '../../ui-component/ConfirmDialog/ConfirmDialog';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function ViewStock() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN', 'SUPER_ADMIN'] });\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const history = useHistory();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const [value, setValue] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [isOpenModal, setOpenModal] = useState(false);\n    const [isEditData, setEditData] = useState(null);\n    const [isSchoolId, setSchoolId] = useState(null);\n    const { viewStockData } = useSelector((state) => state?.stock);\n    const newData = viewStockData?.content;\n    const totalCount = viewStockData?.totalElements;\n    console.log(\"==================>\", totalCount)\n    // const [selected, setSelected] = useState([]);\n    // const localStorageKey = 'receivedLabelStyle';\n    // const [receivedLabelStyle, setReceivedLabelStyle] = useState(() => {\n    //     const storedStyle = localStorage?.getItem(localStorageKey);\n    //     return storedStyle || theme.palette.warning.dark;\n    // });\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n    // const handleChangePage = (event, newPage) => {\n    //     setPage(newPage);\n    // };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        console.log(\"page count ------> \", newPage)\n    };\n\n    // const handleChangeRowsPerPage = (event) => {\n    //     setRowsPerPage(+event.target.value);\n    //     setPage(0);\n    // };\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n      \n    };\n    const handleUpdateStock = (data) => {\n        setOpenModal(true);\n        setEditData(data);\n    };\n    const handleCloseModal = () => {\n        setEditData(null);\n        setOpenModal(false);\n    };\n    // const handleAddStock = () => {\n    //     history.push(`/admin/add-stock/${id}`);\n    // };\n    const handleDelete = async (bId, profileId) => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n        dispatch(\n            deleteBookFromStok(bId, profileId, () => {\n                dispatch(viewStock(profileId));\n            })\n        );\n    };\n    useEffect(() => {\n        if (id) {\n            dispatch(viewStock(id, value ? value : '', page + 1, rowsPerPage));\n            setSchoolId(id);\n        }\n    }, [id, value, page,rowsPerPage]);\n\n    // const handleSelectAllClick = (event) => {\n    //     if (event.target.checked) {\n    //         const newSelecteds = newData?.map((n) => n.id);\n    //         setSelected(newSelecteds);\n    //         return;\n    //     }\n    //     setSelected([]);\n    // };\n    // const handleCheckboxClick = (event, id) => {\n    //     const selectedIndex = selected.indexOf(id);\n\n    //     let newSelected = [];\n\n    //     if (selectedIndex === -1) {\n    //         newSelected = newSelected.concat(selected, id);\n    //     } else if (selectedIndex === 0) {\n    //         newSelected = newSelected.concat(selected.slice(1));\n    //     } else if (selectedIndex === selected.length - 1) {\n    //         newSelected = newSelected.concat(selected.slice(0, -1));\n    //     } else if (selectedIndex > 0) {\n    //         newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    //     }\n\n    //     setSelected(newSelected);\n    //     setReceivedLabelStyle(theme.palette.warning.dark);\n    // };\n    // const isSelected = (name) => selected.indexOf(name) !== -1;\n    // const handlePlaced = (style) => {\n    //     setReceivedLabelStyle(style);\n    //     localStorage.setItem(localStorageKey, style);\n    // };\n    // useEffect(() => {\n    //     const storedStyle = localStorage.getItem(localStorageKey);\n    //     if (storedStyle) {\n    //         setReceivedLabelStyle(storedStyle);\n    //     }\n    // }, []);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SchoolIcon className={classes.viewIcon} />\n                    {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                        <span className={classes.pageTitle}>&nbsp; School Stock </span>\n                    )}\n\n                    {loggedUserProfile?.role === 'SCHOOL_ADMIN' && <span className={classes.pageTitle}>&nbsp; Stock Your School </span>}\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <OutlinedInput\n                            className={classes.searchControl}\n                            id=\"input-search-header\"\n                            value={value}\n                            onChange={(e) => setValue(e.target.value)}\n                            placeholder=\"Search\"\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                </InputAdornment>\n                            }\n                        />\n                    </div>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Cover </TableCell>\n                                    {/* <TableCell> Order ID </TableCell> */}\n                                    <TableCell> Book Name </TableCell>\n                                    <TableCell> Author </TableCell>\n                                    <TableCell> Publisher </TableCell>\n                                    <TableCell> Isbn No. </TableCell>\n                                    <TableCell> Total Quantity </TableCell>\n                                    {/* <TableCell> Delivery Date </TableCell>\n                                    <TableCell> Next Delivery Date </TableCell> */}\n\n                                    {/* {loggedUserProfile?.role === 'ADMIN'  && <TableCell align=\"right\"> Action </TableCell>} */}\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => {\n                                        return (\n                                            <StyledTableRow key={row.id}>\n                                                <TableCell>\n                                                    <img\n                                                        src={row?.bookDetail?.imageUrls?.[0]}\n                                                        alt=\"\"\n                                                        width={100}\n                                                        height={100}\n                                                        style={{ objectFit: 'contain' }}\n                                                    />\n                                                </TableCell>\n                                                {/* <TableCell> {row?.schoolOrderId} </TableCell> */}\n                                                <TableCell> {row?.bookDetail?.title} </TableCell>\n                                                <TableCell> {row?.bookDetail?.author} </TableCell>\n                                                <TableCell> {row?.bookDetail?.publisher} </TableCell>\n                                                <TableCell> {row?.bookDetail?.isbn} </TableCell>\n                                                <TableCell align=\"center\"> {row.totalQuantity || '0'}</TableCell>\n                                                {/* <TableCell align=\"center\">\n                                                    <div style={{ whiteSpace: 'nowrap' }}>{row.deliveryDate}</div>\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    {' '}\n                                                    <div style={{ whiteSpace: 'nowrap' }}>{row.nextDeliveryDate}</div>\n                                                </TableCell> */}\n\n                                                {/* {loggedUserProfile?.role === 'ADMIN'  && (\n                                                    <TableCell align=\"right\">\n                                                        <Tooltip title=\"Update Session\">\n                                                            <IconButton\n                                                                style={{ cursor: 'pointer' }}\n                                                                onClick={() => handleUpdateStock(row)}\n                                                            >\n                                                                <EditIcon color=\"primary\" />\n                                                            </IconButton>\n                                                        </Tooltip>\n\n                                                        <IconButton\n                                                            onClick={() => {\n                                                                setConfirmDialog({\n                                                                    isOpen: true,\n                                                                    title: 'Delete Module',\n                                                                    subTitle: 'Are you sure you want to delete this session.',\n                                                                    onConfirm: () => {\n                                                                        handleDelete(row?.bookId, id);\n                                                                    }\n                                                                });\n                                                            }}\n                                                        >\n                                                            <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                )} */}\n                                            </StyledTableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    {/* <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={newData?.length || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    /> */}\n\n\n                    <TablePagination\n                         rowsPerPageOptions={[25, 50, 100]}\n                         component=\"div\"\n                         count={totalCount || 0}\n                         rowsPerPage={rowsPerPage}\n                         page={page}\n                         onPageChange={handleChangePage}\n                         onRowsPerPageChange={handleChangeRowsPerPage}\n                         sx={{\n                           '.MuiTablePagination-displayedRows': {\n                             marginBottom: 0\n                           },\n                           '.MuiTablePagination-selectLabel': {\n                             marginBottom: 0\n                           }\n                         }}\n                    />\n                </Paper>\n\n                {isOpenModal && (\n                    <AddEditStock open={isOpenModal} close={handleCloseModal} isEditData={isEditData} isSchoolId={isSchoolId} />\n                )}\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n","import { http } from '../../../utils/http';\nimport {\n    VIEW_STOCK_START,\n    VIEW_STOCK_SUCCESS,\n    VIEW_STOCK_ERROR,\n    UPDATE_STOCK_ERROR,\n    UPDATE_STOCK_START,\n    UPDATE_STOCK_SUCCESS,\n    ADD_STOCK_START,\n    ADD_STOCK_SUCCESS,\n    ADD_STOCK_ERROR,\n    GET_LIBRARY_STOCK_START,\n    GET_LIBRARY_STOCK_SUCCESS,\n    GET_LIBRARY_STOCK_ERROR,\n    UPDATE_LIBRARY_STOCK_START,\n    UPDATE_LIBRARY_STOCK_SUCCESS,\n    UPDATE_LIBRARY_STOCK_ERROR\n} from '../../constants';\nimport { setMessage } from '../MessageActions';\n\nconst viewStockStart = () => {\n    return { type: VIEW_STOCK_START };\n};\nconst viewStockSuccess = (payload) => {\n    return { type: VIEW_STOCK_SUCCESS, payload };\n};\nconst viewStockError = (error) => {\n    return { type: VIEW_STOCK_ERROR, error };\n};\nconst updateStockStart = () => {\n    return { type: UPDATE_STOCK_START };\n};\nconst updateStockSuccess = (payload) => {\n    return { type: UPDATE_STOCK_SUCCESS, payload };\n};\nconst updateStockError = (error) => {\n    return { type: UPDATE_STOCK_ERROR, error };\n};\nconst addStockStart = () => {\n    return { type: ADD_STOCK_START };\n};\nconst addStockSuccess = (payload) => {\n    return { type: ADD_STOCK_SUCCESS, payload };\n};\nconst addStockError = (error) => {\n    return { type: ADD_STOCK_ERROR, error };\n};\nconst getLibraryStockStart = () => {\n    return { type: GET_LIBRARY_STOCK_START };\n};\nconst getLibraryStockSuccess = (payload) => {\n    return { type: GET_LIBRARY_STOCK_SUCCESS, payload };\n};\nconst getLibraryStockError = (error) => {\n    return { type: GET_LIBRARY_STOCK_ERROR, error };\n};\nconst updateLibraryStockStart = () => {\n    return { type: UPDATE_LIBRARY_STOCK_START };\n};\nconst updateLibraryStockSuccess = (payload) => {\n    return { type: UPDATE_LIBRARY_STOCK_SUCCESS, payload };\n};\nconst updateLibraryStockError = (error) => {\n    return { type: UPDATE_LIBRARY_STOCK_ERROR, error };\n};\n\nconst viewStock =\n    (schoolId, searchData = '', page=1 ,rowsPerpage=25) =>\n    (dispatch) => {\n        dispatch(viewStockStart());\n        try {\n            http(\n                process.env.REACT_APP_ROOT_URL_BOOK,\n                'GET',\n                `books-service/books/schools/${schoolId}/total?searchKey=${searchData}&pageNumber=${page}&pageSize=${rowsPerpage}`,\n                true\n            )\n                .then((res) => {\n                    const payload = {\n                        viewStockData: res\n                    };\n                    dispatch(viewStockSuccess(payload));\n                })\n                .catch((err) => {\n                    dispatch(viewStockError(err));\n                    dispatch(setMessage(err?.message));\n                });\n        } catch (error) {\n            dispatch(viewStockError(error?.message));\n        }\n    };\n    const deleteBookFromStok = (bid,profileId, successCB) => (dispatch) => {\n        try {\n            http(process.env.REACT_APP_ROOT_URL_BOOK, 'DELETE', `books-service/books/${bid}/schools/${profileId}/total`, true)\n                .then((res) => {\n                    dispatch(setMessage(res?.message ? res?.message : 'Deleted Successfully'));\n                    successCB && successCB(res);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    dispatch(setMessage(err?.data?.message));\n                });\n        } catch (error) {\n            console.log(error);\n            dispatch(setMessage('Deleted Module Successfully'));\n        }\n    };\n\nconst updateStock = (payload, bookId, schoolId, successCb) => (dispatch) => {\n    dispatch(updateStockStart());\n    try {\n        http(\n            process.env.REACT_APP_ROOT_URL_BOOK,\n            'PUT',\n            `books-service/books/${bookId}/schools/${schoolId}/total?quantity=${payload}`,\n            true\n        )\n            .then((res) => {\n                dispatch(updateStockSuccess(res));\n                successCb && successCb(res);\n                dispatch(setMessage(res?.message));\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch(updateStockError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(updateStockError(error?.message));\n    }\n};\n\nconst addStock = (payload, bookId, schoolId, successCb) => (dispatch) => {\n    dispatch(addStockStart());\n    try {\n        http(\n            process.env.REACT_APP_ROOT_URL_BOOK,\n            'POST',\n            `books-service/books/${bookId}/schools/${schoolId}/total?quantity=${payload}`,\n            true\n        )\n            .then((res) => {\n                dispatch(addStockSuccess(res));\n                successCb && successCb(res);\n            })\n            .catch((err) => {\n                dispatch(addStockError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(addStockError(error?.message));\n    }\n};\n\nconst getLibraryStock =\n    (searchData = '', page = 1, rowsPerPage = 10) =>\n    (dispatch) => {\n        dispatch(getLibraryStockStart());\n        try {\n            http(\n                process.env.REACT_APP_ROOT_URL_BOOK,\n                'GET',\n                `books-service/books/total?searchKey=${searchData}&pageNumber=${page}&pageSize=${rowsPerPage}`,\n                true\n            )\n                .then((res) => {\n                    const payload = {\n                        libraryStockData: res\n                    };\n                    dispatch(getLibraryStockSuccess(payload));\n                   \n                })\n                .catch((err) => {\n                    dispatch(getLibraryStockError(err));\n                    dispatch(setMessage(err?.message));\n                });\n        } catch (error) {\n            dispatch(getLibraryStockError(error?.message));\n        }\n    };\n\nconst updateLibraryStock = (bookId, quantity, successCb) => (dispatch) => {\n    dispatch(updateLibraryStockStart());\n    try {\n        const isIncrement = quantity >= 0;\n        http(process.env.REACT_APP_ROOT_URL_BOOK, 'PUT', `books-service/books/${bookId}/total/library-stock?quantity=${quantity} `, true)\n            .then((res) => {\n                dispatch(updateLibraryStockSuccess(res));\n                dispatch(setMessage(`${isIncrement ? 'Incremented' : 'Decremented'} successfully`));\n                successCb && successCb(res);\n            })\n            .catch((err) => {\n                dispatch(updateLibraryStockError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(updateLibraryStockError(error?.message));\n    }\n};\n\nexport { viewStock,deleteBookFromStok, updateStock, addStock, getLibraryStock, updateLibraryStock };\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField } from '../../components/hook-form';\nimport * as yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport useStyles from '../DialogStyles';\nimport { addStock, updateStock, viewStock } from '../../store/actions/StockActions';\nimport { useHistory } from 'react-router-dom';\n\nconst validationSchema = yup.object({\n    quantity: yup.string('Enter stock quantity').required('Stock quantity is required')\n});\n\nexport default function AddEditStock(props) {\n    const { open, close, isEditData, isSchoolId, isBooksId } = props;\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        quantity: isEditData?.totalQuantity || ''\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n    const { handleSubmit } = methods;\n    const onSubmit = (data) => {\n        if (isEditData) {\n            dispatch(\n                updateStock(parseInt(data?.quantity), isEditData?.bookId, isSchoolId, () => {\n                    close();\n                    dispatch(viewStock(isSchoolId));\n                })\n            );\n        } else {\n            dispatch(\n                addStock(parseInt(data?.quantity), isBooksId, isSchoolId, () => {\n                    close();\n                    history.push(`/admin/view-stock/${isSchoolId}`);\n                })\n            );\n        }\n    };\n\n    return (\n        <div>\n            <Dialog open={open} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add stock quantity' : 'Update stock quantity'}</Typography>\n                        <Link to=\"#\" onClick={close}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Increment or decrement stock quantity<span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"quantity\" placeholder=\"Add stock quantity\" className={classes.textField} autoFocus />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={close}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n"],"sourceRoot":""}