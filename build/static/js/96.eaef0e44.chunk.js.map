{"version":3,"sources":["services/deliveryPlanByDate.js","views/orders/bulk-place-orders/components/MultiselectChip.js","views/orders/bulk-place-orders/index.js"],"names":["getDeliveryByDate","deliveryDate","arguments","length","undefined","page","rowsPerPage","searchKey","Promise","resolve","reject","axios","get","concat","process","then","data","catch","err","icon","_jsx","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","MultiselectChip","props","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","options","setOptions","_React$useState5","_React$useState6","searchValue","setSearchValue","loading","values","handleSearchValueChange","e","target","value","handleSearch","Autocomplete","defaultValue","defaultChecked","onChange","getSelectedItems","filterOptions","x","multiple","disableCloseOnSelect","id","onOpen","onClose","isOptionEqualToValue","option","title","isOptionEqualToValueIsbn","isbn","getOptionLabel","renderOption","_ref","selected","_jsxs","_objectSpread","children","Checkbox","style","marginRight","checked","width","renderInput","params","TextField","placeholder","InputProps","endAdornment","CircularProgress","color","size","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","circularProgressContainer","TableRow","validationSchema","yup","startDate","required","BulkOrdersPlace","_deliveryPlan$content","_deliveryPlan$content2","classes","useStyles","useUserRole","roleList","searchTimeout","_useState","useState","_useState2","setValue","dispatch","useParams","useDispatch","_useState3","_useState4","setPage","_useState5","_useState6","setRowsPerPage","_useState7","Date","toISOString","substring","_useState8","setStartDate","_useState9","_useState10","deliveryPlan","setDeliveryPlan","_useState11","_useState12","selectedBooksForOrder","setSelectedBooksForOrder","_useState13","_useState14","_useState15","_useState16","setLoading","methods","Cookies","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","GetDeliveryPlan","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","sent","t0","console","log","stop","apply","someDate","getSelectedBooksForOrder","items","GetSearchedBooksToOrder","_ref2","_callee2","searchKeyWord","_context2","searchBooksMiniForOrder","alert","setBooksToOrder","_x","_useState17","_useState18","booksToOrder","handleOrderBookSearch","_ref3","_callee4","_context4","clearTimeout","setTimeout","_callee3","_context3","_x2","onSubmit","_ref5","_callee5","_context5","_x3","PostOrderBooks","_ref6","_callee6","payload","_context6","postOrderBooks","_x4","_x5","submitForm","_ref7","_callee7","deliveryPlanId","payloadOrders","_error$data","_error$data2","_context7","bookIds","forEach","item","_toConsumableArray","setMessage","message","_x6","MainCard","className","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","Grid","container","spacing","xs","sm","md","OutlinedInput","searchControl","_e$target","startAdornment","InputAdornment","position","IconSearch","stroke","FormProvider","type","name","Button","variant","btn","onClick","display","justifyContent","alignItems","height","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","content","slice","map","row","index","profileId","fullName","addressType","Moment","format","date","booksAllowed","booksOrdered","day","Tooltip","IconButton","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom"],"mappings":"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","file":"static/js/96.eaef0e44.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getDeliveryByDate = (deliveryDate = '', page = 1, rowsPerPage = 10, searchKey = '') => {\n    return new Promise((resolve, reject) => {\n        axios\n            .get(\n                `${process.env.REACT_APP_ROOT_URL_ORDER}/orders-service/delivery-plans/deliveryDate?deliveryDate=${deliveryDate}&pageNumber=${page}&pageSize=${rowsPerPage}&searchKey=${searchKey}`\n            )\n            .then((data) => {\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n","import * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function MultiselectChip(props) {\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const [searchValue, setSearchValue] = React.useState('');\n    const loading = open && options.length === 0 && searchValue !== '';\n\n    const getSelectedItems = (value) => {\n        props.getSelectedItems(value);\n    };\n\n    React.useEffect(() => {\n        setOptions(props.values);\n    }, [props.values]);\n\n    const handleSearchValueChange = (e) => {\n        setSearchValue(e.target.value);\n\n        props.handleSearch(e.target.value);\n    };\n\n    return (\n        <Autocomplete\n            defaultValue={props.defaultValue}\n            defaultChecked={props.defaultChecked}\n            onChange={(e, value) => getSelectedItems(value)}\n            filterOptions={(x) => x}\n            multiple\n            disableCloseOnSelect\n            id=\"checkboxes-tags\"\n            open={open}\n            onOpen={() => {\n                setOpen(true);\n            }}\n            onClose={() => {\n                setOpen(false);\n            }}\n            isOptionEqualToValue={(option, value) => option.title === value.title}\n            isOptionEqualToValueIsbn={(option, value) => option.isbn === value.isbn}\n            getOptionLabel={(option) => option.title}\n            options={options}\n            loading={loading}\n            renderOption={(props, option, { selected }) => (\n                <li {...props}>\n                    <Checkbox icon={icon} checkedIcon={checkedIcon} style={{ marginRight: 8 }} checked={selected} />\n                    {option.title+\" (\"+option.isbn+\")\"}\n                </li>\n            )}\n            style={{ width: 500 }}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    value={searchValue}\n                    placeholder={props.placeholder}\n                    onChange={handleSearchValueChange}\n                    InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                {params.InputProps.endAdornment}\n                            </React.Fragment>\n                        )\n                    }}\n                />\n            )}\n        />\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport Moment from 'react-moment';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {\n  Grid,\n  IconButton,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TablePagination,\n  OutlinedInput,\n  InputAdornment,\n  Typography,\n  Tooltip,\n  TextField,\n  CircularProgress,\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport useStyles from '../../ViewTableStyles';\nimport { useParams } from 'react-router-dom';\nimport useUserRole from '../../../hooks/useUserRole';\nimport Cookies from 'js-cookie';\nimport { getDeliveryByDate } from '../../../services/deliveryPlanByDate';\nimport { searchBooksMiniForOrder, postOrderBooks } from '../../../services/placeOrderServices';\nimport { setMessage } from '../../../store/actions/MessageActions';\nimport MultiselectChip from './components/MultiselectChip';\nimport { VisibilityOff } from '@material-ui/icons';\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(even)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  circularProgressContainer: {},\n}))(TableRow);\n\nconst validationSchema = yup.object({\n  startDate: yup.string().required('Start Date is required'),\n});\n\nexport default function BulkOrdersPlace() {\n  const classes = useStyles();\n  useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n  const [value, setValue] = useState('');\n\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const [startDate, setStartDate] = useState(new Date().toISOString().substring(0, 10));\n  const [deliveryPlan, setDeliveryPlan] = useState('');\n  const [selectedBooksForOrder, setSelectedBooksForOrder] = useState([]);\n  const [deliverPlanId, setDeliveryPlanId] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const pid = Cookies.get('profileId');\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n  };\n\n  const initialValues = {\n    startDate: '',\n  };\n\n  const methods = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n    defaultValues: initialValues,\n  });\n  const { handleSubmit } = methods;\n\n  const GetDeliveryPlan = async () => {\n    setLoading(true);\n\n    try {\n      const res = await getDeliveryByDate(startDate, page + 1, rowsPerPage, value ? value : '');\n      setDeliveryPlan(res?.data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const values = {\n    someDate: new Date().toISOString().substring(0, 10),\n  };\n\n  const getSelectedBooksForOrder = (items) => {\n    setSelectedBooksForOrder(items);\n  };\n\n  const GetSearchedBooksToOrder = async (searchKeyWord) => {\n    try {\n      const res = await searchBooksMiniForOrder(searchKeyWord);\n      if (res?.data.length === 0) {\n        alert(searchKeyWord + ' not available');\n      }\n      setBooksToOrder(res?.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [booksToOrder, setBooksToOrder] = useState([]);\n\n  let searchTimeout;\n\n  const handleOrderBookSearch = async (title) => {\n    clearTimeout(searchTimeout);\n\n    searchTimeout = setTimeout(async () => {\n      if (title !== '') {\n        await GetSearchedBooksToOrder(title);\n      } else {\n        setBooksToOrder([]);\n      }\n    }, 500);\n  };\n\n  const onSubmit = async (data) => {\n    GetDeliveryPlan(startDate, page + 1, rowsPerPage, value ? value : '');\n  };\n\n  const PostOrderBooks = async (id, payload) => {\n    try {\n      await postOrderBooks(id, payload);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const submitForm = async (deliveryPlanId) => {\n    let orderSuccess = false;\n\n    let payloadOrders = { bookIds: [] };\n\n    selectedBooksForOrder.forEach((item) => {\n      payloadOrders.bookIds = [...payloadOrders.bookIds, item?.id];\n    });\n\n    try {\n      const data = await PostOrderBooks(deliveryPlanId, payloadOrders);\n      orderSuccess = true;\n      dispatch(setMessage(data?.message ? data?.message : 'Books Ordered Successfully!'));\n      GetDeliveryPlan(startDate, page + 1, rowsPerPage, value ? value : '');\n    } catch (error) {\n      dispatch(setMessage(error?.data?.message ? error?.data?.message : 'Something went wrong while placing order for books'));\n    }\n  };\n\n  return (\n    <MainCard>\n      <div className={classes.titleContainer}>\n        <SubjectIcon className={classes.viewIcon} />\n        <span className={classes.pageTitle}>&nbsp; Bulk Place Order </span>\n      </div>\n      <Paper elevation={5} className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6} md={2}>\n            <OutlinedInput\n              className={classes.searchControl}\n              id=\"input-search-header\"\n              onChange={(e) => setValue(e?.target?.value)}\n              placeholder=\"Search\"\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                </InputAdornment>\n              }\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    type=\"date\"\n                    name=\"startDueDate\"\n                    defaultValue={values.someDate}\n                    onChange={(e) => setStartDate(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Button variant=\"contained\" className={classes.btn} onClick={onSubmit} type=\"submit\">\n                    View\n                  </Button>\n                </Grid>\n              </Grid>\n            </FormProvider>\n          </Grid>\n        </Grid>\n        {loading ? (\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '10vh' }}>\n            <CircularProgress color=\"primary\" size={40} />\n          </div>\n        ) : (\n          <TableContainer className={classes.tableContainer}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead className={classes.tableHeaderCell}>\n                <TableRow>\n                  <TableCell align=\"center\"> Cus Id </TableCell>\n                  <TableCell align=\"center\"> Full Name </TableCell>\n                  <TableCell align=\"center\"> Default Address </TableCell>\n                  <TableCell align=\"center\"> Delivery (Date) </TableCell>\n                  <TableCell align=\"center\"> Books Allowed </TableCell>\n                  <TableCell align=\"center\"> Books Ordered </TableCell>\n                  <TableCell align=\"center\"> Day </TableCell>\n                  <TableCell align=\"center\"> Select Book </TableCell>\n                  <TableCell align=\"center\"> Action </TableCell>\n                </TableRow>\n              </TableHead>\n              {!deliveryPlan ? (\n                <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n              ) : (\n                <TableBody>\n                  {deliveryPlan?.content?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)?.map((row, index) => (\n                    <StyledTableRow key={index}>\n                      <TableCell align=\"center\">{row?.profileId}</TableCell>\n                      <TableCell align=\"center\">{row?.fullName}</TableCell>\n                      <TableCell align=\"center\">{row?.addressType}</TableCell>\n                      <TableCell align=\"center\">\n                        <Moment format=\"YYYY/MM/DD\" date={row?.deliveryDate} />\n                      </TableCell>\n                      <TableCell align=\"center\"> {row?.booksAllowed} </TableCell>\n                      <TableCell align=\"center\"> {row?.booksOrdered} </TableCell>\n                      <TableCell align=\"center\"> {row?.day} </TableCell>\n                      <TableCell align=\"center\">\n                        <MultiselectChip values={booksToOrder} handleSearch={handleOrderBookSearch} getSelectedItems={getSelectedBooksForOrder} placeholder={'Search Books To Order'} />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Tooltip title=\"Place Order \">\n                          <IconButton>\n                            <Button variant=\"contained\" className={classes.btn} onClick={() => submitForm(row?.id)} type=\"submit\">\n                              Submit\n                            </Button>\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[25, 50, 100]}\n          component=\"div\"\n          count={deliveryPlan?.totalElements || 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          sx={{\n            '.MuiTablePagination-displayedRows': {\n              marginBottom: 0,\n            },\n            '.MuiTablePagination-selectLabel': {\n              marginBottom: 0,\n            },\n          }}\n        />\n      </Paper>\n    </MainCard>\n  );\n}\n"],"sourceRoot":""}