{"version":3,"sources":["views/online-classes/courses/modules/add-module/index.js","views/online-classes/courses/modules/index.js","../node_modules/@material-ui/icons/ArrowUpward.js","ui-component/messages/SuccessMsg.js","../node_modules/@material-ui/icons/ArrowDownward.js"],"names":["validationSchema","yup","title","required","trim","description","durationInMin","typeError","outcome","AddUpdateModule","props","openAddUpdateModules","setOpenAddUpdateModules","isEditData","courseId","classes","useStyles","dispatch","useDispatch","initialValues","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","handlePopupClose","_jsx","children","_jsxs","Dialog","open","paper","dialog","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","onSubmit","data","payload","updateSession","id","getAllModule","addSession","DialogContent","Grid","container","spacing","item","xs","sm","label","mandatory","RHFTextField","name","placeholder","textField","autoFocus","multiline","rows","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","type","buttonSubmit","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllModules","useUserRole","roleList","loggedUserProfile","useSelector","state","userProfile","useParams","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","isOpen","subTitle","_useState8","confirmDialog","setConfirmDialog","_useState9","_useState10","isModuleUpdateData","setModuleUpdateData","allSessions","course","newData","content","_useState11","_useState12","searchData","setSearchData","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","mid","wrap","_context","prev","next","_objectSpread","deleteSession","stop","_x","apply","arguments","useEffect","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","display","justifyContent","OutlinedInput","searchControl","value","onChange","e","target","startAdornment","InputAdornment","position","IconSearch","stroke","size","role","btnAdd","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","index","cursor","ArrowUpwardIcon","shiftModuleUp","ArrowDownwardIcon","shiftModuleDown","Tooltip","IconButton","handleModule","EditIcon","onConfirm","DeleteForeverIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/40.c9d20cf5.chunk.js","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField } from '../../../../../components/hook-form';\nimport * as yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { addModule, updateModule, getAllModule, updateSession, addSession } from '../../../../../store/actions/CourseActions';\nimport useStyles from '../../../../DialogStyles';\n\nconst validationSchema = yup.object({\n    title: yup.string('Enter module Name').required('Module Name Is Required').trim(),\n    description: yup.string('Enter Module Description').required('Module Description Is Required').trim(),\n    durationInMin: yup.number('Enter Module Duration').required('Module Duration Is Required').typeError('Duration must be a number'),\n    outcome: yup.string('Enter Module Learning Outcome')\n});\n\nexport default function AddUpdateModule(props) {\n    const { openAddUpdateModules, setOpenAddUpdateModules, isEditData, courseId } = props;\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        title: isEditData?.title || '',\n        description: isEditData?.description || '',\n        durationInMin: isEditData?.durationInMin || '',\n        outcome: isEditData?.outcome || ''\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n    const { reset, handleSubmit } = methods;\n\n    const handlePopupClose = () => {\n        setOpenAddUpdateModules(false);\n        reset();\n    };\n    const onSubmit = (data) => {\n        const payload = {\n            title: data?.title,\n            description: data?.description,\n            durationInMin: data?.durationInMin,\n            outcome: data?.outcome\n        };\n\n        if (isEditData) {\n            dispatch(\n                updateSession(payload, isEditData.id, () => {\n                    dispatch(getAllModule(courseId));\n                })\n            );\n            handlePopupClose();\n        } else {\n            dispatch(\n                addSession(payload, courseId, () => {\n                    dispatch(getAllModule(courseId));\n                })\n            );\n            handlePopupClose();\n        }\n    };\n\n    return (\n        <div>\n            <Dialog open={openAddUpdateModules} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add Session' : 'Update Session'}</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <label className={classes.label}>\n                                    Title <span className={classes.mandatory}> * </span>\n                                </label>\n                                <RHFTextField name=\"title\" placeholder=\"Title here\" className={classes.textField} autoFocus />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <label className={classes.label}>\n                                    Description <span className={classes.mandatory}> * </span>\n                                </label>\n                                <RHFTextField\n                                    name=\"description\"\n                                    placeholder=\"Description Here\"\n                                    className={classes.textField}\n                                    multiline\n                                    rows={4}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <label className={classes.label}>\n                                    Duration(In Minutes) <span className={classes.mandatory}> * </span>\n                                </label>\n                                <RHFTextField name=\"durationInMin\" placeholder=\"Duration in Minutes\" className={classes.textField} />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <label className={classes.label}> Outcome </label>\n                                <RHFTextField\n                                    name=\"outcome\"\n                                    placeholder=\"Session Outcome here\"\n                                    className={classes.textField}\n                                    multiline\n                                    rows={4}\n                                />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport SuccessMsg from '../../../../ui-component/messages/SuccessMsg';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllModule, shiftModuleUp, shiftModuleDown, deleteSession } from '../../../../store/actions/CourseActions';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { useParams } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport AddUpdateModule from './add-module';\nimport useStyles from '../../../ViewTableStyles';\nimport useUserRole from '../../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllModules() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'TEACHER','SUPER_ADMIN'] });\n\n    const dispatch = useDispatch();\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const { id } = useParams();\n\n    const [openAddUpdateModules, setOpenAddUpdateModules] = useState(false);\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n    const [isModuleUpdateData, setModuleUpdateData] = useState(null);\n\n    const { allSessions } = useSelector((state) => state?.course);\n    const newData = allSessions?.content;\n    const [searchData, setSearchData] = useState('');\n\n    const handleDelete = async (mid) => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n        dispatch(\n            deleteSession(mid, () => {\n                dispatch(getAllModule(id));\n            })\n        );\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleModule = (id) => {\n        setOpenAddUpdateModules(true);\n        setModuleUpdateData(id);\n    };\n\n    const handleShiftUp = (mid) => {\n        dispatch(\n            shiftModuleUp(mid, () => {\n                dispatch(getAllModule(id));\n            })\n        );\n    };\n    const handleShiftDown = (mid) => {\n        dispatch(\n            shiftModuleDown(mid, () => {\n                dispatch(getAllModule(id));\n            })\n        );\n    };\n    useEffect(() => {\n        dispatch(getAllModule(id, rowsPerPage, searchData, page + 1));\n    }, [rowsPerPage, searchData, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; All Sessions </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item container>\n                            <div>\n                                <OutlinedInput\n                                    className={classes.searchControl}\n                                    id=\"input-search-header\"\n                                    value={searchData}\n                                    onChange={(e) => setSearchData(e.target.value)}\n                                    placeholder=\"Search\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item container style={{ justifyContent: 'flex-end' }}>\n                            <div>\n                                {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                            setOpenAddUpdateModules(true);\n                                            setModuleUpdateData(null);\n                                        }}\n                                        className={classes.btnAdd}\n                                    >\n                                        Add Session\n                                    </Button>\n                                )}\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Title </TableCell>\n                                    <TableCell> Description </TableCell>\n                                    <TableCell align=\"center\"> Duration(Mins.) </TableCell>\n                                    <TableCell align=\"center\"> Shift </TableCell>\n                                    {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                        <TableCell align=\"right\"> Action </TableCell>\n                                    )}\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell> {row?.title} </TableCell>\n                                            <TableCell> {row?.description} </TableCell>\n                                            <TableCell align=\"center\"> {row?.durationInMin} </TableCell>\n\n                                            <TableCell align=\"center\" style={{ cursor: 'pointer' }}>\n                                                <ArrowUpwardIcon onClick={() => handleShiftUp(row?.id)} />\n                                                <ArrowDownwardIcon onClick={() => handleShiftDown(row?.id)} />\n                                            </TableCell>\n\n                                            {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                                <TableCell align=\"right\">\n                                                    <Tooltip title=\"Update Session\">\n                                                        <IconButton onClick={() => handleModule(row)}>\n                                                            <EditIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                        </IconButton>\n                                                    </Tooltip>\n\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            setConfirmDialog({\n                                                                isOpen: true,\n                                                                title: 'Delete Module',\n                                                                subTitle: 'Are you sure you want to delete this session.',\n                                                                onConfirm: () => {\n                                                                    handleDelete(row.id);\n                                                                }\n                                                            });\n                                                        }}\n                                                    >\n                                                        <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </TableCell>\n                                            )}\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={allSessions?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openAddUpdateModules && (\n                    <AddUpdateModule\n                        openAddUpdateModules={openAddUpdateModules}\n                        setOpenAddUpdateModules={setOpenAddUpdateModules}\n                        isEditData={isModuleUpdateData}\n                        courseId={id}\n                    />\n                )}\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n\n            {/* <SuccessMsg message={message} isSuccessful={isSuccessful} /> */}\n        </>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;","import ReactDOM from 'react-dom';\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/styles';\n\nconst styles = {\n    snackbarStyleViaContentProps: {\n        backgroundColor: 'orange'\n    },\n    snackbarStyleViaNestedContent: {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n    }\n};\n\nconst SuccessMsg = (props) => {\n    const { isSuccessful, setIsSuccessful, message, classes } = props;\n    const theme = useTheme();\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center'\n            }}\n            open={isSuccessful}\n            // ContentProps={{\n            //     'aria-describedby': 'message-id',\n            //     className: classes.snackbarStyleViaContentProps\n            // }}\n            autoHideDuration={3000}\n            onClose={() => setIsSuccessful(false)}\n        >\n            <Alert\n                onClose={() => setIsSuccessful(false)}\n                severity=\"success\"\n                //style={{ backgroundColor: theme.palette.success.main, color: '#fff' }}\n            >\n                {message}\n            </Alert>\n        </Snackbar>\n    );\n};\nexport default SuccessMsg;\n// const StyledApp = withStyles(styles)(SuccessMsg);\n\n// const rootElement = document.getElementById('root');\n// ReactDOM.render(<StyledApp />, rootElement);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;"],"sourceRoot":""}