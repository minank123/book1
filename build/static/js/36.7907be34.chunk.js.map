{"version":3,"sources":["views/orders/book-orders-history/index.js","views/orders/order-details/index.js","store/actions/BulkActions/index.js","../node_modules/@material-ui/icons/Update.js","views/orders/return-book/index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","BookOrderHistory","props","isOpen","setOpen","bookOrderId","classes","useStyles","dispatch","useDispatch","useTheme","bookOrderHistory","useSelector","state","order","handlePopupClose","useEffect","getBookOrderHistory","_jsx","children","_jsxs","Dialog","open","maxWidth","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","to","onClick","CloseIcon","closeIcon","DialogContent","Grid","container","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","TableBody","map","row","index","status","color","orderBookStatus","warning","dark","error","success","statusDate","textAlign","Divider","marginTop","DialogActions","dialogAction","Button","variant","buttonCancel","OrderDetails","useUserRole","roleList","loggedUserProfile","userProfile","_useState","useState","_useState2","_slicedToArray","openStatusPopup","setOpenStatusPopup","_useState3","_useState4","openHistoryPopup","setOpenHistoryPopup","_useState5","_useState6","setBookOrderId","_useState7","_useState8","isBookId","setBookId","_useState9","_useState10","isReceivedQty","setIsReceivedQty","id","useParams","orderData","newData","books","getOrder","_Fragment","Paper","padding","titleContainer","SchoolIcon","viewIcon","pageTitle","margin","rowSpacing","item","spacing","xs","sm","verticalAlign","OutlinedInput","name","disabled","value","profileId","fullWidth","deliveryDate","totalBooks","Date","createdAt","toLocaleString","updatedAt","role","align","_row$bookDetail","_row$bookDetail2","_row$bookDetail3","bookDetail","title","isbn","author","dueDate","deliveredQuantity","receivedQuantity","Tooltip","IconButton","bookId","UpdateIcon","cursor","book_Order_Id","HistoryIcon","ReturnBook","isData","orderId","getBulkError","type","GET_BULK_ERROR","getAllBulkError","GET_ALL_BULK_ERROR","bulkReturnBook","payload","http","process","then","res","setMessage","message","catch","err","console","log","bulkUpdateOrders","successCB","getBulkProcess","GET_BULK_START","concat","GET_BULK_SUCCESS","getBulkSuccess","bulkData","getAllBulkProcess","rowsPerPage","arguments","length","undefined","page","GET_ALL_BULK_START","GET_ALL_BULK_SUCCESS","getAllBulkSuccess","allBulkData","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","STATUS_ITEMS","validationSchema","Cookies","get","yup","orderStatus","required","isBulk","selectedStatus","setSelectedStatus","recievdQty","setReceivedQty","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","reset","addData","Promise","resolve","reject","data","_data$data","_data$data2","_err$data","paper","dialog","FormProvider","onSubmit","bulkReturnBookStatus","orderBookIds","getAllOrderBooks","mandatory","RHFSelect","label","onChange","e","target","TextField","buttonSubmit"],"mappings":"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","file":"static/js/36.7907be34.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '../../DialogStyles';\nimport { getBookOrderHistory } from '../../../store/actions/OrderActions';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Typography,\n    Grid,\n    Link,\n    Divider,\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableCell,\n    TableRow,\n    IconButton,\n    TableBody\n} from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { useTheme, withStyles } from '@material-ui/styles';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function BookOrderHistory(props) {\n    const { isOpen, setOpen, bookOrderId } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const { bookOrderHistory } = useSelector((state) => state?.order);\n\n    const handlePopupClose = () => {\n        setOpen(false);\n    };\n    useEffect(() => {\n        dispatch(getBookOrderHistory(bookOrderId));\n    }, []);\n\n    return (\n        <div>\n            <Dialog open={isOpen} maxWidth=\"lg\">\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}> Book Order History </Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <Grid container>\n                        <TableContainer className={classes.tableContainer}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead className={classes.tableHeaderCell}>\n                                    <StyledTableRow>\n                                        {/* <TableCell> Id </TableCell> */}\n                                        <TableCell>Book Status </TableCell>\n                                        <TableCell> Status Date </TableCell>\n                                    </StyledTableRow>\n                                </TableHead>\n                                {!bookOrderHistory ? (\n                                    <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                                ) : (\n                                    <TableBody>\n                                        {bookOrderHistory.map((row, index) => (\n                                            <StyledTableRow key={index}>\n                                                {/* <TableCell> {row.id}</TableCell> */}\n                                                <TableCell>\n                                                    <Typography\n                                                        className={classes.status}\n                                                        style={{\n                                                            color:\n                                                                (row?.orderBookStatus === 'NEW' && theme.palette.warning.dark) ||\n                                                                (row?.orderBookStatus === 'CANCELLED' && theme.palette.error.dark) ||\n                                                                (row?.orderBookStatus === 'DELIVERED' && theme.palette.success.dark)\n                                                        }}\n                                                    >\n                                                        {row?.orderBookStatus}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>{row?.statusDate}</TableCell>\n                                            </StyledTableRow>\n                                        ))}\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </DialogContent>\n                <Divider style={{ marginTop: 15 }} />\n                <DialogActions className={classes.dialogAction}>\n                    <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Grid,\n    Paper,\n    Divider,\n    OutlinedInput,\n    Typography,\n    TableContainer,\n    Table,\n    TableHead,\n    TableCell,\n    TableRow,\n    IconButton,\n    TableBody,\n    Tooltip\n} from '@material-ui/core';\nimport SchoolIcon from '@material-ui/icons/School';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport useStyles from '../../ViewTableStyles';\nimport { getOrder } from '../../../store/actions/OrderActions';\nimport { useParams } from 'react-router-dom';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport HistoryIcon from '@material-ui/icons/History';\nimport ReturnBook from '../return-book';\nimport BookOrderHistory from '../book-orders-history';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function OrderDetails() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const [openStatusPopup, setOpenStatusPopup] = useState(false);\n    const [openHistoryPopup, setOpenHistoryPopup] = useState(false);\n    const [bookOrderId, setBookOrderId] = useState(null);\n    const [isBookId, setBookId] = useState(null);\n    const[isReceivedQty,setIsReceivedQty]=useState('');\n    const theme = useTheme();\n    const { id } = useParams();\n    const { orderData } = useSelector((state) => state?.order);\n    const newData = orderData?.books;\n    const handleReturnBook = (bookId,receivedQuantity) => {\n        setOpenStatusPopup(true);\n        setBookId(bookId);\n        setIsReceivedQty(receivedQuantity)\n    };\n    const handleViewHistory = (book_Order_Id) => {\n        setOpenHistoryPopup(true);\n        setBookOrderId(book_Order_Id);\n    };\n    useEffect(() => {\n        dispatch(getOrder(id));       \n    }, []);\n\n    return (\n        <>\n            <Paper style={{ padding: 20 }}>\n                <div className={classes.titleContainer}>\n                    <SchoolIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp;Order Details </span>\n                </div>\n                <Divider style={{ margin: '30px 0px' }} />\n                <Grid container rowSpacing={4} style={{ padding: 10 }}>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={3}>\n                            <label style={{ verticalAlign: 'sub' }}>Profile Id</label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"profileId\" disabled value={orderData?.profileId} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={3}>\n                            <label style={{ verticalAlign: 'sub' }}>Order Id</label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"profileId\" disabled value={orderData?.id} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={3}>\n                            <label style={{ verticalAlign: 'sub' }}> Delivery Date</label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"estimatedDeliveryDate\" disabled value={orderData?.deliveryDate} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={3}>\n                            <label style={{ verticalAlign: 'sub' }}>Total Books</label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"totalBooks\" disabled value={orderData?.totalBooks} fullWidth />\n                        </Grid>\n                    </Grid>\n                    {/* { loggedUserProfile?.role==='ADMIN'&& <>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Returned Books</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.returnedBooks}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Due Books</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.dueBooks}</div>\n                                </Grid>\n                            </Grid>\n                            </>} */}\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={3}>\n                            <label style={{ verticalAlign: 'sub' }}>Status</label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"status\" disabled value={orderData?.status} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={3}>\n                            <label style={{ verticalAlign: 'sub' }}>Created At</label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"createdAt\" disabled value={new Date(orderData?.createdAt).toLocaleString()} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={3}>\n                            <label style={{ verticalAlign: 'sub' }}>Updated At</label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"updatedAt\" disabled value={new Date(orderData?.updatedAt).toLocaleString()} fullWidth />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Divider style={{ margin: '30px 0px' }} />\n                <Grid container rowSpacing={4} style={{ padding: 10 }}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h4\"> Book Details </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TableContainer className={classes.tableContainer}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead className={classes.tableHeaderCell}>\n                                    <StyledTableRow>\n                                        <TableCell> Book Name </TableCell>\n                                        <TableCell> ISBN No </TableCell>\n                                        <TableCell> Author</TableCell>\n                                        {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN') && <TableCell align=\"center\"> Due Date</TableCell>}\n                                        {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN' ) && <TableCell align=\"center\"> Delivered Qty</TableCell>}\n                                        {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN') && <TableCell align=\"center\"> Lost Qty</TableCell>}\n                                        <TableCell align=\"center\"> Status </TableCell>\n                                        {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN') && <TableCell align=\"right\"> Actions </TableCell>}\n                                    </StyledTableRow>\n                                </TableHead>\n                                {!newData ? (\n                                    <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                                ) : (\n                                    <TableBody>\n                                        {newData?.map((row, index) => (\n                                            <StyledTableRow key={index}>\n                                                <TableCell>{row?.bookDetail?.title}</TableCell>\n                                                <TableCell>{row?.bookDetail?.isbn}</TableCell>\n                                                <TableCell>{row?.bookDetail?.author}</TableCell>\n                                                {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN') && (\n                                                    <TableCell align=\"center\">{row?.dueDate || '-'}</TableCell>\n                                                )}\n                                                {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN') && (\n                                                    <TableCell align=\"center\">{row?.deliveredQuantity || '-'}</TableCell>\n                                                )}\n                                                {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN') && (\n                                                    <TableCell align=\"center\">{row?.receivedQuantity || '-'}</TableCell>\n                                                )}\n                                                <TableCell align=\"center\">\n                                                    <Typography\n                                                        className={classes.status}\n                                                        style={{\n                                                            backgroundColor:\n                                                                (row?.status === 'NEW' && theme.palette.warning.dark) ||\n                                                                (row?.status === 'CANCELLED' && theme.palette.error.dark) ||\n                                                                (row?.status === 'DELIVERED' && theme.palette.success.dark)\n                                                        }}\n                                                    >\n                                                        {row?.status}\n                                                    </Typography>\n                                                </TableCell>\n                                                {(loggedUserProfile.role === 'ADMIN' || loggedUserProfile.role === 'SUPER_ADMIN') && (\n                                                    <TableCell align=\"right\">\n                                                        <Tooltip title=\"Update Book Order Status\" aria-label=\"Return Book\">\n                                                            <IconButton onClick={() => handleReturnBook(row?.bookId,row.receivedQuantity)}>\n                                                                <UpdateIcon color=\"success\" style={{ cursor: 'pointer' }} />\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                        <Tooltip title=\"View Book Order History\" aria-label=\"Book History\">\n                                                            <IconButton onClick={() => handleViewHistory(row?.id)}>\n                                                                <HistoryIcon color=\"success\" style={{ cursor: 'pointer' }} />\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </TableCell>\n                                                )}\n                                            </StyledTableRow>\n                                        ))}\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </Paper>\n            {openStatusPopup && (\n                <ReturnBook\n                isData={isReceivedQty}\n                    isOpen={openStatusPopup}\n                    setOpen={setOpenStatusPopup}\n                    profileId={orderData?.profileId}\n                    bookId={isBookId}\n                    orderId={orderData?.id}\n                />\n            )}\n            {openHistoryPopup && <BookOrderHistory isOpen={openHistoryPopup} setOpen={setOpenHistoryPopup} bookOrderId={bookOrderId} />}\n        </>\n    );\n}\n","import { http } from '../../../utils/http';\nimport { setMessage } from '../MessageActions';\nimport {\n    GET_ALL_BULK_START,\n    GET_ALL_BULK_SUCCESS,\n    GET_ALL_BULK_ERROR,\n    GET_BULK_START,\n    GET_BULK_SUCCESS,\n    GET_BULK_ERROR\n} from '../../constants';\n\nconst getBulkStart = () => {\n    return { type: GET_BULK_START };\n};\nconst getBulkSuccess = (payload) => {\n    return { type: GET_BULK_SUCCESS, payload };\n};\nconst getBulkError = (error) => {\n    return { type: GET_BULK_ERROR, error };\n};\n\nconst getAllBulkStart = () => {\n    return { type: GET_ALL_BULK_START };\n};\nconst getAllBulkSuccess = (payload) => {\n    return { type: GET_ALL_BULK_SUCCESS, payload };\n};\nconst getAllBulkError = (error) => {\n    return { type: GET_ALL_BULK_ERROR, error };\n};\n\nconst bulkPlaceOrder = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'POST', 'orders-service/bulk/order', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst bulkReturnBook = (payload) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'POST', 'orders-service/bulk/book/return', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst bulkUpdateOrders = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'PUT', 'orders-service/bulk/order/status', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getBulkProcess = (id) => (dispatch) => {\n    dispatch(getBulkStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'GET', `orders-service/bulk/${id}`, true)\n            .then((res) => {\n                const payload = {\n                    bulkData: res\n                };\n                dispatch(getBulkSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getBulkError(err));\n            });\n    } catch (error) {\n        dispatch(getBulkError('Something went wrong'));\n    }\n};\n\nconst getAllBulkProcess = (rowsPerPage = 10, page = 1) => (dispatch) => {\n    dispatch(getAllBulkStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'GET', `orders-service/bulk?pageNumber=${page}&pageSize=${rowsPerPage}`, true)\n            .then((res) => {\n                const payload = {\n                    allBulkData: res\n                };\n                dispatch(getAllBulkSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getAllBulkError(err));\n            });\n    } catch (error) {\n        dispatch(getAllBulkError('Something went wrong'));\n    }\n};\n\nexport { bulkPlaceOrder, bulkUpdateOrders, getBulkProcess, getAllBulkProcess, bulkReturnBook };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\"\n}), 'Update');\n\nexports.default = _default;","import React, { useState } from 'react';\nimport { http } from '../../../utils/http';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '../../DialogStyles';\nimport { returnBook, getOrder, getAllOrderBooks } from '../../../store/actions/OrderActions';\nimport { bulkReturnBook } from '../../../store/actions/BulkActions';\nimport { FormProvider, RHFSelect } from '../../../components/hook-form';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { setMessage } from '../../../store/actions/MessageActions';\nimport Cookies from 'js-cookie';\n\nconst STATUS_ITEMS = [\n    { id: 0, status: 'RETURNED' },\n    { id: 1, status: 'EXTENDED' },\n    { id: 2, status: 'REPLACED' },\n    { id: 3, status: 'LOST' },\n    { id: 4, status: 'DELIVERED' },\n    { id: 5, status: 'CANCELLED' },\n    { id: 6, status: 'PARTIAL_RETURNED' }\n];\n\nconst token = Cookies.get('token');\n\nconst validationSchema = yup.object({\n    orderStatus: yup.string().required('Order Status is required')\n});\n\nexport default function ReturnBook(props) {\n    const { isOpen, setOpen, profileId, bookId, orderId, isBulk, isData } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [selectedStatus, setSelectedStatus] = useState('RETURNED');\n    const [recievdQty, setReceivedQty] = useState('');\n    const initialValues = {\n        orderStatus: 'RETURNED'\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n    const { reset, handleSubmit } = methods;\n\n    const handlePopupClose = () => {\n        setOpen(false);\n        //reset();\n    };\n    const onSubmit = () => {\n        if (isBulk) {\n            const payload = { bulkReturnBookStatus: selectedStatus, orderBookIds: orderId };\n\n            dispatch(\n                bulkReturnBook(payload, () => {\n                    dispatch(getAllOrderBooks());\n                })\n            );\n            handlePopupClose();\n        } else {\n            addData(selectedStatus);\n        }\n    };\n\n    const addData = () => {\n        return new Promise((resolve, reject) => {\n            http(\n                process.env.REACT_APP_ROOT_URL_ORDER,\n                'POST',\n                `orders-service/orders/${orderId}/books/${bookId}/return?returnBookStatus=${selectedStatus}&receivedQuantity=${recievdQty}`,\n                {},\n                true\n            )\n                .then((data) => {\n                    resolve(data);\n                    dispatch(setMessage(data?.data?.message ? data?.data?.message : 'Successfull !!'));\n                    dispatch(getOrder(orderId));\n                    handlePopupClose();\n                })\n                .catch((err) => {\n                    reject(err);\n                    dispatch(setMessage(err?.data?.message));\n                });\n        });\n    };\n    const handleStatusChange = (e) => {\n        setSelectedStatus(e.target.value);\n        if (selectedStatus === 'PARTIAL_RETURNED') {\n            setReceivedQty(0);\n        } else {\n            setReceivedQty(props.isData);\n        }\n    };\n    return (\n        <div>\n            <Dialog open={isOpen} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}> Update Book Status </Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <label>\n                                    Status <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFSelect name=\"orderStatus\" label=\"\" onChange={handleStatusChange} value={selectedStatus}>\n                                    <option value=\"\">Select Status</option>\n                                    {STATUS_ITEMS?.map((item, index) => {\n                                        if (isBulk && item.status === 'PARTIAL_RETURNED') {\n                                            return null;\n                                        }\n                                        return (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        );\n                                    })}\n                                </RHFSelect>\n                            </Grid>\n                            &nbsp;\n                            {(isData || isData === 0) && (\n                                <Grid item xs={12}>\n                                    <label>\n                                        Lost Book Quantity <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"quantity\"\n                                        label=\"\"\n                                        value={recievdQty}\n                                        fullWidth\n                                        required\n                                        disabled={selectedStatus !== 'PARTIAL_RETURNED'}\n                                        onChange={(e) => setReceivedQty(e.target.value)}\n                                    />\n                                </Grid>\n                            )}\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" type=\"submit\" className={classes.buttonSubmit}>\n                            Update\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n"],"sourceRoot":""}