{"version":3,"sources":["../node_modules/@material-ui/icons/Info.js","views/orders/bulk-batches/view-bulk-details/index.js","store/actions/BulkActions/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","useStyles","makeStyles","_searchControl","table","minWidth","tableContainer","borderRadius","marginTop","tableHeaderCell","fontWeight","primary","light","color","status","fontSize","padding","display","width","btn","cursor","boxShadow","marginLeft","titleContainer","background","main","marginBottom","pageTitle","paper","viewIcon","verticalAlign","searchControl","paddingRight","paddingLeft","_defineProperty","breakpoints","down","startAdornment","grey","ViewBulkDetail","classes","useUserRole","roleList","useTheme","dispatch","useDispatch","id","useParams","_useState","useState","_useState2","_slicedToArray","setValue","_useState3","_useState4","page","_useState5","_useState6","rowsPerPage","_useSelector","useSelector","state","bulk","bulkData","loading","newData","useEffect","getBulkProcess","_jsx","_Fragment","children","_jsxs","MainCard","className","InfoIcon","Paper","elevation","Grid","style","justifyContent","OutlinedInput","onChange","e","target","placeholder","InputAdornment","position","IconSearch","stroke","size","TableContainer","Table","TableHead","TableCell","align","TableBody","colSpan","CircularProgress","length","map","row","index","book","title","orderBook","profileId","Typography","success","warning","dark","error","statusReason","Moment","format","date","updatedAt","variant","getBulkError","type","GET_BULK_ERROR","getAllBulkError","GET_ALL_BULK_ERROR","bulkReturnBook","payload","http","process","then","res","setMessage","message","catch","err","console","log","bulkUpdateOrders","successCB","GET_BULK_START","concat","GET_BULK_SUCCESS","getBulkSuccess","getAllBulkProcess","arguments","undefined","GET_ALL_BULK_START","GET_ALL_BULK_SUCCESS","getAllBulkSuccess","allBulkData"],"mappings":"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","file":"static/js/49.8845ca5c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport Moment from 'react-moment';\nimport { makeStyles, withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    Typography,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    CircularProgress\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBulkProcess } from '../../../../store/actions/BulkActions';\nimport { useParams } from 'react-router-dom';\nimport useUserRole from '../../../../hooks/useUserRole';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650\n    },\n    tableContainer: {\n        borderRadius: 15,\n        marginTop: 16\n    },\n    tableHeaderCell: {\n        fontWeight: 'lighter',\n        backgroundColor: theme.palette.primary.light,\n        color: '#ffffff'\n    },\n    status: {\n        fontWeight: 'lighter',\n        fontSize: '0.75rem',\n        color: 'white',\n        backgroundColor: 'gray',\n        borderRadius: 8,\n        padding: '3px 10px',\n        display: 'inline-block'\n    },\n    root: {\n        padding: 16,\n        width: '100%'\n    },\n    btn: {\n        cursor: 'pointer',\n        boxShadow: '0 0.5em 0.5em 0.1em #68c2d9',\n        marginLeft: 20\n    },\n    titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n\n    viewIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    searchControl: {\n        width: '234px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    }\n}));\n\nexport default function ViewBulkDetail() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SUPER_ADMIN'] });\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    let { id } = useParams();\n    const [value, setValue] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const { bulkData, loading } = useSelector((state) => state?.bulk);\n    const newData = bulkData;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    useEffect(() => {\n        dispatch(getBulkProcess(id, rowsPerPage, page + 1));\n    }, [rowsPerPage, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <InfoIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Bulk Details </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <div>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                value={value}\n                                onChange={(e) => setValue(e.target.value)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </div>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    {/* <TableCell> Input Value </TableCell> */}\n                                    <TableCell align=\"center\"> Book Title </TableCell>\n                                    <TableCell align=\"center\"> Cus Id </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"center\"> Status Reason </TableCell>\n                                    <TableCell align=\"center\"> Date </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            <TableBody>\n                                {loading ? (\n                  <StyledTableRow>\n                    <TableCell colSpan={10} align=\"center\">\n                      <CircularProgress />\n                    </TableCell>\n                  </StyledTableRow>\n                ) : newData?.length > 0 ? (\n                    newData?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell align=\"center\">{row.book.title}</TableCell>\n                                            <TableCell align=\"center\">{row.orderBook.profileId}</TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row.status === 'COMPLETED' && theme.palette.success.main) ||\n                                                            (row.status === 'IN_PROGRESS' && theme.palette.warning.dark) ||\n                                                            (row.status === 'FAILED' && theme.palette.error.main)\n                                                    }}\n                                                >\n                                                    {row.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row.statusReason  || 'Done'}</TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography>\n                                                    <Moment format=\"YYYY/MM/DD hh:mm a\" date={row?.updatedAt} />\n                                                </Typography>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))\n                                    ) : (\n                                        <StyledTableRow>\n                                          <TableCell colSpan={10} align=\"center\">\n                                            <Typography variant=\"caption\">Sorry! No data available</Typography>\n                                          </TableCell>\n                                        </StyledTableRow>\n                                      )}\n                                </TableBody>\n                        </Table>\n                    </TableContainer>\n                    {/* <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={bulkData?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    /> */}\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n","import { http } from '../../../utils/http';\nimport { setMessage } from '../MessageActions';\nimport {\n    GET_ALL_BULK_START,\n    GET_ALL_BULK_SUCCESS,\n    GET_ALL_BULK_ERROR,\n    GET_BULK_START,\n    GET_BULK_SUCCESS,\n    GET_BULK_ERROR\n} from '../../constants';\n\nconst getBulkStart = () => {\n    return { type: GET_BULK_START };\n};\nconst getBulkSuccess = (payload) => {\n    return { type: GET_BULK_SUCCESS, payload };\n};\nconst getBulkError = (error) => {\n    return { type: GET_BULK_ERROR, error };\n};\n\nconst getAllBulkStart = () => {\n    return { type: GET_ALL_BULK_START };\n};\nconst getAllBulkSuccess = (payload) => {\n    return { type: GET_ALL_BULK_SUCCESS, payload };\n};\nconst getAllBulkError = (error) => {\n    return { type: GET_ALL_BULK_ERROR, error };\n};\n\nconst bulkPlaceOrder = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'POST', 'orders-service/bulk/order', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst bulkReturnBook = (payload) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'POST', 'orders-service/bulk/book/return', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst bulkUpdateOrders = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'PUT', 'orders-service/bulk/order/status', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getBulkProcess = (id) => (dispatch) => {\n    dispatch(getBulkStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'GET', `orders-service/bulk/${id}`, true)\n            .then((res) => {\n                const payload = {\n                    bulkData: res\n                };\n                dispatch(getBulkSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getBulkError(err));\n            });\n    } catch (error) {\n        dispatch(getBulkError('Something went wrong'));\n    }\n};\n\nconst getAllBulkProcess = (rowsPerPage = 10, page = 1) => (dispatch) => {\n    dispatch(getAllBulkStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'GET', `orders-service/bulk?pageNumber=${page}&pageSize=${rowsPerPage}`, true)\n            .then((res) => {\n                const payload = {\n                    allBulkData: res\n                };\n                dispatch(getAllBulkSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getAllBulkError(err));\n            });\n    } catch (error) {\n        dispatch(getAllBulkError('Something went wrong'));\n    }\n};\n\nexport { bulkPlaceOrder, bulkUpdateOrders, getBulkProcess, getAllBulkProcess, bulkReturnBook };\n"],"sourceRoot":""}