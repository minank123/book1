{"version":3,"sources":["views/stock-management/AllSelectBooks.js","store/actions/StockActions/index.js","views/stock-management/AddEditStock.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllSelectBooks","_allBooks$content","classes","useStyles","useUserRole","roleList","id","useParams","dispatch","useDispatch","useTheme","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","isOpenModal","setOpenModal","_useState9","_useState10","isSchoolId","setSchoolId","_useState11","_useState12","isBooksId","setBooksId","allBooks","useSelector","state","books","useEffect","getBooks","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","Grid","style","display","justifyContent","OutlinedInput","searchControl","onChange","e","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","content","map","row","_row$imageUrls","src","imageUrls","alt","width","title","author","publisher","isbn","shelfId","Typography","status","success","main","warning","dark","Tooltip","IconButton","onClick","data","AddIcon","color","cursor","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom","AddEditStock","open","close","viewStockError","error","type","VIEW_STOCK_ERROR","updateStockError","UPDATE_STOCK_ERROR","addStockError","ADD_STOCK_ERROR","getLibraryStockError","GET_LIBRARY_STOCK_ERROR","updateLibraryStockError","UPDATE_LIBRARY_STOCK_ERROR","viewStock","schoolId","searchData","arguments","length","undefined","rowsPerpage","VIEW_STOCK_START","http","process","concat","then","res","payload","VIEW_STOCK_SUCCESS","viewStockSuccess","viewStockData","catch","err","setMessage","message","deleteBookFromStok","bid","profileId","successCB","_err$data","console","log","updateStock","bookId","successCb","UPDATE_STOCK_START","UPDATE_STOCK_SUCCESS","updateStockSuccess","_err$data2","addStock","ADD_STOCK_START","ADD_STOCK_SUCCESS","addStockSuccess","_err$data3","getLibraryStock","GET_LIBRARY_STOCK_START","GET_LIBRARY_STOCK_SUCCESS","getLibraryStockSuccess","libraryStockData","updateLibraryStock","quantity","UPDATE_LIBRARY_STOCK_START","isIncrement","UPDATE_LIBRARY_STOCK_SUCCESS","_err$data4","validationSchema","yup","required","props","isEditData","history","useHistory","initialValues","totalQuantity","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","Dialog","paper","dialog","DialogTitle","dialogTitle","dialogTitleChild","fontSize","Link","to","CloseIcon","closeIcon","FormProvider","onSubmit","parseInt","push","DialogContent","container","spacing","item","xs","sm","label","mandatory","RHFTextField","name","textField","autoFocus","Divider","marginTop","DialogActions","dialogAction","Button","variant","buttonCancel","buttonSubmit"],"mappings":"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","file":"static/js/54.a6a11260.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainCard from '../../ui-component/cards/MainCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport AddIcon from '@material-ui/icons/Add';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport useStyles from '../books/styles';\nimport { getBooks } from '../../store/actions/BookActions';\nimport AddEditStock from './AddEditStock';\nimport useUserRole from '../../hooks/useUserRole';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllSelectBooks() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const [value, setValue] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [isOpenModal, setOpenModal] = useState(false);\n    const [isSchoolId, setSchoolId] = useState(null);\n    const [isBooksId, setBooksId] = useState(null);\n\n    const { allBooks } = useSelector((state) => state.books);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleAddStock = (data) => {\n        setBooksId(data?.id);\n        setOpenModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setOpenModal(false);\n    };\n\n    useEffect(() => {\n        dispatch(getBooks(value ? value : '', page + 1, rowsPerPage));\n    }, [value, page, rowsPerPage]);\n\n    useEffect(() => {\n        if (id) {\n            setSchoolId(id);\n        }\n    }, [id]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Select Books For Stock </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                value={value}\n                                onChange={(e) => setValue(e.target.value)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </div>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Cover</TableCell>\n                                    <TableCell> Title </TableCell>\n                                    <TableCell> Author </TableCell>\n                                    <TableCell> Publisher </TableCell>\n                                    <TableCell> Isbn No. </TableCell>\n                                    <TableCell align=\"center\"> Rack </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            <TableBody>\n                                {allBooks?.content?.map((row) => (\n                                    <StyledTableRow key={row?.id}>\n                                        <TableCell>\n                                            <img src={row?.imageUrls?.[0]} alt=\"book\" width=\"60px\" />\n                                        </TableCell>\n                                        <TableCell> {row?.title} </TableCell>\n                                        <TableCell> {row?.author} </TableCell>\n                                        <TableCell> {row?.publisher} </TableCell>\n                                        <TableCell> {row?.isbn} </TableCell>\n                                        <TableCell align=\"center\"> {row?.shelfId}</TableCell>\n                                        <TableCell align=\"center\">\n                                            <Typography\n                                                className={classes.status}\n                                                style={{\n                                                    backgroundColor:\n                                                        (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                        (row?.status === 'PENDING' && 'blue') ||\n                                                        (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                }}\n                                            >\n                                                {row?.status}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Tooltip title=\"Add Stock\">\n                                                <IconButton onClick={() => handleAddStock(row)}>\n                                                    <AddIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </StyledTableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={allBooks?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {isOpenModal && <AddEditStock open={isOpenModal} close={handleCloseModal} isSchoolId={isSchoolId} isBooksId={isBooksId} />}\n            </MainCard>\n        </>\n    );\n}\n","import { http } from '../../../utils/http';\nimport {\n    VIEW_STOCK_START,\n    VIEW_STOCK_SUCCESS,\n    VIEW_STOCK_ERROR,\n    UPDATE_STOCK_ERROR,\n    UPDATE_STOCK_START,\n    UPDATE_STOCK_SUCCESS,\n    ADD_STOCK_START,\n    ADD_STOCK_SUCCESS,\n    ADD_STOCK_ERROR,\n    GET_LIBRARY_STOCK_START,\n    GET_LIBRARY_STOCK_SUCCESS,\n    GET_LIBRARY_STOCK_ERROR,\n    UPDATE_LIBRARY_STOCK_START,\n    UPDATE_LIBRARY_STOCK_SUCCESS,\n    UPDATE_LIBRARY_STOCK_ERROR\n} from '../../constants';\nimport { setMessage } from '../MessageActions';\n\nconst viewStockStart = () => {\n    return { type: VIEW_STOCK_START };\n};\nconst viewStockSuccess = (payload) => {\n    return { type: VIEW_STOCK_SUCCESS, payload };\n};\nconst viewStockError = (error) => {\n    return { type: VIEW_STOCK_ERROR, error };\n};\nconst updateStockStart = () => {\n    return { type: UPDATE_STOCK_START };\n};\nconst updateStockSuccess = (payload) => {\n    return { type: UPDATE_STOCK_SUCCESS, payload };\n};\nconst updateStockError = (error) => {\n    return { type: UPDATE_STOCK_ERROR, error };\n};\nconst addStockStart = () => {\n    return { type: ADD_STOCK_START };\n};\nconst addStockSuccess = (payload) => {\n    return { type: ADD_STOCK_SUCCESS, payload };\n};\nconst addStockError = (error) => {\n    return { type: ADD_STOCK_ERROR, error };\n};\nconst getLibraryStockStart = () => {\n    return { type: GET_LIBRARY_STOCK_START };\n};\nconst getLibraryStockSuccess = (payload) => {\n    return { type: GET_LIBRARY_STOCK_SUCCESS, payload };\n};\nconst getLibraryStockError = (error) => {\n    return { type: GET_LIBRARY_STOCK_ERROR, error };\n};\nconst updateLibraryStockStart = () => {\n    return { type: UPDATE_LIBRARY_STOCK_START };\n};\nconst updateLibraryStockSuccess = (payload) => {\n    return { type: UPDATE_LIBRARY_STOCK_SUCCESS, payload };\n};\nconst updateLibraryStockError = (error) => {\n    return { type: UPDATE_LIBRARY_STOCK_ERROR, error };\n};\n\nconst viewStock =\n    (schoolId, searchData = '', page=1 ,rowsPerpage=25) =>\n    (dispatch) => {\n        dispatch(viewStockStart());\n        try {\n            http(\n                process.env.REACT_APP_ROOT_URL_BOOK,\n                'GET',\n                `books-service/books/schools/${schoolId}/total?searchKey=${searchData}&pageNumber=${page}&pageSize=${rowsPerpage}`,\n                true\n            )\n                .then((res) => {\n                    const payload = {\n                        viewStockData: res\n                    };\n                    dispatch(viewStockSuccess(payload));\n                })\n                .catch((err) => {\n                    dispatch(viewStockError(err));\n                    dispatch(setMessage(err?.message));\n                });\n        } catch (error) {\n            dispatch(viewStockError(error?.message));\n        }\n    };\n    const deleteBookFromStok = (bid,profileId, successCB) => (dispatch) => {\n        try {\n            http(process.env.REACT_APP_ROOT_URL_BOOK, 'DELETE', `books-service/books/${bid}/schools/${profileId}/total`, true)\n                .then((res) => {\n                    dispatch(setMessage(res?.message ? res?.message : 'Deleted Successfully'));\n                    successCB && successCB(res);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    dispatch(setMessage(err?.data?.message));\n                });\n        } catch (error) {\n            console.log(error);\n            dispatch(setMessage('Deleted Module Successfully'));\n        }\n    };\n\nconst updateStock = (payload, bookId, schoolId, successCb) => (dispatch) => {\n    dispatch(updateStockStart());\n    try {\n        http(\n            process.env.REACT_APP_ROOT_URL_BOOK,\n            'PUT',\n            `books-service/books/${bookId}/schools/${schoolId}/total?quantity=${payload}`,\n            true\n        )\n            .then((res) => {\n                dispatch(updateStockSuccess(res));\n                successCb && successCb(res);\n                dispatch(setMessage(res?.message));\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch(updateStockError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(updateStockError(error?.message));\n    }\n};\n\nconst addStock = (payload, bookId, schoolId, successCb) => (dispatch) => {\n    dispatch(addStockStart());\n    try {\n        http(\n            process.env.REACT_APP_ROOT_URL_BOOK,\n            'POST',\n            `books-service/books/${bookId}/schools/${schoolId}/total?quantity=${payload}`,\n            true\n        )\n            .then((res) => {\n                dispatch(addStockSuccess(res));\n                successCb && successCb(res);\n            })\n            .catch((err) => {\n                dispatch(addStockError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(addStockError(error?.message));\n    }\n};\n\nconst getLibraryStock =\n    (searchData = '', page = 1, rowsPerPage = 10) =>\n    (dispatch) => {\n        dispatch(getLibraryStockStart());\n        try {\n            http(\n                process.env.REACT_APP_ROOT_URL_BOOK,\n                'GET',\n                `books-service/books/total?searchKey=${searchData}&pageNumber=${page}&pageSize=${rowsPerPage}`,\n                true\n            )\n                .then((res) => {\n                    const payload = {\n                        libraryStockData: res\n                    };\n                    dispatch(getLibraryStockSuccess(payload));\n                   \n                })\n                .catch((err) => {\n                    dispatch(getLibraryStockError(err));\n                    dispatch(setMessage(err?.message));\n                });\n        } catch (error) {\n            dispatch(getLibraryStockError(error?.message));\n        }\n    };\n\nconst updateLibraryStock = (bookId, quantity, successCb) => (dispatch) => {\n    dispatch(updateLibraryStockStart());\n    try {\n        const isIncrement = quantity >= 0;\n        http(process.env.REACT_APP_ROOT_URL_BOOK, 'PUT', `books-service/books/${bookId}/total/library-stock?quantity=${quantity} `, true)\n            .then((res) => {\n                dispatch(updateLibraryStockSuccess(res));\n                dispatch(setMessage(`${isIncrement ? 'Incremented' : 'Decremented'} successfully`));\n                successCb && successCb(res);\n            })\n            .catch((err) => {\n                dispatch(updateLibraryStockError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(updateLibraryStockError(error?.message));\n    }\n};\n\nexport { viewStock,deleteBookFromStok, updateStock, addStock, getLibraryStock, updateLibraryStock };\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField } from '../../components/hook-form';\nimport * as yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport useStyles from '../DialogStyles';\nimport { addStock, updateStock, viewStock } from '../../store/actions/StockActions';\nimport { useHistory } from 'react-router-dom';\n\nconst validationSchema = yup.object({\n    quantity: yup.string('Enter stock quantity').required('Stock quantity is required')\n});\n\nexport default function AddEditStock(props) {\n    const { open, close, isEditData, isSchoolId, isBooksId } = props;\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        quantity: isEditData?.totalQuantity || ''\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n    const { handleSubmit } = methods;\n    const onSubmit = (data) => {\n        if (isEditData) {\n            dispatch(\n                updateStock(parseInt(data?.quantity), isEditData?.bookId, isSchoolId, () => {\n                    close();\n                    dispatch(viewStock(isSchoolId));\n                })\n            );\n        } else {\n            dispatch(\n                addStock(parseInt(data?.quantity), isBooksId, isSchoolId, () => {\n                    close();\n                    history.push(`/admin/view-stock/${isSchoolId}`);\n                })\n            );\n        }\n    };\n\n    return (\n        <div>\n            <Dialog open={open} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add stock quantity' : 'Update stock quantity'}</Typography>\n                        <Link to=\"#\" onClick={close}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Increment or decrement stock quantity<span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"quantity\" placeholder=\"Add stock quantity\" className={classes.textField} autoFocus />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={close}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n"],"sourceRoot":""}