{"version":3,"sources":["assets/images/gift-voucher-3.jpeg","views/vouchers/add-voucher/index.js"],"names":["useStyles","makeStyles","theme","_imageTitle","_imageStyle","label","marginBottom","fontSize","fontFamily","fontWeight","color","root","padding","formControl","display","editIcon","backgroundColor","palette","success","dark","width","height","borderRadius","marginTop","position","cursor","selectEmpty","spacing","titleContainer","background","primary","main","pageTitle","paper","pageTitleIcon","verticalAlign","imageContainer","_defineProperty","breakpoints","down","justifyContent","imageTitle","textAlign","marginLeft","formContainer","marginRight","border","imageStyle","validationSchema","yup","amount","typeError","positive","required","purchasedForEmail","purchasedByEmail","message","GiftVoucher","props","dispatch","useDispatch","history","useHistory","_useState","useState","_useState2","_slicedToArray","setVoucher","_useState3","_useState4","loading","setLoading","classes","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","AddGiftVoucher","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","values","orderPayload","result","_result$data","id","currency","options","paymentObject","wrap","_context2","prev","next","sent","alert","abrupt","http","process","data","key","name","description","order_id","handler","_handler","_callee","response","payload","_context","paymentMode","paymentId","razorpay_payment_id","orderId","razorpay_order_id","signature","razorpay_signature","addVoucher","then","res","setMessage","catch","error","_error$data","_error$data2","console","log","push","pathname","state","detail","stop","_x2","apply","arguments","notes","address","window","Razorpay","on","open","_x","formik","useFormik","initialValues","enableReinitialize","onSubmit","_jsxs","_Fragment","children","_jsx","Header","Paper","Grid","container","item","xs","md","alt","GiftVoucherImg","className","Typography","sx","margin","style","handleSubmit","mb","sm","OutlinedInput","fullWidth","autoFocus","placeholder","type","variant","size","value","onChange","handleChange","touched","Boolean","errors","helperText","Button","fullwidth","FooterNew","Loader"],"mappings":"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","file":"static/js/105.583090f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gift-voucher-3.723e0952.jpeg\";","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Button, OutlinedInput, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { addVoucher } from '../../../services/FreeTrialService';\nimport { setMessage } from '../../../store/actions/MessageActions';\nimport { useDispatch } from 'react-redux';\nimport GiftVoucherImg from '../../../assets/images/gift-voucher-3.jpeg';\nimport { useHistory } from 'react-router';\nimport Header from '../../home/components/header';\nimport FooterNew from '../../home/components/FooterNew';\nimport Loader from '../../../components/Loader/Loader';\nimport { Typography } from '@mui/material';\nimport { http } from '../../../utils/http';\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        marginBottom: '.0rem',\n        fontSize: '15px',\n        fontFamily: 'Josefin Sans',\n        fontWeight: 'lighter',\n        color: '#fff'\n    },\n\n    root: {\n        padding: '20px'\n    },\n    formControl: {\n        display: 'flex'\n    },\n    editIcon: {\n        backgroundColor: theme.palette.success.dark,\n        color: '#fff',\n        width: '20px',\n        height: '20px',\n        borderRadius: '25px',\n        marginTop: '70px',\n        fontSize: '10px',\n        position: 'absolute',\n        cursor: 'pointer'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2)\n    },\n    titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n    pageTitleIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    imageContainer: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'flex',\n            justifyContent: 'center'\n        }\n    },\n    imageTitle: {\n        [theme.breakpoints.down('sm')]: {\n            textAlign: 'center',\n            marginLeft: 0\n        },\n        [theme.breakpoints.down('lg')]: {\n            marginLeft: 40\n        },\n        [theme.breakpoints.down('md')]: {\n            marginLeft: 0\n        },\n        label: {\n            display: 'inline-block',\n            marginBottom: 0,\n            marginTop: 25\n        }\n    },\n    formContainer: {\n        backgroundColor: '#2EBEE1',\n        borderRadius: '25px',\n        marginTop: '2%',\n        marginLeft: '8%',\n        marginRight: '8%',\n        marginBottom: '2%',\n        border: '1px solid black',\n        [theme.breakpoints.down('md')]: {\n            marginLeft: '20px',\n            marginRight: '20px'\n        }\n    },\n    imageStyle: {\n\n        border: '1px solid #2EBEE1',\n        borderRadius: '25px',\n        marginTop: '2%',\n        marginLeft: '8%',\n        marginRight: '8%',\n        marginBottom: '2%',\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: '4%',\n            marginRight: '1%',\n            height: '240px'\n        },\n        [theme.breakpoints.down('md')]: {\n            marginLeft: '4%',\n            marginRight: '1%',\n            width: '720px'\n        }\n    }\n}));\n\nconst validationSchema = yup.object({\n    amount: yup.number().typeError('Invalid amount').positive('Amount must be positive').required('Amount is required'),\n    purchasedForEmail: yup.string('Enter Your Email').required('Email  is required'),\n    purchasedByEmail: yup.string('Enter Email').required('Email is required'),\n    message: yup.string('Enter Comment').required('Comment is required')\n});\n\nexport default function GiftVoucher(props) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [voucher, setVoucher] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const classes = useStyles();\n\n    const initialValues = {\n        amount: '',\n        purchasedForEmail: '',\n        purchasedByEmail: '',\n        message: ''\n    };\n    function loadScript(src) {\n        return new Promise((resolve) => {\n            const script = document.createElement('script');\n            script.src = src;\n            script.onload = () => {\n                resolve(true);\n            };\n            script.onerror = () => {\n                resolve(false);\n            };\n            document.body.appendChild(script);\n        });\n    }\n\n    const AddGiftVoucher = async (values) => {\n        const orderPayload = {\n            amount: values?.amount * 100,\n            currency: 'INR'\n        };\n        const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js');\n\n        if (!res) {\n            alert('Razorpay SDK failed to load. Are you online?');\n            return;\n        }\n\n        const result = await http(\n            process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS,\n            'POST',\n            'subscriptions-service/module-subscriptions/orders',\n            orderPayload\n        );\n        \n\n        if (!result) {\n            alert('Server error. Are you online?');\n            return;\n        }\n\n        const { id, amount, currency } = result.data;\n\n        const options = {\n            key: 'rzp_live_hnvBKG74pmvVdS',\n            amount: amount,\n            currency: currency,\n            name: 'Acme Corp',\n            description: 'Voucher Transaction',\n            // image: 'https://example.com/your_logo',\n            order_id: id,\n            handler: async function (response) {\n                const payload = {\n                    amount: values?.amount,\n                    purchasedForEmail: values?.purchasedForEmail,\n                    purchasedByEmail: values?.purchasedByEmail,\n                    message: values?.message,\n                    paymentMode: 'ONLINE',\n                    paymentId: response?.razorpay_payment_id,\n                    orderId: response?.razorpay_order_id,\n                    signature: response?.razorpay_signature\n\n                    //old payload\n                };\n\n                await addVoucher(payload)\n                    .then((res) => {\n                        setLoading(false);\n                        setVoucher(res);\n                        dispatch(setMessage(res?.message ? res?.message : 'Added Successfully!'));\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                        dispatch(setMessage(error?.data?.message ? error?.data?.message : 'Login to proceed!!'));\n                        setLoading(false);\n                    });\n                history.push({ pathname: '/paymentSuccess', state: { detail: response } });\n            },\n\n            notes: {\n                address: 'Razorpay Corporate Office'\n            },\n            theme: {\n                color: '#3399cc'\n            }\n        };\n\n        const paymentObject = new window.Razorpay(options);\n\n        paymentObject.on('payment.failed', function (response) {\n            alert(response?.error.description);\n        });\n\n        paymentObject.open();\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        enableReinitialize: true,\n        onSubmit: AddGiftVoucher\n    });\n\n    return (\n        <>\n            <div>\n                <Header />\n\n                <Paper>\n                    <Grid container>\n                        <Grid item container xs={12} md={6} >\n                            <img\n                                alt=\"\"\n                                src={GiftVoucherImg}\n                                className={classes.imageStyle}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4} className={classes.formContainer}>\n                            <Typography sx={{ fontSize: 32, textAlign: 'center', margin: 5 }} style={{\n                                fontWeight: \"lighter\", fontFamily: \"Josefin Sans\",\n                                color: 'orange'\n                            }}>\n                                Gift Voucher\n                            </Typography>\n                            <form onSubmit={formik.handleSubmit}>\n                                <div style={{ padding: '24px' }}>\n                                    <Grid container spacing={2} mb={2}>\n                                        <Grid item xs={12} sm={12}>\n                                            <div>\n                                                <label className={classes.label}>\n                                                    <b> Amount </b>\n                                                </label>\n                                            </div>\n                                            <OutlinedInput\n                                                fullWidth\n                                                autoFocus\n                                                placeholder=\"500,1000,2000\"\n                                                type='number'\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id=\"amount\"\n                                                name=\"amount\"\n                                                size=\"small\"\n                                                value={formik.values.amount}\n                                                onChange={formik.handleChange}\n                                                error={formik.touched.amount && Boolean(formik.errors.amount)}\n                                                helperText={formik.touched.amount && formik.errors.amount}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={6}>\n                                            <div>\n                                                <label className={classes.label}>\n                                                    <b> Purchased For (Email) </b>\n                                                </label>\n                                            </div>\n                                            <OutlinedInput\n                                                fullWidth\n                                                type=\"email\"\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id=\"purchasedForEmail\"\n                                                name=\"purchasedForEmail\"\n                                                size=\"small\"\n                                                value={formik.values.purchasedForEmail}\n                                                onChange={formik.handleChange}\n                                                error={formik.touched.purchasedForEmail && Boolean(formik.errors.purchasedForEmail)}\n                                                helperText={formik.touched.purchasedForEmail && formik.errors.purchasedForEmail}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <div>\n                                                <label className={classes.label}>\n                                                    <b> Purchased By (Email) </b>\n                                                </label>\n                                            </div>\n                                            <OutlinedInput\n                                                fullWidth\n                                                type=\"email\"\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id=\"purchasedByEmail\"\n                                                name=\"purchasedByEmail\"\n                                                size=\"small\"\n                                                value={formik.values.purchasedByEmail}\n                                                onChange={formik.handleChange}\n                                                error={formik.touched.purchasedByEmail && Boolean(formik.errors.purchasedByEmail)}\n                                                helperText={formik.touched.purchasedByEmail && formik.errors.purchasedByEmail}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sm={12}>\n                                            <div>\n                                                <label className={classes.label}>\n                                                    <b> Message </b>\n                                                </label>\n                                            </div>\n                                            <OutlinedInput\n                                                style={{ marginBottom: 10 }}\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                id=\"message\"\n                                                name=\"message\"\n                                                size=\"small\"\n                                                value={formik.values.message}\n                                                onChange={formik.handleChange}\n                                                error={formik.touched.message && Boolean(formik.errors.message)}\n                                                helperText={formik.touched.message && formik.errors.message}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid display=\"flex\" justifyContent=\"center\">\n                                        <Button\n                                            fullwidth\n                                            type=\"submit\"\n                                            //onClick={AddGiftVoucher}\n                                            size=\"small\"\n                                            style={{\n                                                backgroundColor: '#FF8F44',\n                                                color: 'white',\n                                                fontFamily: 'Josefin Sans', fontWeight: 'lighter', fontSize: '15px'\n                                            }}\n                                            variant=\"contained\"\n                                        >\n                                            Submit\n                                        </Button>\n                                    </Grid>\n                                </div>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Grid item>\n                    <FooterNew />\n                </Grid>\n            </div>\n            {loading && <Loader />}\n        </>\n    );\n}\n"],"sourceRoot":""}