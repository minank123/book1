{"version":3,"sources":["views/schools/DeletedSchool/index.js","../node_modules/@material-ui/icons/ArrowUpward.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","DeletedSchool","classes","useStyles","useUserRole","roleList","loggedUserProfile","useSelector","state","userProfile","dispatch","useDispatch","useTheme","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_useState5","_useState6","isSearchSchool","setIsSearchSchool","getAllSchoolData","school","newData","content","totalCount","totalElements","useEffect","getAllDeletedSchool","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SchoolIcon","viewIcon","role","pageTitle","Paper","elevation","Grid","container","spacing","style","display","justifyContent","item","xs","sm","md","OutlinedInput","searchControl","id","onChange","e","event","_event$target","target","value","handleSearch","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","index","name","branch","pincode","Typography","status","success","main","warning","dark","Tooltip","title","IconButton","onClick","data","payload","address","weekDay","bookFrequency","numberOfBooksAllowed","stockManagementAllowed","updateSchool","handleActiveuschool","ArrowForwardIcon","color","cursor","textAlign","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/80.cb544fca.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllDeletedSchool, updateSchool } from '../../../store/actions/SchoolActions';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    IconButton,\n    Typography,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip,\n    Grid\n} from '@material-ui/core';\nimport { IconSearch } from '@tabler/icons';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport SchoolIcon from '@material-ui/icons/School';\nimport useStyles from '../../ViewTableStyles';\nimport useUserRole from '../../../hooks/useUserRole';\nimport MainCard from '../../../ui-component/cards/MainCard';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\nexport default function DeletedSchool() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN', 'SUPER_ADMIN'] });\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [isSearchSchool, setIsSearchSchool] = useState('');\n\n    const { getAllSchoolData } = useSelector((state) => state?.school);\n    const newData = getAllSchoolData?.content;\n    const totalCount = getAllSchoolData?.totalElements;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleSearch = (event) => {\n        setIsSearchSchool(event?.target?.value);\n        setPage(0);\n    };\n    const message = 'Restore Successfully';\n    const handleActiveuschool = (id, data) => {\n        const payload = {\n            name: data?.name,\n            branch: data?.branch,\n            address: data?.address,\n            pincode: data?.pincode,\n            weekDay: data?.weekDay,\n            bookFrequency: data?.bookFrequency,\n            numberOfBooksAllowed: data?.numberOfBooksAllowed,\n            status: 'ACTIVE',\n            stockManagementAllowed: data?.stockManagementAllowed\n        };\n        dispatch(\n            updateSchool(payload, id, message, () => {\n                dispatch(getAllDeletedSchool(rowsPerPage, isSearchSchool ? isSearchSchool : '', page + 1));\n            })\n        );\n    };\n\n    useEffect(() => {\n        dispatch(getAllDeletedSchool(rowsPerPage, isSearchSchool ? isSearchSchool : '', page + 1));\n    }, [rowsPerPage, isSearchSchool, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SchoolIcon className={classes.viewIcon} />\n                    {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                        <span className={classes.pageTitle}>&nbsp; All Deleted Schools</span>\n                    )}\n                    {loggedUserProfile?.role === 'SCHOOL_ADMIN' && <span className={classes.pageTitle}>&nbsp; Your School </span>}\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <div>\n                                <OutlinedInput\n                                    className={classes.searchControl}\n                                    id=\"input-search-header\"\n                                    onChange={(e) => handleSearch(e)}\n                                    placeholder=\"Search\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell align=\"center\"> School Id </TableCell>\n                                    <TableCell align=\"center\"> Name </TableCell>\n                                    <TableCell align=\"center\"> Branch </TableCell>\n                                    <TableCell align=\"center\"> Pin Code </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"center\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell align=\"center\"> {row?.id || '-'} </TableCell>\n                                            <TableCell align=\"center\"> {row?.name || '-'} </TableCell>\n                                            <TableCell align=\"center\"> {row?.branch} </TableCell>\n                                            <TableCell align=\"center\"> {row?.pincode} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Tooltip title=\"Restore School \">\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            handleActiveuschool(row?.id, row);\n                                                        }}\n                                                    >\n                                                        <ArrowForwardIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={totalCount}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;"],"sourceRoot":""}