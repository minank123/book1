{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","views/user-management/profile/ViewAddress.js","views/user-management/styles.js","../node_modules/@material-ui/icons/Group.js","views/user-management/profile/AddProfileModal.js","store/actions/AddressActions/index.js","views/user-management/profile/AddAddressModal.js","../node_modules/@mui/icons-material/Edit.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","ViewAddress","_viewAddressData$user","_viewAddressData$user2","_viewAddressData$user3","_viewAddressData$user4","classes","useStyles","useUserRole","roleList","dispatch","useDispatch","_useParams","useParams","userId","profileId","_useState","useTheme","useState","_useState2","_slicedToArray","_useState3","_useState4","rowsPerPage","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","openAddressModal","setAddressModal","_useState11","_useState12","_useState13","_useState14","isEditDataAddress","setEditDataAddress","_useState15","_useState16","viewAddressData","useSelector","state","address","_useState17","useForm","reset","isOpen","title","subTitle","_useState18","confirmDialog","setConfirmDialog","useEffect","viewAddress","_jsxs","_Fragment","children","className","titleContainer","_jsx","GroupIcon","pageTitleIcon","pageTitle","Paper","elevation","style","display","justifyContent","Button","variant","color","boxShadow","onClick","data","AddIcon","TableContainer","tableContainer","sx","height","Table","table","TableHead","tableHeaderCell","TableCell","align","userAddresses","content","length","textAlign","TableBody","map","row","house","street","city","country","pincode","landmark","Tooltip","IconButton","cursor","EditIcon","onConfirm","deleteAddress","id","_objectSpread","DeleteIcon","AddAddressModal","open","onClose","isEditData","ConfirmDialog","makeStyles","_searchControl","minWidth","borderRadius","marginTop","fontWeight","primary","light","status","fontSize","padding","width","background","main","marginBottom","paper","verticalAlign","searchControl","marginLeft","paddingRight","paddingLeft","_defineProperty","breakpoints","down","startAdornment","grey","buttonSubmit","marginRight","buttonCancel","label","dialog","position","dialogAction","closeIcon","dialogTitle","dialogTitleChild","mandatory","error","ScrollHeight","maxHeight","input","ellipsis","maxWidth","whiteSpace","overflow","textOverflow","addProfileSchema","yup","firstName","required","lastName","dob","STATUS_ITEM","STATUS_ITEMS","AddProfile","props","isUserRole","console","log","role","loggedUserProfile","userProfile","schoolList","school","initialValues","schoolId","classAndSection","comments","adminComment","methods","mode","resolver","yupResolver","defaultValues","handleSubmit","hide","watch","getSchoolList","Dialog","DialogTitle","Typography","Link","to","CloseIcon","FormProvider","onSubmit","modifiedPayload","updateProfile","viewProfileById","AddProfiles","DialogContent","Grid","container","spacing","item","xs","sm","RHFTextField","name","placeholder","loginInput","autoFocus","type","RHFSelect","index","nameBranch","multiline","rows","RHFCheckbox","Divider","DialogActions","addAddressError","ADDRESS_ERROR","updateAddressError","UPDATE_ADDRESS_ERROR","viewAddressError","VIEW_ALL_ADDRESS_ERROR","pageSize","arguments","undefined","getState","VIEW_ALL_ADDRESS_START","http","process","concat","then","res","payload","VIEW_ALL_ADDRESS_SUCCESS","viewAddressSuccess","setMessage","message","catch","err","addAddress","successCB","ADDRESS_START","ADDRESS_SUCCESS","addAddressSuccess","_err$data","updateAddress","addressId","UPDATE_ADDRESS_START","UPDATE_ADDRESS_SUCCESS","updateAddressSuccess","_err$data2","addAddressSchema","trim","useRef","disabled","useMemo"],"mappings":"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","file":"static/js/15.e1393dfe.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import React, { useState, useEffect } from 'react';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { IconSearch } from '@tabler/icons';\nimport { useParams } from 'react-router-dom';\nimport {\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Menu,\n    MenuItem,\n    Tooltip\n} from '@material-ui/core';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupIcon from '@material-ui/icons/Group';\nimport useStyles from '../styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { viewProfileById } from '../../../store/actions/ProfileActions';\nimport AddProfile from './AddProfileModal';\nimport AddAddressModal from './AddAddressModal';\nimport { deleteAddress, viewAddress } from '../../../store/actions/AddressActions';\nimport ConfirmDialog from '../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\nexport default function ViewAddress() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    let { userId, profileId } = useParams();\n    const theme = useTheme();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openModal, setModal] = useState(false);\n    const [openAddressModal, setAddressModal] = useState(false);\n    const [isEditData, setEditData] = useState(null);\n    const [isEditDataAddress, setEditDataAddress] = useState(null);\n    const [isUserData, setUserData] = useState(null);\n    const { viewAddressData } = useSelector((state) => state?.address);\n    const { reset } = useForm();\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        //setPage(0);\n    };\n    const handleOpenModal = () => {\n        setEditData(null);\n        setModal(true);\n    };\n    const handleOpenAddress = (data) => {\n        setEditDataAddress(null);\n        setAddressModal(true);\n    };\n    const handleEditAddress = (addressData) => {\n        setEditDataAddress(addressData);\n        setAddressModal(true);\n    };\n    const handleCloseAddressModal = () => {\n        setAddressModal(false);\n    };\n    const handleCloseModal = () => {\n        reset();\n        setModal(false);\n    };\n    const handleEditProfile = (profileData) => {\n        setEditData(profileData);\n        setModal(true);\n    };\n    const handleDeleteAddress = (data) => {\n        dispatch(\n            deleteAddress(data?.userId, data?.id, () => {\n                dispatch(viewAddress(userId, profileId, rowsPerPage));\n            })\n        );\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n    };\n\n    useEffect(() => {\n        dispatch(viewAddress(userId, profileId, rowsPerPage));\n    }, [userId, profileId, rowsPerPage]);\n\n    return (\n        <>\n            <div className={classes.titleContainer}>\n                <GroupIcon className={classes.pageTitleIcon} />\n                <span className={classes.pageTitle}>&nbsp;View all address</span>\n                {/* <div>\n                    <span className={classes.pageTitle}>User info: {viewProfileData?.user?.email}</span> <br />\n                    <span className={classes.pageTitle}>User role: {viewProfileData?.user?.role}</span>\n                </div> */}\n            </div>\n            <Paper elevation={5} className={classes.root}>\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    {/* <OutlinedInput\n                        className={classes.searchControl}\n                        id=\"input-search-header\"\n                        placeholder=\"Search\"\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                            </InputAdornment>\n                        }\n                    /> */}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9' }}\n                        onClick={handleOpenAddress}\n                    >\n                        <AddIcon /> Address\n                    </Button>\n                </div>\n                <TableContainer\n                    className={classes.tableContainer}\n                    sx={{\n                        height: 450\n                    }}\n                >\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead className={classes.tableHeaderCell}>\n                            <StyledTableRow>\n                                <TableCell>Address</TableCell>\n                                <TableCell>State</TableCell>\n                                <TableCell>City</TableCell>\n                                <TableCell>Country</TableCell>\n                                <TableCell>Pincode</TableCell>\n                                <TableCell>Landmark</TableCell>\n                                <TableCell align=\"center\"> Default </TableCell>\n                                <TableCell align=\"center\"> Action </TableCell>\n                            </StyledTableRow>\n                        </TableHead>\n                        {!viewAddressData?.userAddresses?.content?.length > 0 ? (\n                            <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                        ) : (\n                            <TableBody>\n                                {viewAddressData?.userAddresses?.content?.map((row) => (\n                                    <StyledTableRow key={row?.id}>\n                                        <TableCell>\n                                            {row?.house}, {row?.street}\n                                        </TableCell>\n                                        <TableCell>{row?.state || '-'}</TableCell>\n                                        <TableCell>{row?.city || '-'}</TableCell>\n                                        <TableCell>{row?.country || '-'}</TableCell>\n                                        <TableCell>{row?.pincode || '-'}</TableCell>\n                                        <TableCell>{row?.landmark || '-'}</TableCell>\n                                        <TableCell align=\"center\">{row?.default === true ? 'Yes' : '-'}</TableCell>\n                                        <TableCell align=\"center\">\n                                            <Tooltip title=\"Edit address\">\n                                                <IconButton style={{ cursor: 'pointer' }} onClick={() => handleEditAddress(row)}>\n                                                    <EditIcon color=\"primary\" />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip title=\"Delete address\">\n                                                <IconButton\n                                                    style={{ cursor: 'pointer' }}\n                                                    // onClick={() => handleDeleteAddress(row)}\n                                                    onClick={() => {\n                                                        setConfirmDialog({\n                                                            isOpen: true,\n                                                            title: 'Delete Address',\n                                                            subTitle: 'Are you sure you want to delete this address?',\n                                                            onConfirm: () => {\n                                                                handleDeleteAddress(row);\n                                                            }\n                                                        });\n                                                    }}\n                                                >\n                                                    <DeleteIcon color=\"error\" />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </StyledTableRow>\n                                ))}\n                            </TableBody>\n                        )}\n                    </Table>\n                </TableContainer>\n                {/* <TablePagination\n                    rowsPerPageOptions={[10, 15, 25]}\n                    component=\"div\"\n                    count={viewAddressData?.content?.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                    sx={{\n                        '.MuiTablePagination-displayedRows': {\n                            marginBottom: 0\n                        },\n                        '.MuiTablePagination-selectLabel': {\n                            marginBottom: 0\n                        }\n                    }}\n                /> */}\n            </Paper>\n            {openAddressModal && (\n                <AddAddressModal\n                    open={openAddressModal}\n                    userId={userId}\n                    profileId={profileId}\n                    onClose={handleCloseAddressModal}\n                    isEditData={isEditDataAddress}\n                />\n            )}\n\n            {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n        </>\n    );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n    table: {\n        minWidth: 650\n    },\n    tableContainer: {\n        borderRadius: 15,\n        marginTop: 16\n    },\n    tableHeaderCell: {\n        fontWeight: 'lighter',\n        backgroundColor: theme.palette.primary.light,\n        color: '#ffffff'\n    },\n    status: {\n        fontWeight: 'lighter',\n        fontSize: '0.75rem',\n        color: 'white',\n        backgroundColor: 'gray',\n        borderRadius: 8,\n        padding: '5px 10px',\n        display: 'inline-block'\n    },\n    root: {\n        padding: 16,\n        width: '100%'\n    },\n    titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n    pageTitleIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    searchControl: {\n        width: '234px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n\n    //------Dialog styles--------\n\n    buttonSubmit: {\n        height: 40,\n        width: 100,\n        marginRight: 10\n    },\n    buttonCancel: {\n        height: 40,\n        width: 100\n    },\n    label: {\n        marginBottom: 5,\n        marginLeft: 10,\n        fontSize: 14\n    },\n    dialog: {\n        position: 'absolute'\n    },\n    dialogAction: {\n        justifyContent: 'right',\n        marginRight: 10,\n        marginBottom: 10,\n        marginTop: 10\n    },\n    closeIcon: {\n        color: '#FFFFFF',\n        marginBottom: '-5px',\n        cursor: 'pointer'\n    },\n    dialogTitle: {\n        backgroundColor: theme.palette.primary.main,\n        color: '#FFFFFF',\n        marginBottom: 20\n    },\n    dialogTitleChild: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    mandatory: {\n        color: theme.palette.error.main\n    },\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 240px)'\n    },\n    input: {\n        display: 'none'\n    },\n    ellipsis: {\n        maxWidth: 200, // percentage also works\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"\n}), 'Group');\n\nexports.default = _default;","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFCheckbox, RHFSelect } from '../../../components/hook-form';\nimport useStyles from '../styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { AddProfiles, viewProfileById } from '../../../store/actions/ProfileActions';\nimport { getAllSchool, getSchoolList } from '../../../store/actions/SchoolActions';\nimport { updateProfile } from '../../../store/actions/AddUserActions';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n        }\n    }\n};\n\nconst addProfileSchema = yup.object({\n    firstName: yup.string('Enter first name').required('First name is required'),\n    lastName: yup.string('Enter last name').required('Last name is required'),\n    status: yup.string('Status is required').required('Status is required'),\n    dob: yup.string('Enter Date Of Birth').required('Date Of Birth is required')\n});\n\nconst STATUS_ITEM = [\n    { id: 0, status: 'SELECT STATUS' },\n    { id: 1, status: 'ACTIVE' },\n    { id: 2, status: 'INACTIVE' }\n];\nconst STATUS_ITEMS = [\n    { id: 0, status: 'SELECT STATUS' },\n    { id: 1, status: 'ACTIVE_PENDING' },\n    { id: 2, status: 'ACTIVE_APPROVED' },\n    { id: 3, status: 'ACTIVE_REJECTED' }\n];\n\nexport default function AddProfile(props) {\n    const { open, onClose, isEditData, userId, isUserRole } = props;\n    console.log(isEditData);\n    // console.log('---User Role---', isUserRole);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    let { role } = useParams();\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n\n    const { schoolList } = useSelector((state) => state?.school);\n\n    const initialValues = {\n        firstName: isEditData?.firstName || '',\n        lastName: isEditData?.lastName || '',\n        default: isEditData?.default || false,\n        schoolId: isEditData?.schoolId || '',\n        classAndSection: isEditData?.classAndSection || '',\n        status: isEditData?.status,\n        dob: isEditData?.dob,\n        comments: isEditData?.adminComment\n    };\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(addProfileSchema),\n        defaultValues: initialValues\n    });\n\n    const { reset, handleSubmit, watch } = methods;\n    const hide = watch('schoolId');\n\n    useEffect(() => {\n        if (!isEditData) {\n            reset(initialValues);\n        }\n    }, [isEditData]);\n\n    const onSubmit = (data) => {\n        const payload = {\n            firstName: data?.firstName,\n            lastName: data?.lastName,\n            default: data?.default,\n            schoolId: data?.schoolId,\n            status: data?.status\n        };\n\n        let modifiedPayload = {};\n        if (data?.schoolId === '') {\n            modifiedPayload = {\n                firstName: data?.firstName,\n                lastName: data?.lastName,\n                default: data?.default,\n                status: data?.status,\n                dob: data?.dob,\n                adminComment: data?.comments\n            };\n        } else {\n            modifiedPayload = {\n                firstName: data?.firstName,\n                lastName: data?.lastName,\n                default: data?.default,\n                schoolId: data?.schoolId,\n                classAndSection: data?.classAndSection,\n                status: data?.status,\n                dob: data?.dob,\n                adminComment: data?.comments\n            };\n        }\n\n        if (isEditData) {\n            dispatch(\n                updateProfile(modifiedPayload, isEditData?.userId, isEditData?.id, () => {\n                    dispatch(viewProfileById(isEditData?.userId));\n                    reset(initialValues);\n                    onClose();\n                })\n            );\n        } else {\n            dispatch(\n                AddProfiles(modifiedPayload, userId, () => {\n                    dispatch(viewProfileById(userId));\n                    reset();\n                    onClose();\n                })\n            );\n        }\n    };\n\n    // const userRoleName = (role) => {\n    //     switch (role) {\n    //         case 'ADMIN':\n    //             return 'Admin';\n    //         case 'SCHOOL_ADMIN':\n    //             return 'School-Admin';\n    //         case 'TEACHER':\n    //             return 'Teacher';\n    //         case 'STUDENT':\n    //             return 'Student';\n\n    //         default:\n    //             return role;\n    //     }\n    // };\n\n    useEffect(() => {\n        // dispatch(getAllSchool());\n        dispatch(getSchoolList());\n    }, []);\n\n    return (\n        <div>\n            <Dialog open={open} onClose={onClose} maxWidth=\"xs\" classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{isEditData ? 'Update' : 'Add'} Profile</Typography>\n                        <Link to=\"#\" onClick={onClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    First Name <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"firstName\" placeholder=\"First name\" className={classes.loginInput} autoFocus />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Last Name <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"lastName\" placeholder=\"Last name\" className={classes.loginInput} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Date Of Birth <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField type=\"date\" name=\"dob\" placeholder=\"Date Of Birth\" className={classes.loginInput} />\n                            </Grid>\n                            {role == 'student' && (\n                                <Grid item xs={12} sm={12}>\n                                    <label className={classes.label}> School Name </label>\n                                    {/* <RHFTextField name=\"schoolId\" placeholder=\"schoolId\" className={classes.loginInput} /> */}\n                                    <RHFSelect name=\"schoolId\" label=\"\">\n                                        <option value=\"\"> Select School </option>\n                                        {schoolList?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.nameBranch}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            )}\n\n                            {role == 'school-admin' && (\n                                <Grid item xs={12} sm={12}>\n                                    <label className={classes.label}> School Name </label>\n                                    {/* <RHFTextField name=\"schoolId\" placeholder=\"schoolId\" className={classes.loginInput} /> */}\n                                    <RHFSelect name=\"schoolId\" label=\"\">\n                                        <option value=\"\"> Select School </option>\n                                        {schoolList?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.nameBranch}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            )}\n\n                            {hide !== '' && hide !== 'Select a School' && role == 'student' && (\n                                <Grid item xs={12}>\n                                    {/* {loggedUserProfile?.role !== 'SCHOOL_ADMIN' && ( */}\n                                    <RHFTextField name=\"classAndSection\" placeholder=\"Enter your class/section\" />\n                                    {/* )} */}\n                                </Grid>\n                            )}\n\n                            <Grid item xs={12}>\n                                <label>\n                                    Status <span className={classes.mandatory}>*</span>\n                                </label>\n                                {/* {loggedUserProfile?.role === 'SCHOOL_ADMIN' && (\n                                    <> */}\n                                {hide == '' && (\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEM?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                )}\n\n                                {hide !== '' && role == 'school-admin' && (\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEM?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                )}\n                                {/* </>\n                                )} */}\n                                {/* `${comment} Date:-${new Date()}` */}\n                                {hide !== '' && role == 'student' && (\n                                    <>\n                                        <RHFSelect name=\"status\" label=\"\">\n                                            {STATUS_ITEMS?.map((item, index) => (\n                                                <option key={index} value={item?.status}>\n                                                    {item?.status}\n                                                </option>\n                                            ))}\n                                        </RHFSelect>\n                                    </>\n                                )}\n                            </Grid>\n                            {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                <Grid item xs={12}>\n                                    <label>Comments</label>\n                                    <RHFTextField name=\"comments\" multiline rows={4} />\n                                </Grid>\n                            )}\n\n                            <Grid item xs={12} sm={12}>\n                                <RHFCheckbox name=\"default\" label=\"Default\" />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={onClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {isEditData ? 'Update' : 'Add'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","import { http } from '../../../utils/http';\nimport {\n    ADDRESS_START,\n    ADDRESS_SUCCESS,\n    ADDRESS_ERROR,\n    UPDATE_ADDRESS_SUCCESS,\n    UPDATE_ADDRESS_START,\n    UPDATE_ADDRESS_ERROR,\n    VIEW_ALL_ADDRESS_ERROR,\n    VIEW_ALL_ADDRESS_START,\n    VIEW_ALL_ADDRESS_SUCCESS\n} from '../../constants';\nimport { setMessage } from '../MessageActions';\n\nconst addAddressStart = () => {\n    return { type: ADDRESS_START };\n};\nconst addAddressSuccess = (payload) => {\n    return { type: ADDRESS_SUCCESS, payload };\n};\nconst addAddressError = (error) => {\n    return { type: ADDRESS_ERROR, error };\n};\nconst updateAddressStart = () => {\n    return { type: UPDATE_ADDRESS_START };\n};\nconst updateAddressSuccess = (payload) => {\n    return { type: UPDATE_ADDRESS_SUCCESS, payload };\n};\nconst updateAddressError = (error) => {\n    return { type: UPDATE_ADDRESS_ERROR, error };\n};\nconst viewAddressStart = () => {\n    return { type: VIEW_ALL_ADDRESS_START };\n};\nconst viewAddressSuccess = (payload) => {\n    return { type: VIEW_ALL_ADDRESS_SUCCESS, payload };\n};\nconst viewAddressError = (error) => {\n    return { type: VIEW_ALL_ADDRESS_ERROR, error };\n};\n\nconst viewAddress =\n    (userId, profileId, pageSize = 10) =>\n    (dispatch, getState) => {\n        dispatch(viewAddressStart());\n        try {\n            http(\n                process.env.REACT_APP_ROOT_URL,\n                'GET',\n                `users-service/users/${userId}/profiles/${profileId}/addresses?pageNumber=1&pageSize=${pageSize}`,\n                true\n            )\n                .then((res) => {\n                    const payload = {\n                        viewAddressData: res\n                    };\n                    dispatch(viewAddressSuccess(payload));\n                    dispatch(setMessage(res?.message));\n                })\n                .catch((err) => {\n                    dispatch(viewAddressError(err));\n                    dispatch(setMessage(err?.message));\n                });\n        } catch (error) {\n            dispatch(viewAddressError('Something went wrong'));\n        }\n    };\nconst addAddress = (payload, userId, profileId, successCB) => (dispatch, getState) => {\n    dispatch(addAddressStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL, 'POST', `users-service/users/${userId}/profiles/${profileId}/addresses`, payload, true)\n            .then((res) => {\n                dispatch(addAddressSuccess(payload));\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(addAddressError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(addAddressError('Something went wrong'));\n    }\n};\nconst updateAddress = (payload, userId, profileId, addressId, successCB) => (dispatch, getState) => {\n    dispatch(updateAddressStart());\n    try {\n        http(\n            process.env.REACT_APP_ROOT_URL,\n            'PUT',\n            `users-service/users/${userId}/profiles/${profileId}/addresses/${addressId}`,\n            payload,\n            true\n        )\n            .then((res) => {\n                dispatch(updateAddressSuccess(payload));\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(updateAddressError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(updateAddressError('Something went wrong'));\n    }\n};\nconst deleteAddress = (userId, addressId, successCB) => (dispatch, getState) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL, 'DELETE', `users-service/users/${userId}/addresses/${addressId}`, true)\n            .then((res) => {\n                dispatch(setMessage('Address Deleted Successfully!'));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(setMessage(err?.message));\n            });\n    } catch (error) {\n        dispatch(setMessage(error?.message));\n    }\n};\n\nexport { addAddress, updateAddress, deleteAddress, viewAddress };\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFCheckbox } from '../../../components/hook-form';\nimport useStyles from '../styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { viewProfileById } from '../../../store/actions/ProfileActions';\nimport { addAddress, updateAddress, viewAddress } from '../../../store/actions/AddressActions';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n        }\n    }\n};\n\nconst addAddressSchema = yup.object({\n    house: yup.string('Enter house').trim().required('House is required'),\n    street: yup.string('Enter street').trim().required('Street is required'),\n    landmark: yup.string('Enter street').trim(),\n    pincode: yup.string('Enter pincode').trim().required('Pincode is required')\n});\nexport default function AddAddressModal(props) {\n    const { open, onClose, isEditData, userId, profileId } = props;\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const buttonRef = useRef(null);\n    const [disabled, setDisabled] = useState(false);\n\n    const initialValues = useMemo(\n        () => ({\n            house: isEditData?.house || '',\n            street: isEditData?.street || '',\n            landmark: isEditData?.landmark || '',\n            pincode: isEditData?.pincode || '',\n            default: isEditData?.default || ''\n        }),\n        [isEditData]\n    );\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(addAddressSchema),\n        defaultValues: initialValues\n    });\n    const { reset, handleSubmit } = methods;\n    useEffect(() => {\n        if (!isEditData) {\n            reset(initialValues);\n        }\n    }, [isEditData]);\n\n    const onSubmit = (data) => {\n        const payload = {\n            house: data?.house,\n            street: data?.street,\n            landmark: data?.landmark,\n            pincode: data?.pincode,\n            default: data?.default\n        };\n        if (isEditData) {\n            dispatch(\n                updateAddress(payload, isEditData?.userId, profileId, isEditData?.id, () => {\n                    dispatch(viewAddress(userId, profileId));\n                    reset(initialValues);\n                    onClose();\n                })\n            );\n        } else {\n            dispatch(\n                addAddress(payload, userId, profileId, () => {\n                    dispatch(viewAddress(userId, profileId));\n                    reset();\n                    onClose();\n                })\n            );\n        }\n    };\n\n    return (\n        <div>\n            <Dialog open={open} maxWidth=\"xs\" classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{isEditData ? 'Update' : 'Add'} Address </Typography>\n                        <Link to=\"#\" onClick={onClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    House<span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"house\" placeholder=\"Enter house\" className={classes.loginInput} autoFocus />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Street<span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"street\" placeholder=\"Enter street\" className={classes.loginInput} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>Landmark</label>\n                                <RHFTextField name=\"landmark\" placeholder=\"Enter landmark\" className={classes.loginInput} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <label className={classes.label}>\n                                    Pincode<span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"pincode\" placeholder=\"Enter pincode\" className={classes.loginInput} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <RHFCheckbox name=\"default\" label=\"Default\" />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={onClose}>\n                            Close\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            type=\"submit\"\n                            className={classes.buttonSubmit}\n                            disabled={disabled}\n                            // onClick={() => {\n                            //     // setDisabled(true);\n                            // }}\n                        >\n                            {isEditData ? 'Update' : 'Add'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"sourceRoot":""}