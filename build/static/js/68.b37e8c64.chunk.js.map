{"version":3,"sources":["services/reportFeedbackService.js","views/online-classes/report-cards/view-report/index.js","store/actions/ReportActions/index.js"],"names":["addFeedbackInReportCard","bId","pId","payload","Promise","resolve","reject","http","process","concat","then","data","catch","err","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","useStyles1","makeStyles","_defineProperty","btnSpan","width","marginLeft","breakpoints","down","reportCard","height","padding","paddingTop","marginTop","pdfContent","display","justifyContent","alignItems","textAlign","fontSize","margin","ids","validationSchema","yup","ViewReport","props","active","_reportData$profile","_reportData$profile2","_reportData$profile3","_reportData$profile4","_reportData$profile5","_reportData$batch","_reportData$batch2","_reportData$batch3","classes","useStyles","classes1","batch_id","profile_id","dispatch","useDispatch","_useSelector","useSelector","state","userProfile","loggedUserProfile","_useState","loading","useState","_useState2","_slicedToArray","isEditable","setEditable","_useParams","useParams","id","profileId","reportData","report","_useState3","_useState4","tempFinalComment","setTempFinalComment","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","reset","useEffect","getReport","finalComment","printerRef","useRef","_jsx","_Fragment","children","FormProvider","onSubmit","handleFeedback","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","res","setMessage","message","error","_error$data","_error$data2","stop","apply","arguments","_jsxs","Card","sx","role","className","Button","marginBottom","variant","color","startIcon","DownloadIcon","onClick","current","content","pdf","jsPDF","html2canvas","scale","logging","useCORS","canvas","imgData","toDataURL","pdfWidth","internal","pageSize","getWidth","pdfHeight","addImage","undefined","save","ref","titleContainer","SchoolIcon","viewIcon","pageTitle","Grid","item","container","style","xs","Typography","Divider","spacing","sm","verticalAlign","OutlinedInput","name","disabled","value","profile","fullWidth","email","multiline","mobile","firstName","lastName","batch","Date","startDateTime","toLocaleDateString","weekday","year","month","day","status","borderColor","maxRows","onChange","e","target","Edit","cursor","type","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","assignmentGrade","TableBody","map","row","assignmentTile","grade","includeInReport","feedback","getReportError","GET_REPORT_ERROR","getAllReportError","GET_ALL_REPORT_ERROR","batchId","successCB","GET_REPORT_START","GET_REPORT_SUCCESS","getReportSuccess","getAllReport","GET_ALL_REPORT_START","GET_ALL_REPORT_SUCCESS","getAllReportSuccess","allReportData"],"mappings":"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","file":"static/js/68.b37e8c64.chunk.js","sourcesContent":["import { http } from '../utils/http';\n\nexport const addFeedbackInReportCard = (bId, pId, payload) => {\n    return new Promise((resolve, reject) => {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'POST', `batches-service/reports/batches/${bId}/profiles/${pId}`, payload, true, {\n            'Content-type': 'application/json'\n        })\n            .then((data) => {\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport { FormProvider } from '../../../../components/hook-form';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { setMessage } from '../../../../store/actions/MessageActions';\nimport { makeStyles } from '@material-ui/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport {\n    Grid,\n    Divider,\n    OutlinedInput,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    Button\n} from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport SchoolIcon from '@material-ui/icons/School';\nimport { withStyles } from '@material-ui/styles';\nimport useStyles from '../../../ViewTableStyles';\nimport { getReport } from '../../../../store/actions/ReportActions';\nimport { useParams } from 'react-router-dom';\nimport { Card } from '@mui/material';\nimport { addFeedbackInReportCard } from '../../../../services/reportFeedbackService';\nimport { useRef } from 'react';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nconst useStyles1 = makeStyles((theme) => ({\n    btnSpan: {\n        width: '100%',\n        marginLeft: '75%',\n        [theme.breakpoints.down('md')]: { marginLeft: 'auto' }\n    },\n    reportCard: {\n        width: '100%',\n        height: 'auto',\n        padding: '20px',\n        paddingTop: 0,\n        marginTop: 0\n    },\n    pdfContent: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        fontSize: '0.875rem',\n        margin: '0 auto',\n        padding: '20px'\n    },\n    [theme.breakpoints.down('sm')]: {\n        reportCard: {\n            width: '90%'\n        }\n    }\n}));\n\nconst ids = ['reportCard'];\n\nconst validationSchema = yup.object({});\n\nexport default function ViewReport(props, active) {\n    const classes = useStyles();\n    const classes1 = useStyles1();\n    const { batch_id, profile_id } = props;\n\n    const dispatch = useDispatch();\n    const { loggedUserProfile, loading } = useSelector((state) => state?.userProfile);\n    const [isEditable, setEditable] = useState(false);\n    let { id, profileId } = useParams();\n    const { reportData } = useSelector((state) => state?.report);\n\n    const [tempFinalComment, setTempFinalComment] = useState('');\n\n    if (batch_id && profile_id) {\n        id = batch_id;\n        profileId = profile_id;\n    }\n\n    const initialValues = {\n        //remark: isEditData?.remark || ''\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n\n    const { reset, handleSubmit } = methods;\n\n    const onSubmit = (data) => {\n        if (!tempFinalComment) {\n            dispatch(setMessage('Kindly Fill Out The Comment!'));\n            return;\n        }\n\n        const payload = { finalComment: tempFinalComment };\n\n        const handleFeedback = async () => {\n            await addFeedbackInReportCard(id, profileId, payload)\n                .then((res) => {\n                    dispatch(setMessage(res?.message ? res?.message : 'Submitted Successfully!!'));\n                    dispatch(getReport(id, profileId));\n                })\n                .catch((error) => {\n                    dispatch(setMessage(error?.data?.message ? error?.data?.message : 'Error !!'));\n                });\n        };\n        handleFeedback();\n    };\n\n    useEffect(() => {\n        dispatch(getReport(id, profileId));\n    }, []);\n\n    useEffect(() => {\n        setTempFinalComment(reportData?.finalComment);\n    }, [reportData?.finalComment]);\n    const printerRef = useRef(null);\n\n    const handleDownload = () => {\n        if (printerRef.current) {\n            const content = printerRef.current;\n            const pdf = new jsPDF('p', 'mm', 'a4');\n\n            html2canvas(content, { scale: 1, logging: true, useCORS: true }).then((canvas) => {\n                const imgData = canvas.toDataURL('image/jpeg', 1.0);\n                const pdfWidth = pdf.internal.pageSize.getWidth();\n                const pdfHeight = (canvas.height * pdfWidth) / canvas.width;\n                pdf.addImage(imgData, 'JPEG', 0, 0, pdfWidth, pdfHeight, undefined, 'FAST');\n\n                pdf.save('report.pdf');\n            });\n        }\n    };\n    return (\n        <>\n            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                <Card sx={{ padding: '16px' }}>\n                    {loggedUserProfile?.role === 'STUDENT' && (\n                        <span className={classes1.btnSpan}>\n                            <Button\n                                sx={{ marginBottom: '8px' }}\n                                variant=\"contained\"\n                                color=\"success\"\n                                startIcon={<DownloadIcon></DownloadIcon>}\n                                onClick={handleDownload}\n                            >\n                                Download Report Card\n                            </Button>\n                        </span>\n                    )}\n                    <div ref={printerRef} className={classes1.pdfContent}>\n                        <div id={ids[0]} className={classes1.reportCard}>\n                            <div className={classes.titleContainer}>\n                                <SchoolIcon className={classes.viewIcon} />\n                                <span className={classes.pageTitle}>&nbsp; Report Card </span>\n                            </div>\n\n                            <Grid item container style={{ marginTop: 30, marginBottom: 10 }}>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"h4\"> Profile Details </Typography>\n                                </Grid>\n                            </Grid>\n                            <Divider style={{ marginBottom: 30 }} />\n                            <Grid container spacing={4}>\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Profile Id </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput name=\"name\" disabled value={reportData?.profile?.profileId} fullWidth />\n                                    </Grid>\n                                </Grid>\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Email </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput name=\"name\" disabled value={reportData?.profile?.email} fullWidth />\n                                    </Grid>\n                                </Grid>\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Mobile </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput name=\"name\" disabled multiline value={reportData?.profile?.mobile} fullWidth />\n                                    </Grid>\n                                </Grid>\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Name </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput\n                                            name=\"name\"\n                                            disabled\n                                            value={reportData?.profile?.firstName + ' ' + reportData?.profile?.lastName}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item container style={{ marginTop: 40, marginBottom: 10 }}>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"h4\"> Batch Details </Typography>\n                                </Grid>\n                            </Grid>\n                            <Divider style={{ marginBottom: 30 }} />\n                            <Grid container spacing={4}>\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Batch Id </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput name=\"name\" disabled value={reportData?.batch?.id} fullWidth />\n                                    </Grid>\n                                </Grid>\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Start Date/Time </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput\n                                            name=\"name\"\n                                            disabled\n                                            value={new Date(reportData?.batch?.startDateTime).toLocaleDateString('en-US', {\n                                                weekday: 'long',\n                                                year: 'numeric',\n                                                month: 'long',\n                                                day: 'numeric'\n                                            })}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Status </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput name=\"name\" disabled value={reportData?.batch?.status} fullWidth />\n                                    </Grid>\n                                </Grid>\n\n                                <Divider style={{ marginTop: '24px', borderColor: 'darkgray' }} />\n\n                                <Grid item container spacing={2}>\n                                    <Grid item xs={12} sm={2}>\n                                        <label style={{ verticalAlign: 'sub' }}> Remark </label>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <OutlinedInput\n                                            id=\"remark\"\n                                            name=\"remark\"\n                                            multiline\n                                            maxRows={5}\n                                            value={tempFinalComment}\n                                            fullWidth\n                                            disabled={!isEditable}\n                                            onChange={(e) => setTempFinalComment(e.target.value)}\n                                        />\n                                    </Grid>\n                                    {loggedUserProfile?.role !== 'STUDENT' && (\n                                        <>\n                                            <Grid item sm={2}>\n                                                <Edit\n                                                    color=\"primary\"\n                                                    fontSize=\"small\"\n                                                    onClick={() => setEditable(true)}\n                                                    style={{ cursor: 'pointer' }}\n                                                />\n                                            </Grid>\n                                            <Grid item sm={2}>\n                                                <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                                    Save Changes\n                                                </Button>\n                                            </Grid>\n                                        </>\n                                    )}\n                                </Grid>\n                            </Grid>\n                            <Grid item container style={{ marginTop: 40, marginBottom: 10 }}>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"h4\"> Report Details </Typography>\n                                </Grid>\n                            </Grid>\n                            <Divider style={{ marginBottom: 30, borderColor: 'darkgray' }} />\n                            <TableContainer className={classes.tableContainer}>\n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableHead className={classes.tableHeaderCell}>\n                                        <StyledTableRow>\n                                            <TableCell> Assignment Title </TableCell>\n                                            <TableCell align=\"center\"> Grade </TableCell>\n\n                                            <TableCell align=\"center\"> Include In Report </TableCell>\n                                            <TableCell align=\"center\"> Comment </TableCell>\n                                        </StyledTableRow>\n                                    </TableHead>\n                                    {!reportData?.assignmentGrade ? (\n                                        <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                                    ) : (\n                                        <TableBody>\n                                            {reportData?.assignmentGrade.map((row) => (\n                                                <StyledTableRow key={row.id}>\n                                                    <TableCell> {row?.assignmentTile} </TableCell>\n                                                    <TableCell align=\"center\"> {row?.grade} </TableCell>\n\n                                                    <TableCell align=\"center\"> {row?.includeInReport == true ? 'Yes' : 'No'} </TableCell>\n                                                    <TableCell align=\"center\"> {row?.feedback} </TableCell>\n                                                </StyledTableRow>\n                                            ))}\n                                        </TableBody>\n                                    )}\n                                </Table>\n                            </TableContainer>\n                        </div>\n                    </div>\n                </Card>\n            </FormProvider>\n        </>\n    );\n}\n","import { http } from '../../../utils/http';\nimport { setMessage } from '../MessageActions';\nimport {\n    GET_REPORT_START,\n    GET_REPORT_SUCCESS,\n    GET_REPORT_ERROR,\n    GET_ALL_REPORT_START,\n    GET_ALL_REPORT_SUCCESS,\n    GET_ALL_REPORT_ERROR\n} from '../../constants';\n\nconst getReportStart = () => {\n    return { type: GET_REPORT_START };\n};\nconst getReportSuccess = (payload) => {\n    return { type: GET_REPORT_SUCCESS, payload };\n};\nconst getReportError = (error) => {\n    return { type: GET_REPORT_ERROR, error };\n};\n\nconst getAllReportStart = () => {\n    return { type: GET_ALL_REPORT_START };\n};\nconst getAllReportSuccess = (payload) => {\n    return { type: GET_ALL_REPORT_SUCCESS, payload };\n};\nconst getAllReportError = (error) => {\n    return { type: GET_ALL_REPORT_ERROR, error };\n};\n\nconst getReport = (batchId, profileId, successCB) => (dispatch) => {\n    dispatch(getReportStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'GET', `batches-service/reports/batches/${batchId}/profiles/${profileId}`, true)\n            .then((res) => {\n                const payload = {\n                    reportData: res\n                };\n                dispatch(getReportSuccess(payload));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(getReportError(err));\n                dispatch(setMessage(err?.message));\n            });\n    } catch (error) {\n        dispatch(getReportError('Something went wrong'));\n    }\n};\n\nconst getAllReport = (batchId) => (dispatch) => {\n    dispatch(getAllReportStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_BATCHES, 'GET', `batches-service/reports/batches/${batchId}?pageNumber=1&pageSize=20`, true)\n            .then((res) => {\n                const payload = {\n                    allReportData: res\n                };\n                dispatch(getAllReportSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getAllReportError(err));\n                dispatch(setMessage(err?.message));\n            });\n    } catch (error) {\n        dispatch(getAllReportError('Something went wrong'));\n    }\n};\n\nexport { getReport, getAllReport };\n"],"sourceRoot":""}