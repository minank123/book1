{"version":3,"sources":["views/faqs/add-faq/index.js","views/faqs/all-faqs/index.js","store/actions/FAQActions/index.js"],"names":["STATUS_ITEMS","id","status","validationSchema","yup","title","required","AddFAQ","props","openAddFAQs","setOpenAddFAQs","isEditData","classes","useStyles","dispatch","useDispatch","formInitialSchema","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","handlePopupClose","_jsx","children","_jsxs","Dialog","open","paper","dialog","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","onSubmit","data","payload","updateFAQ","getAllFAQ","addFAQ","PerfectScrollbar","ScrollHeight","DialogContent","Grid","container","spacing","item","xs","sm","mandatory","RHFTextField","name","autoFocus","RHFSelect","label","map","index","value","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","type","buttonSubmit","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllFAQs","_allFAQs$content","_allFAQs$content$slic","useUserRole","roleList","history","useHistory","useTheme","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setFAQId","_useState5","_useState6","page","setPage","_useState7","_useState8","rowsPerPage","setRowsPerPage","_useState9","isOpen","subTitle","_useState10","confirmDialog","setConfirmDialog","_useState11","_useState12","isSearchFaq","setSearchFaq","_useState13","_useState14","isFAQUpdateData","setFAQUpdateData","allFAQs","useSelector","state","faq","useEffect","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","display","justifyContent","md","OutlinedInput","searchControl","onChange","event","_event$target","target","handleSearchFaq","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","btn","btnAdd","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","content","TableBody","slice","row","success","main","warning","dark","Tooltip","IconButton","EditIcon","cursor","getFAQ","push","concat","VisibilityIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog","getFAQError","error","GET_FAQ_ERROR","getAllFAQError","GET_ALL_FAQ_ERROR","getAllQAError","GET_ALL_QA_ERROR","successCB","http","process","then","res","setMessage","message","catch","err","_err$data","console","log","addModuleSubscription","_err$data2","addPlanSubscription","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_error$data","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","addQA","_err$data3","_err$data4","updateQA","mid","_err$data5","GET_FAQ_START","GET_FAQ_SUCCESS","getFAQSuccess","getFAQData","_err$data6","length","undefined","searchData","GET_ALL_FAQ_START","GET_ALL_FAQ_SUCCESS","getAllFAQSuccess","_err$data8","getAllQA","GET_ALL_QA_START","GET_ALL_QA_SUCCESS","getAllQASuccess","allQAs","_err$data9","deleteQA","shiftQAUp","shiftQADown"],"mappings":"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","file":"static/js/63.b620e005.chunk.js","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFSelect } from '../../../components/hook-form';\nimport * as yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { addFAQ, updateFAQ, getAllFAQ } from '../../../store/actions/FAQActions';\nimport useStyles from '../../DialogStyles';\n\nconst STATUS_ITEMS = [\n    { id: 0, status: 'ACTIVE' },\n    { id: 1, status: 'INACTIVE' }\n];\n\nconst validationSchema = yup.object({\n    title: yup.string('Enter FAQ Title').required('Title is required'),\n    status: yup.string('Enter status here').required('Status is required')\n});\n\nexport default function AddFAQ(props) {\n    const { openAddFAQs, setOpenAddFAQs, isEditData } = props;\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const formInitialSchema = {\n        title: isEditData?.title || '',\n        status: isEditData?.status || 'INACTIVE'\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: formInitialSchema\n    });\n    const { reset, handleSubmit } = methods;\n\n    const handlePopupClose = () => {\n        setOpenAddFAQs(false);\n        reset();\n    };\n    const onSubmit = (data) => {\n        const payload = {\n            title: data?.title,\n            status: data?.status\n        };\n\n        if (isEditData) {\n            dispatch(\n                updateFAQ(payload, isEditData.id, () => {\n                    dispatch(getAllFAQ());\n                })\n            );\n            handlePopupClose();\n        } else {\n            dispatch(\n                addFAQ(payload, () => {\n                    dispatch(getAllFAQ());\n                })\n            );\n            handlePopupClose();\n        }\n    };\n\n    return (\n        <div>\n            <Dialog open={openAddFAQs} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add FAQ' : 'Update FAQ'}</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <PerfectScrollbar className={classes.ScrollHeight}>\n                        <DialogContent>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Title <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFTextField id=\"title\" name=\"title\" autoFocus />\n                                </Grid>\n                                <br /> <br />\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Status <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEMS?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            </Grid>\n                        </DialogContent>\n                    </PerfectScrollbar>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport ConfirmDialog from '../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getAllFAQ, getFAQ } from '../../../store/actions/FAQActions';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport AddFAQ from '../add-faq';\nimport useStyles from '../../ViewTableStyles';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllFAQs() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const theme = useTheme();\n\n    const [openAddFAQs, setOpenAddFAQs] = useState(false);\n    const [FAQId, setFAQId] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n    const [isSearchFaq, setSearchFaq] = useState('');\n    const [isFAQUpdateData, setFAQUpdateData] = useState(null);\n\n    const { allFAQs } = useSelector((state) => state?.faq);\n\n    const clearGroup = async (id) => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n    const handleFAQs = (id) => {\n        setOpenAddFAQs(true);\n        setFAQUpdateData(id);\n    };\n\n    const handleViewQA = (id) => {\n        setFAQId(id);\n        dispatch(getFAQ(id));\n        history.push(`/admin/faq/${id}/qa`);\n    };\n    const handleSearchFaq = (event) => {\n        setSearchFaq(event?.target?.value);\n    };\n\n    useEffect(() => {\n        dispatch(getAllFAQ(rowsPerPage, isSearchFaq ? isSearchFaq : '', page + 1));\n    }, [rowsPerPage, isSearchFaq, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; All FAQs </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <div>\n                                <OutlinedInput\n                                    className={classes.searchControl}\n                                    id=\"input-search-header\"\n                                    onChange={(event) => handleSearchFaq(event)}\n                                    placeholder=\"Search\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <div className={classes.btn}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                        setOpenAddFAQs(true);\n                                        setFAQUpdateData(null);\n                                    }}\n                                    className={classes.btnAdd}\n                                >\n                                    Add FAQ\n                                </Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Title </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!allFAQs?.content ? (\n                                <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                            ) : (\n                                <TableBody>\n                                    {allFAQs?.content?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell> {row?.title} </TableCell>\n\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'PENDING' && 'blue') ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n\n                                            <TableCell align=\"right\">\n                                                <Tooltip title=\"Update FAQ\">\n                                                    <IconButton onClick={() => handleFAQs(row)}>\n                                                        <EditIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <Tooltip title=\"View QA\">\n                                                    <IconButton onClick={() => handleViewQA(row?.id)}>\n                                                        <VisibilityIcon color=\"primary\" fontSize=\"small\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={allFAQs?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openAddFAQs && <AddFAQ openAddFAQs={openAddFAQs} setOpenAddFAQs={setOpenAddFAQs} isEditData={isFAQUpdateData} />}\n\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n","import { http } from '../../../utils/http';\nimport { setMessage } from '../MessageActions';\nimport {\n    GET_ALL_FAQ_START,\n    GET_ALL_FAQ_SUCCESS,\n    GET_ALL_FAQ_ERROR,\n    GET_FAQ_START,\n    GET_FAQ_SUCCESS,\n    GET_FAQ_ERROR,\n    GET_ALL_QA_START,\n    GET_ALL_QA_SUCCESS,\n    GET_ALL_QA_ERROR,\n    GET_QA_START,\n    GET_QA_SUCCESS,\n    GET_QA_ERROR\n} from '../../constants';\n\nconst getFAQStart = () => {\n    return { type: GET_FAQ_START };\n};\nconst getFAQSuccess = (payload) => {\n    return { type: GET_FAQ_SUCCESS, payload };\n};\nconst getFAQError = (error) => {\n    return { type: GET_FAQ_ERROR, error };\n};\n\nconst getAllFAQStart = () => {\n    return { type: GET_ALL_FAQ_START };\n};\nconst getAllFAQSuccess = (payload) => {\n    return { type: GET_ALL_FAQ_SUCCESS, payload };\n};\nconst getAllFAQError = (error) => {\n    return { type: GET_ALL_FAQ_ERROR, error };\n};\n\nconst getQAStart = () => {\n    return { type: GET_QA_START };\n};\nconst getQASuccess = (payload) => {\n    return { type: GET_QA_SUCCESS, payload };\n};\nconst getQAError = (error) => {\n    return { type: GET_QA_ERROR, error };\n};\n\nconst getAllQAStart = () => {\n    return { type: GET_ALL_QA_START };\n};\nconst getAllQASuccess = (payload) => {\n    return { type: GET_ALL_QA_SUCCESS, payload };\n};\nconst getAllQAError = (error) => {\n    return { type: GET_ALL_QA_ERROR, error };\n};\n\nconst addFAQ = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'POST', 'documents-service/faqs-service/faq-categories', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst addModuleSubscription = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS, 'POST', 'subscriptions-service/module-subscriptions', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst addPlanSubscription = (payload, successCB) => async (dispatch) => {\n    try {\n        const res = await http(process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS, 'POST', 'subscriptions-service/plan-subscriptions', payload, true);\n        dispatch(setMessage(res?.message));\n        successCB && successCB(res);\n        return res;\n    } catch (error) {\n        console.error(error);\n        dispatch(setMessage(error?.data?.message));\n        throw error;\n    }\n};\n\n\nconst addQA = (payload, id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'POST', `documents-service/faqs-service/faqs/category/${id}`, payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message ? res?.message : 'QA Added Successfully'));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst updateFAQ = (payload, id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'PUT', `documents-service/faqs-service/faq-categories/${id}`, payload, true)\n            .then((res) => {\n                if (res) {\n                    dispatch(setMessage(res?.message));\n                    successCB && successCB(res);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst updateQA = (payload, mid, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'PUT', `documents-service/faqs-service/faqs/${mid}`, payload, true)\n            .then((res) => {\n                if (res) {\n                    dispatch(setMessage(res?.message));\n                    successCB && successCB(res);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getFAQ = (id, successCB) => (dispatch) => {\n    dispatch(getFAQStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'GET', `documents-service/faqs-service/faq-categories/${id}`, true)\n            .then((res) => {\n                const payload = {\n                    getFAQData: res\n                };\n                dispatch(getFAQSuccess(payload));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(getFAQError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(getFAQError('Something went wrong'));\n    }\n};\n\nconst getQA = (mid, successCB) => (dispatch) => {\n    dispatch(getQAStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'GET', `documents-service/faqs-service/faqs/${mid}`, true)\n            .then((res) => {\n                const payload = {\n                    getQAData: res\n                };\n                dispatch(getQASuccess(payload));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(getQAError(err));\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        console.log('error');\n        dispatch(getQAError('Something went wrong'));\n    }\n};\n\nconst getAllFAQ =\n    (rowsPerPage = 10, searchData = '', page = 1) =>\n        (dispatch) => {\n            dispatch(getAllFAQStart());\n            try {\n                http(\n                    process.env.REACT_APP_ROOT_URL_FAQ,\n                    'GET',\n                    `documents-service/faqs-service/faq-categories?pageNumber=${page}&pageSize=${rowsPerPage}&searchKey=${searchData}`,\n                    true\n                )\n                    .then((res) => {\n                        const payload = {\n                            allFAQs: res\n                        };\n                        dispatch(getAllFAQSuccess(payload));\n                    })\n                    .catch((err) => {\n                        dispatch(getAllFAQError(err));\n                        dispatch(setMessage(err?.data?.message));\n                    });\n            } catch (error) {\n                dispatch(getAllFAQError('Something went wrong'));\n            }\n        };\n\nconst getAllQA =\n    (id, rowsPerPage = 10, searchData = '', page = 1) =>\n        (dispatch) => {\n            dispatch(getAllQAStart());\n            try {\n                http(\n                    process.env.REACT_APP_ROOT_URL_FAQ,\n                    'GET',\n                    `documents-service/faqs-service/faqs/category/${id}?searchKey=${searchData}&pageNumber=${page}&pageSize=${rowsPerPage}`,\n                    true\n                )\n                    .then((res) => {\n                        const payload = {\n                            allQAs: res\n                        };\n                        dispatch(getAllQASuccess(payload));\n                    })\n                    .catch((err) => {\n                        dispatch(getAllQAError(err));\n                        dispatch(setMessage(err?.data?.message));\n                    });\n            } catch (error) {\n                dispatch(getAllQAError('Something went wrong'));\n            }\n        };\n\nconst deleteQA = (mid, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'DELETE', `documents-service/faqs-service/faqs/${mid}`, true)\n            .then((res) => {\n                dispatch(setMessage('QA Deleted Successfully'));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst shiftQAUp = (mid, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'PUT', `documents-service/faqs-service/faqs/${mid}/shift?shiftDown=false`, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst shiftQADown = (mid, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_FAQ, 'PUT', `documents-service/faqs-service/faqs/${mid}/shift?shiftDown=true`, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport {\n    getAllFAQ,\n    addFAQ,\n    addModuleSubscription,\n    addPlanSubscription,\n    updateFAQ,\n    getFAQ,\n    getAllQA,\n    addQA,\n    updateQA,\n    getQA,\n    shiftQAUp,\n    shiftQADown,\n    deleteQA\n};\n"],"sourceRoot":""}