{"version":3,"sources":["views/admin/Dashboard/UserDashBoard/index.js","views/user-management/styles.js","../node_modules/@material-ui/icons/Group.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","UserDashboard","_getAllProfileData$co","useTheme","classes","useStyles","useUserRole","roleList","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_useState5","_useState6","isSearchUser","setSearchUser","_useState7","_useState8","timeframe","setTimeframe","getAllProfileData","useSelector","state","addUser","_useState9","_useState10","selectedAddressType","setSelectedAddressType","useEffect","addressTypeParam","getAllProfileByTime","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","GroupIcon","pageTitleIcon","pageTitle","Paper","elevation","Grid","container","spacing","item","xs","sm","md","OutlinedInput","searchControl","id","placeholder","onChange","event","target","value","handleSearchUser","startAdornment","InputAdornment","position","IconSearch","stroke","size","Button","variant","color","style","boxShadow","onClick","Select","handleaddressChange","MenuItem","TableContainer","tableContainer","Table","sx","minWidth","table","TableHead","tableHeaderCell","TableCell","align","TableBody","content","map","row","index","_row$userProfileList","_row$userProfileList$","_row$userProfileList2","_row$userProfileList3","_row$userProfileList4","_row$userProfileList5","_row$userProfileList6","_row$userProfileList7","_row$role","_row$userProfileList8","_row$userProfileList9","userProfileList","firstName","lastName","defaultAddressType","userType","email","role","replace","mobile","Moment","format","date","createdAt","adminComment","Typography","status","success","main","warning","dark","textAlign","TablePagination","labelRowsPerPage","labelDisplayedRows","_ref","from","to","count","concat","backIconButtonProps","nextIconButtonProps","SelectProps","inputProps","showFirstButton","showLastButton","rowsPerPageOptions","component","totalElements","onPageChange","newPage","onRowsPerPageChange","newRowsPerPage","marginBottom","makeStyles","_searchControl","borderRadius","marginTop","fontWeight","primary","light","fontSize","padding","display","width","background","paper","verticalAlign","marginLeft","paddingRight","paddingLeft","_defineProperty","breakpoints","down","grey","buttonSubmit","height","marginRight","buttonCancel","label","dialog","dialogAction","justifyContent","closeIcon","cursor","dialogTitle","dialogTitleChild","mandatory","error","ScrollHeight","maxHeight","input","ellipsis","maxWidth","whiteSpace","overflow","textOverflow","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/30.f121e069.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { IconSearch } from '@tabler/icons';\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport useStyles from '../../../../views/user-management/styles';\n\nimport {\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip,\n    Grid,\n    Select,\n    MenuItem\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport '../../../../notification/Notification.css';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport useUserRole from '../../../../hooks/useUserRole';\nimport { getAllProfileByTime } from '../../../../store/actions/AddUserActions';\nimport Moment from 'react-moment';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function UserDashboard() {\n    const theme = useTheme();\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n\n    const [isSearchUser, setSearchUser] = useState('');\n    const [timeframe, setTimeframe] = useState('lastThreeMonths');\n    const { getAllProfileData } = useSelector((state) => state?.addUser);\n    const [selectedAddressType, setSelectedAddressType] = useState('All');\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    const handleRowsPerPageChange = (event) => {\n        const newRowsPerPage = +event.target.value;\n        setRowsPerPage(newRowsPerPage);\n        setPage(0);\n    };\n\n    const handleSearchUser = (event) => {\n        setSearchUser(event.target.value);\n    };\n    const handleTimeFrame = (selectedTimeFrame) => {\n        setTimeframe(selectedTimeFrame);\n    };\n    const handleaddressChange = (selectedAddressType) => {\n\n        setSelectedAddressType(selectedAddressType);\n    };\n    useEffect(() => {\n        const addressTypeParam = selectedAddressType === 'All' ? '' : selectedAddressType;\n        dispatch(\n            getAllProfileByTime(\n                rowsPerPage,\n                isSearchUser ? isSearchUser : '',\n                addressTypeParam ? addressTypeParam : '',\n                timeframe ? timeframe : '',\n                page + 1\n            )\n        );\n    }, [rowsPerPage, selectedAddressType, isSearchUser, timeframe, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <GroupIcon className={classes.pageTitleIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Newly Onboarded Users </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                placeholder=\"Search\"\n                                onChange={(event) => handleSearchUser(event)}\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9' }}\n                                onClick={() => handleTimeFrame('lastThreeMonths')}\n                            >\n                                Last Three Months\n                            </Button>\n                        </Grid>\n\n                        <Grid item>\n                            <Select\n                                style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9' }}\n                                value={selectedAddressType}\n                                onChange={(event) => {\n                                    handleaddressChange(event.target.value);\n                                }}\n                            >\n                                <MenuItem value=\"All\">All</MenuItem>\n                                <MenuItem value=\"HOME\">Home</MenuItem>\n                                <MenuItem value=\"SCHOOL\">School</MenuItem>\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table sx={{ minWidth: 220 }} className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell align=\"center\"> S.No </TableCell>\n                                    <TableCell align=\"center\"> Cust Id </TableCell>\n                                    <TableCell align=\"center\"> Full Name </TableCell>\n                                    <TableCell align=\"center\"> Address Type </TableCell>\n                                    <TableCell align=\"center\"> User Type </TableCell>\n                                    <TableCell align=\"center\"> Email </TableCell>\n                                    <TableCell align=\"center\"> Role </TableCell>\n                                    <TableCell align=\"center\"> Mobile </TableCell>\n                                    <TableCell align=\"center\"> Joined </TableCell>\n                                    <TableCell align=\"center\"> Comment </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!getAllProfileData ? (\n                                <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                            ) : (\n                                <TableBody>\n                                    {getAllProfileData?.content?.map((row, index) => (\n                                        <StyledTableRow key={row?.id}>\n                                            <TableCell align=\"center\"> {index + 1} </TableCell>\n                                            <TableCell align=\"center\"> {row?.userProfileList?.[0]?.id || '-'} </TableCell>\n                                            <TableCell align=\"center\">\n                                                {' '}\n                                                {row?.userProfileList?.[0]?.firstName + ' ' + row?.userProfileList?.[0]?.lastName ||\n                                                    '-'}{' '}\n                                            </TableCell>\n                                            <TableCell align=\"center\"> {row?.userProfileList?.[0]?.defaultAddressType || '-'} </TableCell>\n                                            <TableCell align=\"center\"> {row?.userType || '-'} </TableCell>\n                                            <TableCell align=\"center\"> {row?.email || '-'} </TableCell>\n                                            <TableCell align=\"center\"> {row?.role?.replace('_', ' ') || '-'} </TableCell>\n                                            <TableCell align=\"center\"> {row?.mobile || '-'} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Moment format=\"YYYY/MM/DD\" date={row?.createdAt} />\n                                            </TableCell>\n                                            <TableCell align=\"center\"> {row?.userProfileList?.[0]?.adminComment || '-'} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            row?.status === 'ACTIVE'\n                                                                ? theme.palette.success.main\n                                                                : theme.palette.warning.dark\n                                                    }}\n                                                >\n                                                    {row?.status || '-'}\n                                                </Typography>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        labelRowsPerPage={<span>Rows:</span>}\n                        labelDisplayedRows={({ from, to, count }) => {\n                            return `Page: ${page + 1} (${from}-${to} of ${count})`;\n                        }}\n                        backIconButtonProps={{\n                            color: 'secondary'\n                        }}\n                        nextIconButtonProps={{ color: 'secondary' }}\n                        SelectProps={{\n                            inputProps: {\n                                'aria-label': 'page number'\n                            }\n                        }}\n                        showFirstButton={true}\n                        showLastButton={true}\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={getAllProfileData?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleRowsPerPageChange}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n    table: {\n        minWidth: 650\n    },\n    tableContainer: {\n        borderRadius: 15,\n        marginTop: 16\n    },\n    tableHeaderCell: {\n        fontWeight: 'lighter',\n        backgroundColor: theme.palette.primary.light,\n        color: '#ffffff'\n    },\n    status: {\n        fontWeight: 'lighter',\n        fontSize: '0.75rem',\n        color: 'white',\n        backgroundColor: 'gray',\n        borderRadius: 8,\n        padding: '5px 10px',\n        display: 'inline-block'\n    },\n    root: {\n        padding: 16,\n        width: '100%'\n    },\n    titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n    pageTitleIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    searchControl: {\n        width: '234px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n\n    //------Dialog styles--------\n\n    buttonSubmit: {\n        height: 40,\n        width: 100,\n        marginRight: 10\n    },\n    buttonCancel: {\n        height: 40,\n        width: 100\n    },\n    label: {\n        marginBottom: 5,\n        marginLeft: 10,\n        fontSize: 14\n    },\n    dialog: {\n        position: 'absolute'\n    },\n    dialogAction: {\n        justifyContent: 'right',\n        marginRight: 10,\n        marginBottom: 10,\n        marginTop: 10\n    },\n    closeIcon: {\n        color: '#FFFFFF',\n        marginBottom: '-5px',\n        cursor: 'pointer'\n    },\n    dialogTitle: {\n        backgroundColor: theme.palette.primary.main,\n        color: '#FFFFFF',\n        marginBottom: 20\n    },\n    dialogTitleChild: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    mandatory: {\n        color: theme.palette.error.main\n    },\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 240px)'\n    },\n    input: {\n        display: 'none'\n    },\n    ellipsis: {\n        maxWidth: 200, // percentage also works\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"\n}), 'Group');\n\nexports.default = _default;"],"sourceRoot":""}