{"version":3,"sources":["store/actions/AuthActions/resetPassword.action.js","views/authentication/reset-password/RestResetPassword.js","views/authentication/reset-password/index.js","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","views/authentication/AuthCardWrapper.js","../node_modules/@material-ui/styles/styled/styled.js","views/authentication/AuthWrapper1.js"],"names":["resetPasswordSuccess","payload","type","RESET_PASSWORD_SUCCESS","useStyles","makeStyles","theme","loginInput","_objectSpread","typography","customInput","RestResetPassword","props","_ref","Object","assign","_objectDestructuringEmpty","_errors$email2","_errors$email4","classes","_React$useState","React","useState","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","showConfirmPassword","setShowConfirmPassword","loading","useSelector","_ref2","login","RegisterSchema","Yup","shape","newPassword","required","confirmNewPassword","oneOf","dispatch","useDispatch","history","useHistory","token","useParams","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","errors","formState","handleMouseDownPassword","event","preventDefault","newPasswordError","useMemo","_errors$email","email","confirmNewPasswordError","_errors$email3","_jsx","Fragment","children","_jsxs","FormProvider","onSubmit","_ref3","successCB","confirmPassword","push","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","RESET_PASSWORD_START","http","process","sent","setMessage","message","t0","error","RESET_PASSWORD_ERROR","stop","_x","apply","arguments","FormControl","fullWidth","Boolean","className","RHFTextField","id","name","placeholder","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","inputProps","notchedOutline","Box","sx","mt","AnimateButton","Button","disableElevation","disabled","size","variant","color","ResetPassword","useTheme","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","Grid","container","direction","justifyContent","item","xs","alignItems","minHeight","m","sm","mb","AuthCardWrapper","spacing","RouterLink","to","style","textDecoration","src","Logo","alt","width","Stack","Typography","palette","primary","main","gutterBottom","fontSize","textAlign","Divider","component","obj","TypeError","_card","card","maxWidth","flexGrow","flexBasis","_defineProperty","margin","content","padding","other","_objectWithoutProperties","_excluded","MainCard","contentClass","_excluded2","Component","filterProps","options","length","undefined","stylesOptions","_objectWithoutPropertiesLoose","classNamePrefix","stylesOrCreator","root","_extends","displayName","propTypes","StyledComponent","ref","classNameProp","clone","ComponentProp","clsx","spread","input","fields","output","keys","forEach","prop","indexOf","omit","FinalComponent","hoistNonReactStatics","backgroundColor","light"],"mappings":"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","file":"static/js/33.73fdf181.chunk.js","sourcesContent":["import { http } from '../../../utils/http';\nimport { RESET_PASSWORD_START, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_ERROR } from '../../constants';\nimport { setMessage } from '../MessageActions';\n\nconst resetPasswordStart = () => {\n    return { type: RESET_PASSWORD_START };\n};\nconst resetPasswordSuccess = (payload) => {\n    return { type: RESET_PASSWORD_SUCCESS, payload };\n};\nconst resetPasswordError = (error) => {\n    return { type: RESET_PASSWORD_ERROR, error };\n};\n\nexport const resetPassword = (payload, successCB) => async (dispatch) => {\n    try {\n        dispatch(resetPasswordStart());\n        const res = await http(process.env.REACT_APP_ROOT_URL, 'POST', 'users-service/users/password/reset', payload, false);\n        dispatch(resetPasswordSuccess(res));\n        dispatch(setMessage(res.message));\n        successCB();\n    } catch (error) {\n        dispatch(resetPasswordError(error?.message || 'Something went wrong'));\n        dispatch(setMessage(error?.message || 'Something went wrong'));\n    }\n};\n","import React, { useMemo } from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, FormControl, IconButton, InputAdornment } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\n// third party\nimport * as Yup from 'yup';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField } from '../../../components/hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\n// project imports\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\nimport { resetPassword } from '../../../store/actions/AuthActions/resetPassword.action';\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//============================|| Reset Password ||============================//\n\nconst RestResetPassword = (props, { ...others }) => {\n    const classes = useStyles();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\n    const { loading } = useSelector(({ login }) => login);\n    const RegisterSchema = Yup.object().shape({\n        newPassword: Yup.string().required('New Password is required'),\n        confirmNewPassword: Yup.string()\n            .oneOf([Yup.ref('newPassword'), null], 'Password must match')\n            .required('Confirm Password is required')\n    });\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const defaultValues = {\n        newPassword: '',\n        confirmNewPassword: ''\n    };\n    const { token } = useParams();\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(RegisterSchema),\n        defaultValues\n    });\n\n    const {\n        handleSubmit,\n        formState: { errors }\n    } = methods;\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n    const handleClickShowConfirmPassword = () => {\n        setShowConfirmPassword(!showConfirmPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const onSubmit = ({ newPassword, confirmNewPassword }) => {\n        dispatch(\n            resetPassword(\n                {\n                    token,\n                    newPassword,\n                    confirmPassword: confirmNewPassword\n                },\n                () => {\n                    history.push('/login');\n                }\n            )\n        );\n    };\n    const newPasswordError = useMemo(() => errors?.email?.newPassword, [errors?.email?.newPassword]);\n    const confirmNewPasswordError = useMemo(() => errors?.email?.confirmNewPassword, [errors?.email?.confirmNewPassword]);\n\n    return (\n        <React.Fragment>\n            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                <FormControl fullWidth error={Boolean(newPasswordError)} className={classes.loginInput}>\n                    <RHFTextField\n                        id=\"outlined-adornment-password-login\"\n                        type={showPassword ? 'text' : 'password'}\n                        name=\"newPassword\"\n                        placeholder=\"New Password\"\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                    >\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                        inputProps={{\n                            classes: {\n                                notchedOutline: classes.notchedOutline\n                            }\n                        }}\n                    />\n                </FormControl>\n                <FormControl fullWidth error={Boolean(confirmNewPasswordError)} className={classes.loginInput}>\n                    <RHFTextField\n                        id=\"outlined-adornment-password-login\"\n                        type={showConfirmPassword ? 'text' : 'password'}\n                        name=\"confirmNewPassword\"\n                        placeholder=\"Confirm New Password\"\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowConfirmPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                    >\n                                        {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                        inputProps={{\n                            classes: {\n                                notchedOutline: classes.notchedOutline\n                            }\n                        }}\n                    />\n                </FormControl>\n\n                <Box\n                    sx={{\n                        mt: 2\n                    }}\n                >\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            disabled={loading}\n                            fullWidth\n                            size=\"large\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Reset password\n                        </Button>\n                    </AnimateButton>\n                </Box>\n            </FormProvider>\n        </React.Fragment>\n    );\n};\n\nexport default RestResetPassword;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './../AuthWrapper1';\nimport Logo from '../../../assets/images/users/logoWithName.png';\nimport AuthCardWrapper from './../AuthCardWrapper';\nimport RestResetPassword from './RestResetPassword';\n\n// assets\n\n//================================|| Reset Password MAIN ||================================//\n\nconst ResetPassword = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\">\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"/home\" style={{ textDecoration: 'none' }}>\n                                            <img src={Logo} alt=\"\" width=\"158\" />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.primary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h4' : 'h3'}\n                                                    >\n                                                        Reset Password\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your new password below\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <RestResetPassword />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/login\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Back to login\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default ResetPassword;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\n\n// project import\nimport MainCard from './../../ui-component/cards/MainCard';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: '475px',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5) + ' !important',\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3) + ' !important'\n        }\n    }\n}));\n\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\n\nconst AuthCardWrapper = ({ children, ...other }) => {\n    const classes = useStyles();\n\n    return (\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\n            {children}\n        </MainCard>\n    );\n};\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"name\"],\n      _excluded2 = [\"children\", \"className\", \"clone\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  const componentCreator = (style, options = {}) => {\n    const {\n      name\n    } = options,\n          stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    let classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\n      root: props => style(_extends({\n        theme\n      }, props))\n    }) : {\n      root: style\n    };\n    const useStyles = makeStyles(stylesOrCreator, _extends({\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    let filterProps;\n    let propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp\n      } = props,\n            other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n      let spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className\n        }, spread));\n      }\n\n      const FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/_jsx(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread, {\n        children: children\n      }));\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, props => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","// material-ui\nimport { styled } from '@material-ui/styles';\n\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n"],"sourceRoot":""}