{"version":3,"sources":["views/subscription/admin/plans/AllDeletedPlan/index.js","../node_modules/@material-ui/icons/ArrowUpward.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllDeletedPlan","classes","useStyles","useUserRole","roleList","useSelector","state","userProfile","loggedUserProfile","dispatch","useDispatch","useTheme","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","getAllPlans","subscriptions","newData","content","useEffect","getAllDeletedPlan","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","pageTitle","Paper","elevation","Grid","container","spacing","style","display","justifyContent","item","xs","sm","md","OutlinedInput","searchControl","id","onChange","e","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","name","frequency","booksCount","registrationFee","securityFee","type","Typography","status","success","main","warning","dark","Tooltip","title","IconButton","onClick","data","payload","schoolIds","updatePlan","handleActivePlans","ArrowForwardIcon","color","cursor","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/84.4046339e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Typography,\n    Tooltip\n} from '@material-ui/core';\nimport { IconSearch } from '@tabler/icons';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport useStyles from '../../../../ViewTableStyles';\nimport useUserRole from '../../../../../hooks/useUserRole';\nimport MainCard from '../../../../../ui-component/cards/MainCard';\nimport { getAllDeletedPlan, updatePlan } from '../../../../../store/actions/SubscriptionActions';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllDeletedPlan() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN', 'SUPER_ADMIN'] });\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const [value, setValue] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const { getAllPlans } = useSelector((state) => state?.subscriptions);\n    const newData = getAllPlans?.content;\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        //setPage(0);\n    };\n    const message = 'Plan Active Successfully';\n    const handleActivePlans = (id, data) => {\n        // schoolIds.push(data?.schoolIds);\n        const payload = {\n            name: data?.name,\n            frequency: data?.frequency,\n            booksCount: data?.booksCount,\n            registrationFee: data?.registrationFee,\n            securityFee: data?.securityFee,\n            type: data?.type,\n            schoolIds: data?.schoolIds,\n            status: 'ACTIVE'\n        };\n        dispatch(\n            updatePlan(payload, id, message, () => {\n                dispatch(getAllDeletedPlan(rowsPerPage, value ? value : '', page + 1));\n            })\n        );\n    };\n\n    useEffect(() => {\n        dispatch(getAllDeletedPlan(rowsPerPage, value ? value : '', page + 1));\n    }, [rowsPerPage, value, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <span className={classes.pageTitle}>&nbsp; All Deleted Plans </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <div>\n                                <OutlinedInput\n                                    className={classes.searchControl}\n                                    id=\"input-search-header\"\n                                    value={value}\n                                    onChange={(e) => setValue(e.target.value)}\n                                    placeholder=\"Search\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Name </TableCell>\n                                    <TableCell> Frequency </TableCell>\n                                    <TableCell align=\"center\"> Book Count </TableCell>\n                                    <TableCell align=\"center\"> Registration Fee</TableCell>\n                                    <TableCell align=\"center\"> Security Fee</TableCell>\n                                    <TableCell align=\"center\"> Type</TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row) => (\n                                        <StyledTableRow key={row.id}>\n                                            <TableCell> {row?.name} </TableCell>\n                                            <TableCell> {row?.frequency} </TableCell>\n                                            <TableCell align=\"center\"> {row?.booksCount} </TableCell>\n                                            <TableCell align=\"center\"> {row?.registrationFee} </TableCell>\n                                            <TableCell align=\"center\"> {row?.securityFee} </TableCell>\n                                            <TableCell align=\"center\"> {row?.type} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Tooltip title=\"Restore Plan \">\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            handleActivePlans(row?.id, row);\n                                                        }}\n                                                    >\n                                                        <ArrowForwardIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={getAllPlans?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;"],"sourceRoot":""}