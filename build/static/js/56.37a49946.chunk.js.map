{"version":3,"sources":["views/admin/Dashboard/LibrarySubscriptionDashboard/SubscriptionPlanHistory/index.js","views/admin/Dashboard/LibrarySubscriptionDashboard/index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","SubscriptionPlanHistory","props","_data$content","_data$content2","open","close","data","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","classes","useStyles","useTheme","handlePopupClose","_jsx","children","_jsxs","Dialog","maxWidth","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","to","onClick","CloseIcon","closeIcon","DialogContent","maxHeight","Grid","container","TableContainer","Table","TableHead","tableHeaderCell","TableCell","align","content","length","textAlign","TableBody","map","item","_item$planLimitedInfo","_item$planOptionLimit","_item$planLimitedInfo2","_item$planLimitedInfo3","planLimitedInfo","name","planOptionLimitedInfo","type","frequency","booksCount","startDate","endDate","status","success","main","warning","dark","id","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","target","value","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","LibrarySubscriptionDashboard","useUserRole","roleList","loggedUserProfile","useSelector","state","userProfile","dispatch","useDispatch","planType","userSearchKey","setUserSearchKey","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","expiration","setExpiration","_useState11","_useState12","loading","_useState13","_useState14","subscriptionHistory","setSubscriptionHistory","_useState15","_useState16","openSubHistoryPopUp","setOpenSubHistoryPopUp","allSubscription","subscriptions","newData","handleExpiration","expirationValue","useEffect","getAllExpiredSubscription","getSubscriptionHistoryById","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","getModuleSubscriptions","sent","console","log","t0","stop","_x","apply","arguments","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","spacing","justifyContent","alignItems","xs","sm","md","OutlinedInput","searchControl","onChange","e","_e$target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","width","boxShadow","marginBottom","Box","sx","display","CircularProgress","tableContainer","overflowX","table","row","index","_row$userLimitedInfo","_row$userLimitedInfo2","_row$planLimitedInfo","_row$planOptionLimite","_row$userLimitedInfo3","_row$userLimitedInfo4","userLimitedInfo","fullName","toLowerCase","profileId","durationInMonths","email","mobile","whiteSpace","role","Tooltip","title","IconButton","_row$userLimitedInfo5","userProfileId1","VisibilityIcon","cursor","newRowsPerPage"],"mappings":"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","file":"static/js/56.37a49946.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Typography,\n    Link,\n    Divider,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    TablePagination\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useStyles from '../../../../ViewTableStyles';\nimport { useState } from 'react';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@emotion/react';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function SubscriptionPlanHistory(props) {\n    const { open, close, data } = props;\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handlePopupClose = () => {\n        close(false);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    return (\n        <div>\n            <Dialog open={open} maxWidth={'md'}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: 'px' }}>Subscription History</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose} style={{ fontSize: '16px' }}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <DialogContent style={{ maxHeight: '350px' }}>\n                    <Grid container>\n                        <TableContainer>\n                            <Table aria-label=\"simple table\">\n                                <TableHead className={classes.tableHeaderCell}>\n                                    <StyledTableRow>\n                                        <TableCell align=\"center\"> Plan Name </TableCell>\n                                        <TableCell align=\"center\"> Plan Option Type </TableCell>\n                                        <TableCell align=\"center\"> Plan Frequency </TableCell>\n                                        <TableCell align=\"center\"> Book Count </TableCell>\n                                        <TableCell align=\"center\"> Start Date </TableCell>\n                                        <TableCell align=\"center\"> End Date </TableCell>\n                                        <TableCell align=\"center\"> Status </TableCell>\n                                    </StyledTableRow>\n                                </TableHead>\n                                {data?.content?.length === 0 ? (\n                                    <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                                ) : (\n                                    <TableBody>\n                                        {data?.content?.map((item) => (\n                                            <TableRow key={item?.id}>\n                                                <TableCell align=\"center\">{item?.planLimitedInfo?.name}</TableCell>\n                                                <TableCell align=\"center\">{item?.planOptionLimitedInfo?.type}</TableCell>\n                                                <TableCell align=\"center\">{item?.planLimitedInfo?.frequency}</TableCell>\n                                                <TableCell align=\"center\">{item?.planLimitedInfo?.booksCount}</TableCell>\n                                                <TableCell align=\"center\">{item.startDate}</TableCell>\n                                                <TableCell align=\"center\">{item.endDate}</TableCell>\n                                                <TableCell align=\"center\">\n                                                    <Typography\n                                                        className={classes.status}\n                                                        style={{\n                                                            backgroundColor:\n                                                                item?.status === 'ACTIVE'\n                                                                    ? theme.palette.success.main\n                                                                    : theme.palette.warning.dark\n                                                        }}\n                                                    >\n                                                        {item?.status}\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={data.totalElements}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </DialogContent>\n\n                <Divider style={{ marginTop: 15 }} />\n                <DialogActions className={classes.dialogAction}>\n                    <Button variant=\"outlined\" color=\"primary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import { useTheme } from '@emotion/react';\nimport { withStyles } from '@material-ui/styles';\nimport { IconSearch } from '@tabler/icons';\nimport SubjectIcon from '@material-ui/icons/Subject';\n\nimport useStyles from '../../../ViewTableStyles';\n\nimport {\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Grid,\n    Box,\n    CircularProgress,\n    Tooltip,\n    IconButton\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport '../../../../notification/Notification.css';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport useUserRole from '../../../../hooks/useUserRole';\nimport { useEffect, useState } from 'react';\nimport { getAllExpiredSubscription } from '../../../../store/actions/SubscriptionActions';\nimport { getModuleSubscriptions } from '../../../../services/moduleSubscription';\nimport SubscriptionPlanHistory from './SubscriptionPlanHistory';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function LibrarySubscriptionDashboard() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN', 'SUPER_ADMIN'] });\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const [planType, setPlanType] = useState('');\n    const [userSearchKey, setUserSearchKey] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [expiration, setExpiration] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [subscriptionHistory, setSubscriptionHistory] = useState([]);\n    const [openSubHistoryPopUp, setOpenSubHistoryPopUp] = useState(false);\n    const { allSubscription } = useSelector((state) => state?.subscriptions);\n    const newData = allSubscription?.content;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleRowsPerPageChange = (event) => {\n        const newRowsPerPage = +event.target.value;\n        setRowsPerPage(newRowsPerPage);\n        setPage(0);\n    };\n\n    const handleExpiration = (expirationValue) => {\n        setExpiration(expirationValue);\n    };\n\n    useEffect(() => {\n        dispatch(\n            getAllExpiredSubscription(\n                userSearchKey ? userSearchKey : '',\n                page + 1,\n                rowsPerPage,\n                planType ? planType : '',\n                expiration ? expiration : ''\n            )\n        );\n    }, [userSearchKey, rowsPerPage, page, planType, expiration]);\n\n    const handleprofileId = (userProfileId1) => {\n        if (userProfileId1) {\n            getSubscriptionHistoryById(userProfileId1);\n        }\n    };\n\n    const getSubscriptionHistoryById = async (id) => {\n        try {\n            let res = await getModuleSubscriptions(id);\n            console.log('sub history===', res?.data);\n            setSubscriptionHistory(res?.data);\n        } catch (error) {\n            console.log(error);\n        }\n        setOpenSubHistoryPopUp(true);\n    };\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Library Subscriptions Expired Or About To Expire </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                        <Grid item xs={12} sm={4} md={4}>\n                            <div>\n                                <OutlinedInput\n                                    className={classes.searchControl}\n                                    id=\"input-search-header\"\n                                    value={userSearchKey}\n                                    onChange={(e) => {\n                                        setUserSearchKey(e?.target?.value);\n                                        setPage(0);\n                                    }}\n                                    placeholder=\"Search\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                        </InputAdornment>\n                                    }\n                                    style={{ width: '100%' }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} container justifyContent=\"space-between\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9', marginBottom: '10px', width: '48%' }}\n                                onClick={() => handleExpiration('LAST_30_DAYS')}\n                            >\n                                Expired\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9', marginBottom: '10px', width: '48%' }}\n                                onClick={() => handleExpiration('NEXT_30_DAYS')}\n                            >\n                                To Expire\n                            </Button>\n                        </Grid>\n                        <Grid item xs={12} container justifyContent=\"center\">\n                            {loading && (\n                                <>\n                                    <h7>Downloading...</h7>{' '}\n                                    <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                                        <CircularProgress />\n                                    </Box>\n                                </>\n                            )}\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer} style={{ overflowX: 'auto' }}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell align=\"center\"> FullName(CUS Id) </TableCell>\n                                    <TableCell align=\"center\"> Plan Title </TableCell>\n                                    <TableCell align=\"center\"> Email </TableCell>\n                                    <TableCell align=\"center\"> Mobile </TableCell>\n                                    <TableCell align=\"center\"> Start Date </TableCell>\n                                    <TableCell align=\"center\"> End Date </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"center\"> Subscription Details </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => {\n                                        return (\n                                            <StyledTableRow key={row?.id}>\n                                                <TableCell align=\"center\">\n                                                    {row?.userLimitedInfo?.fullName.toLowerCase()}({row?.userLimitedInfo?.profileId})\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    {row?.planLimitedInfo?.booksCount}B X {row?.planOptionLimitedInfo?.durationInMonths}M\n                                                </TableCell>\n                                                <TableCell align=\"center\">{row?.userLimitedInfo?.email.toLowerCase()}</TableCell>\n                                                <TableCell align=\"center\">{row?.userLimitedInfo?.mobile}</TableCell>\n\n                                                <TableCell align=\"center\">{row?.startDate}</TableCell>\n                                                <TableCell align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                                                    {row?.endDate}\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <Typography\n                                                        className={classes.status}\n                                                        style={{\n                                                            backgroundColor:\n                                                                row?.status === 'ACTIVE'\n                                                                    ? theme.palette.success.main\n                                                                    : theme.palette.warning.dark\n                                                        }}\n                                                    >\n                                                        {row?.status}\n                                                    </Typography>\n                                                </TableCell>\n                                                {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                                    <TableCell align=\"center\">\n                                                        <Tooltip title=\"View Subscription\">\n                                                            <IconButton\n                                                                onClick={() => handleprofileId(row?.userLimitedInfo?.profileId || '')}\n                                                            >\n                                                                <VisibilityIcon\n                                                                    color=\"primary\"\n                                                                    fontSize=\"small\"\n                                                                    style={{ cursor: 'pointer', fontSize: '1rem' }}\n                                                                />\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </TableCell>\n                                                )}\n                                            </StyledTableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={allSubscription?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleRowsPerPageChange}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openSubHistoryPopUp && (\n                    <SubscriptionPlanHistory\n                        data={subscriptionHistory}\n                        open={openSubHistoryPopUp}\n                        close={() => setOpenSubHistoryPopUp(false)}\n                    />\n                )}\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}