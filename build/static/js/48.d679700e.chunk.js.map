{"version":3,"sources":["../node_modules/@material-ui/icons/esm/BusinessCenter.js","views/orders/bulk-batches/index.js","store/actions/BulkActions/index.js","views/orders/styles.js"],"names":["createSvgIcon","_jsx","d","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","BulkBatches","useUserRole","roleList","classes","useStyles","history","useHistory","dispatch","useDispatch","useTheme","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_useState5","_useState6","allBulkData","useSelector","state","bulk","newData","content","useEffect","getAllBulkProcess","_Fragment","children","_jsxs","MainCard","className","titleContainer","BusinessCenter","viewIcon","pageTitle","Paper","elevation","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","totalItems","Typography","status","style","success","main","warning","dark","error","statistics","total","completed","failed","inProgress","pending","Tooltip","title","IconButton","onClick","id","push","concat","VisibilityIcon","color","fontSize","cursor","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","target","value","sx","marginBottom","getBulkError","type","GET_BULK_ERROR","getAllBulkError","GET_ALL_BULK_ERROR","bulkReturnBook","payload","http","process","then","res","setMessage","message","catch","err","console","log","bulkUpdateOrders","successCB","getBulkProcess","GET_BULK_START","GET_BULK_SUCCESS","getBulkSuccess","bulkData","arguments","length","undefined","GET_ALL_BULK_START","GET_ALL_BULK_SUCCESS","getAllBulkSuccess","makeStyles","_searchControl","titIeIcon","verticalAlign","background","primary","padding","borderRadius","select","width","height","textField","btnUpdate","boxShadow","span","paper","fontWeight","minWidth","marginTop","light","display","searchControl","marginLeft","paddingRight","paddingLeft","_defineProperty","breakpoints","down","startAdornment","grey"],"mappings":"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","file":"static/js/48.d679700e.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z\"\n}), 'BusinessCenter');","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBulkProcess } from '../../../store/actions/BulkActions';\nimport { useHistory } from 'react-router-dom';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    IconButton,\n    Typography,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    Tooltip\n} from '@material-ui/core';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { BusinessCenter } from '@material-ui/icons';\nimport useStyles from '../styles';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function BulkBatches() {\n    useUserRole({ roleList: ['ADMIN', 'SUPER_ADMIN'] });\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [value, setValue] = useState('');\n    const { allBulkData } = useSelector((state) => state?.bulk);\n    const newData = allBulkData?.content;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n    const handleViewBulk = (id) => {\n        history.push(`/admin/orders/bulk-details/${id}`);\n    };\n    useEffect(() => {\n        dispatch(getAllBulkProcess(rowsPerPage, page + 1));\n    }, [rowsPerPage, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <BusinessCenter className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Bulk Batches </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell align=\"center\"> Total Items </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"center\"> Total </TableCell>\n                                    <TableCell align=\"center\"> Completed </TableCell>\n                                    <TableCell align=\"center\"> Failed </TableCell>\n                                    <TableCell align=\"center\"> InProgress </TableCell>\n                                    <TableCell align=\"center\"> Pending </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData.map((row) => (\n                                        <StyledTableRow key={row.id}>\n                                            <TableCell align=\"center\">{row.totalItems}</TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row.status === 'COMPLETED' && theme.palette.success.main) ||\n                                                            (row.status === 'IN_PROGRESS' && theme.palette.warning.dark) ||\n                                                            (row.status === 'FAILED' && theme.palette.error.main)\n                                                    }}\n                                                >\n                                                    {row.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row.statistics.total}</TableCell>\n                                            <TableCell align=\"center\">{row.statistics.completed}</TableCell>\n                                            <TableCell align=\"center\">{row.statistics.failed}</TableCell>\n                                            <TableCell align=\"center\">{row.statistics.inProgress}</TableCell>\n                                            <TableCell align=\"center\">{row.statistics.pending}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <Tooltip title=\"Update Bulk Batches\">\n                                                    <IconButton onClick={() => handleViewBulk(row.id)}>\n                                                        <VisibilityIcon color=\"primary\" fontSize=\"small\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={allBulkData?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n","import { http } from '../../../utils/http';\nimport { setMessage } from '../MessageActions';\nimport {\n    GET_ALL_BULK_START,\n    GET_ALL_BULK_SUCCESS,\n    GET_ALL_BULK_ERROR,\n    GET_BULK_START,\n    GET_BULK_SUCCESS,\n    GET_BULK_ERROR\n} from '../../constants';\n\nconst getBulkStart = () => {\n    return { type: GET_BULK_START };\n};\nconst getBulkSuccess = (payload) => {\n    return { type: GET_BULK_SUCCESS, payload };\n};\nconst getBulkError = (error) => {\n    return { type: GET_BULK_ERROR, error };\n};\n\nconst getAllBulkStart = () => {\n    return { type: GET_ALL_BULK_START };\n};\nconst getAllBulkSuccess = (payload) => {\n    return { type: GET_ALL_BULK_SUCCESS, payload };\n};\nconst getAllBulkError = (error) => {\n    return { type: GET_ALL_BULK_ERROR, error };\n};\n\nconst bulkPlaceOrder = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'POST', 'orders-service/bulk/order', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst bulkReturnBook = (payload) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'POST', 'orders-service/bulk/book/return', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst bulkUpdateOrders = (payload, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'PUT', 'orders-service/bulk/order/status', payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getBulkProcess = (id) => (dispatch) => {\n    dispatch(getBulkStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'GET', `orders-service/bulk/${id}`, true)\n            .then((res) => {\n                const payload = {\n                    bulkData: res\n                };\n                dispatch(getBulkSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getBulkError(err));\n            });\n    } catch (error) {\n        dispatch(getBulkError('Something went wrong'));\n    }\n};\n\nconst getAllBulkProcess = (rowsPerPage = 10, page = 1) => (dispatch) => {\n    dispatch(getAllBulkStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_ORDER, 'GET', `orders-service/bulk?pageNumber=${page}&pageSize=${rowsPerPage}`, true)\n            .then((res) => {\n                const payload = {\n                    allBulkData: res\n                };\n                dispatch(getAllBulkSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getAllBulkError(err));\n            });\n    } catch (error) {\n        dispatch(getAllBulkError('Something went wrong'));\n    }\n};\n\nexport { bulkPlaceOrder, bulkUpdateOrders, getBulkProcess, getAllBulkProcess, bulkReturnBook };\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n    titIeIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n       titleContainer: {\n        background: theme.palette.primary.main,\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 20\n    },\n    select: {\n        width: '400px',\n        height: '40px'\n    },\n    textField: {\n        width: '800px'\n    },\n    btnUpdate: {\n        boxShadow: '0 0.5em 0.5em 0.1em #68c2d9'\n    },\n    span: {\n        color: theme.palette.error.main,\n    },\n   \n    pageTitle: {\n        fontSize: 16,\n        color: theme.palette.background.paper,\n        fontWeight: 'lighter'\n    },\n    viewIcon: {\n        verticalAlign: 'sub',\n        background: 'tranparent',\n        color: '#fff'\n    },\n    table: {\n        minWidth: 650\n    },\n    tableContainer: {\n        borderRadius: 15,\n        marginTop: 16\n    },\n    tableHeaderCell: {\n        fontWeight: 'lighter',\n        backgroundColor: theme.palette.primary.light,\n        color: '#ffffff'\n    },\n    status: {\n        fontWeight: 'lighter',\n        fontSize: '0.75rem',\n        color: 'white',\n        backgroundColor: 'gray',\n        borderRadius: 8,\n        padding: '3px 10px',\n        display: 'inline-block'\n    },\n    root: {\n        padding: 16,\n        width: '100%'\n    },\n    searchControl: {\n        width: '234px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    }\n}));\n"],"sourceRoot":""}