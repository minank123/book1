{"version":3,"sources":["views/subscription/admin/book-trials/index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","BookTrials","classes","useStyles","useUserRole","roleList","loggedUserProfile","useSelector","state","userProfile","dispatch","useDispatch","_useState","useTheme","useHistory","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","isOpen","title","subTitle","_useState14","confirmDialog","setConfirmDialog","allBookTrials","subscriptions","newData","content","useEffect","getAllBookTrials","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","Grid","container","spacing","style","display","justifyContent","item","xs","sm","md","OutlinedInput","searchControl","id","onChange","e","_e$target","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","role","TableBody","map","row","index","name","age","contact","comment","Tooltip","IconButton","onClick","onConfirm","console","log","deleteBookTrials","deleted","_objectSpread","DeleteForeverIcon","color","cursor","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog"],"mappings":"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","file":"static/js/102.3ba71f34.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteBookTrials, getAllBookTrials } from '../../../../store/actions/SubscriptionActions';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    Button,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Typography,\n    Tooltip,\n    CircularProgress,\n    Box,\n    Checkbox\n} from '@material-ui/core';\nimport { IconSearch } from '@tabler/icons';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport AddIcon from '@material-ui/icons/Add';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from '../../../ViewTableStyles';\nimport useUserRole from '../../../../hooks/useUserRole';\nimport { Alert, Snackbar, useMediaQuery } from '@mui/material';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function BookTrials() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN', 'SUPER_ADMIN'] });\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const history = useHistory();\n    const [value, setValue] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [dowmloadFail, setDownloadFail] = useState(false);\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n    const { allBookTrials } = useSelector((state) => state?.subscriptions);\n    const newData = allBookTrials?.content;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n    const handleDeleteBookTrial = (id) => {\n        console.log('id===', id);\n        const payload = {\n            deleted: true\n        };\n        dispatch(\n            deleteBookTrials(payload, id, () => {\n                dispatch(getAllBookTrials(value ? value : '', page + 1, rowsPerPage));\n            })\n        );\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n    };\n\n    useEffect(() => {\n        dispatch(getAllBookTrials(value ? value : '', page + 1, rowsPerPage));\n    }, [rowsPerPage, page, value]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Book Trials </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <div>\n                                <OutlinedInput\n                                    className={classes.searchControl}\n                                    id=\"input-search-header\"\n                                    value={value}\n                                    onChange={(e) => {\n                                        setValue(e?.target?.value);\n                                        setPage(0);\n                                    }}\n                                    placeholder=\"Search\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Name </TableCell>\n                                    <TableCell> Age </TableCell>\n                                    <TableCell align=\"center\"> Contact </TableCell>\n                                    <TableCell align=\"center\"> Comment </TableCell>\n                                    {loggedUserProfile?.role === 'SUPER_ADMIN' && <TableCell align=\"center\"> Action </TableCell>}\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => {\n                                        return (\n                                            <StyledTableRow key={row?.id}>\n                                                <TableCell>{row?.name}</TableCell>\n                                                <TableCell>{row?.age}</TableCell>\n                                                <TableCell align=\"center\">{row?.contact}</TableCell>\n                                                <TableCell align=\"center\">{row?.comment}</TableCell>\n                                                {loggedUserProfile?.role === 'SUPER_ADMIN' && (\n                                                    <TableCell align=\"center\">\n                                                        <Tooltip title=\"Delete Book trial\">\n                                                            <IconButton\n                                                                onClick={() => {\n                                                                    setConfirmDialog({\n                                                                        isOpen: true,\n                                                                        title: 'Delete Book trial',\n                                                                        subTitle: 'Are you sure you want to delete ?',\n                                                                        onConfirm: () => {\n                                                                            handleDeleteBookTrial(row?.id);\n                                                                        }\n                                                                    });\n                                                                }}\n                                                            >\n                                                                <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </TableCell>\n                                                )}\n                                            </StyledTableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={allBookTrials?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}