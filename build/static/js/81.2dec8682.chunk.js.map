{"version":3,"sources":["../node_modules/@material-ui/icons/Work.js","../node_modules/@material-ui/system/esm/Box/Box.js","views/students/orders/order-book-history/index.js","views/students/orders/view-order/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","Box","createBox","BookOrderHistory","props","isOpen","setOpen","bookOrderId","classes","useStyles","dispatch","useDispatch","theme","useTheme","bookOrderHistory","useSelector","state","order","handlePopupClose","useEffect","getBookOrderHistory","_jsx","children","_jsxs","Dialog","open","maxWidth","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","to","onClick","CloseIcon","closeIcon","DialogContent","Grid","container","map","data","item","xs","Paper","elevation","padding","borderRadius","margin","display","alignItems","variant","fontWeight","id","status","color","orderBookStatus","palette","warning","dark","error","success","statusDate","Divider","marginTop","DialogActions","dialogAction","Button","buttonCancel","StyledTableRow","withStyles","root","backgroundColor","action","hover","TableRow","OrderDetails","useUserRole","roleList","_useState","useState","_useState2","_slicedToArray","openHistoryPopup","setOpenHistoryPopup","_useState3","_useState4","setBookOrderId","useParams","orderData","newData","books","getOrder","_Fragment","Header","Container","titleContainer","WorkIcon","viewIcon","pageTitle","rowSpacing","spacing","sm","verticalAlign","profileId","deliveryDate","totalBooks","returnedBooks","dueBooks","Moment","format","date","createdAt","updatedAt","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","row","index","_row$bookDetail","_row$bookDetail2","_row$bookDetail3","bookDetail","title","isbn","author","dueDate","Tooltip","IconButton","bookId","HistoryIcon","cursor","textAlign","FooterNew"],"mappings":"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","file":"static/js/81.2dec8682.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z\"\n}), 'Work');\n\nexports.default = _default;","import createBox from '../createBox';\nconst Box = createBox();\nexport default Box;","import React, { useEffect } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '../../../DialogStyles';\nimport { getBookOrderHistory } from '../../../../store/actions/OrderActions';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider, Paper } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { useTheme } from '@material-ui/styles';\n\nexport default function BookOrderHistory(props) {\n    const { isOpen, setOpen, bookOrderId } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const { bookOrderHistory } = useSelector((state) => state?.order);\n\n    const handlePopupClose = () => {\n        setOpen(false);\n    };\n    useEffect(() => {\n        dispatch(getBookOrderHistory(bookOrderId));\n    }, []);\n\n    return (\n        <div>\n            <Dialog open={isOpen} maxWidth=\"lg\">\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>Book Order History</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <Grid container>\n                        {bookOrderHistory?.map((data) => (\n                            <Grid item xs={12}>\n                                <Paper elevation={3} style={{ padding: 10, borderRadius: 8, margin: 10 }}>\n                                    <Box display=\"flex\" alignItems=\"center\">\n                                        <Typography variant=\"body1\">Id :</Typography>\n                                        &nbsp;\n                                        <Typography variant=\"subtitle1\" fontWeight=\"lighter\">\n                                            {data.id}\n                                        </Typography>\n                                    </Box>\n                                    <Box display=\"flex\" alignItems=\"center\">\n                                        <Typography variant=\"body1\">Order Book Status :</Typography>\n                                        &nbsp;\n                                        <Typography\n                                            className={classes.status}\n                                            style={{\n                                                fontWeight: 'lighter',\n                                                color:\n                                                    (data?.orderBookStatus === 'NEW' && theme.palette.warning.dark) ||\n                                                    (data?.orderBookStatus === 'CANCELLED' && theme.palette.error.dark) ||\n                                                    (data?.orderBookStatus === 'DELIVERED' && theme.palette.success.dark)\n                                            }}\n                                        >\n                                            {data?.orderBookStatus}\n                                        </Typography>\n                                    </Box>\n                                    <Box display=\"flex\" alignItems=\"center\">\n                                        <Typography variant=\"body1\">Status Date :</Typography>\n                                        &nbsp;\n                                        <Typography variant=\"subtitle1\" fontWeight=\"lighter\">\n                                            {data.statusDate}\n                                        </Typography>\n                                    </Box>\n                                </Paper>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </DialogContent>\n                <Divider style={{ marginTop: 15 }} />\n                <DialogActions className={classes.dialogAction}>\n                    <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\nimport FooterNew from '../../../home/components/FooterNew';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Grid,\n    Paper,\n    Divider,\n    Typography,\n    TableContainer,\n    Table,\n    TableHead,\n    TableCell,\n    TableRow,\n    IconButton,\n    TableBody,\n    Tooltip,\n    Container\n} from '@material-ui/core';\nimport WorkIcon from '@material-ui/icons/Work';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport useStyles from '../../../ViewTableStyles';\nimport { getOrder } from '../../../../store/actions/OrderActions';\nimport { useParams } from 'react-router-dom';\nimport HistoryIcon from '@material-ui/icons/History';\nimport BookOrderHistory from '../order-book-history';\nimport Header from '../../../home/components/header';\nimport useUserRole from '../../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function OrderDetails() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['STUDENT'] });\n    const dispatch = useDispatch();\n    const [openHistoryPopup, setOpenHistoryPopup] = useState(false);\n    const [bookOrderId, setBookOrderId] = useState(null);\n    const theme = useTheme();\n    const { id } = useParams();\n    const { orderData } = useSelector((state) => state?.order);\n    const newData = orderData?.books;\n\n    const handleReturnBook = (bookId) => {\n        setOpenHistoryPopup(true);\n        setBookOrderId(bookId);\n    };\n    useEffect(() => {\n        dispatch(getOrder(id));\n    }, []);\n\n    return (\n        <>\n            <Header />\n            <Container maxWidth=\"lg\">\n                <Paper style={{ padding: 20, margin: 30 }} elevation={3}>\n                    <div className={classes.titleContainer}>\n                        <WorkIcon className={classes.viewIcon} />\n                        <span className={classes.pageTitle}>&nbsp;Order Details</span>\n                    </div>\n                    <Divider style={{ margin: '30px 0px' }} />\n                    <Paper>\n                        <Grid container rowSpacing={4} style={{ padding: 10 }}>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Profile Id</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.profileId}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Order Id</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.id}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}> Delivery Date </label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.deliveryDate}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Total Books</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.totalBooks}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Returned Books</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.returnedBooks}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Due Books</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.dueBooks}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Status</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>{orderData?.status}</div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Created At</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>\n                                        <Moment format=\"YYYY/MM/DD hh:mm a\" date={orderData?.createdAt} />\n                                    </div>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <label style={{ verticalAlign: 'sub' }}>Updated At</label>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <div className={classes.value}>\n                                        <Moment format=\"YYYY/MM/DD hh:mm a\" date={orderData?.updatedAt} />\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    <Divider style={{ margin: '30px 0px' }} />\n                    <Grid container rowSpacing={4} style={{ padding: 10 }}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h4\"> Book Details </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableHead className={classes.tableHeaderCell}>\n                                        <StyledTableRow>\n                                            <TableCell> Book Name </TableCell>\n                                            <TableCell> ISBN No </TableCell>\n                                            <TableCell> Author</TableCell>\n                                            <TableCell align=\"center\"> Due Date</TableCell>\n                                            <TableCell align=\"center\"> Status </TableCell>\n                                            <TableCell align=\"right\"> Actions </TableCell>\n                                        </StyledTableRow>\n                                    </TableHead>\n                                    {!newData ? (\n                                        <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                                    ) : (\n                                        <TableBody>\n                                            {newData.map((row, index) => (\n                                                <StyledTableRow key={index}>\n                                                    <TableCell>{row?.bookDetail?.title}</TableCell>\n                                                    <TableCell>{row?.bookDetail?.isbn}</TableCell>\n                                                    <TableCell>{row?.bookDetail?.author}</TableCell>\n                                                    <TableCell align=\"center\">{row?.dueDate}</TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography\n                                                            className={classes.status}\n                                                            style={{\n                                                                backgroundColor:\n                                                                    (row?.status === 'NEW' && theme.palette.warning.dark) ||\n                                                                    (row?.status === 'CANCELLED' && theme.palette.error.dark) ||\n                                                                    (row?.status === 'DELIVERED' && theme.palette.success.dark)\n                                                            }}\n                                                        >\n                                                            {row?.status}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <Tooltip title=\"Book Order History\" aria-label=\"Return Book\">\n                                                            <IconButton onClick={() => handleReturnBook(row?.id)}>\n                                                                <HistoryIcon color=\"success\" style={{ cursor: 'pointer' }} />\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </TableCell>\n                                                </StyledTableRow>\n                                            ))}\n                                        </TableBody>\n                                    )}\n                                </Table>\n                            </TableContainer>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                {openHistoryPopup && <BookOrderHistory isOpen={openHistoryPopup} setOpen={setOpenHistoryPopup} bookOrderId={bookOrderId} />}\n            </Container>\n            <FooterNew />\n        </>\n    );\n}\n"],"sourceRoot":""}