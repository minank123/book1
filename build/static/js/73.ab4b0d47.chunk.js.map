{"version":3,"sources":["views/admin/wishlist/index.js","../node_modules/@material-ui/icons/Favorite.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllWishlists","_getAllWishlistData$c","classes","useStyles","useUserRole","roleList","dispatch","useDispatch","useTheme","history","useHistory","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","value","setValue","_useState5","_useState6","rowsPerPage","setRowsPerPage","getAllWishlistData","useSelector","state","wishlist","useEffect","getAllWishlist","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","FavoriteIcon","viewIcon","pageTitle","Paper","elevation","style","display","justifyContent","OutlinedInput","searchControl","id","placeholder","onChange","e","target","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","content","TableBody","map","row","firstName","lastName","email","totalBooks","Typography","status","success","main","warning","dark","Tooltip","title","IconButton","cursor","onClick","profileId","push","concat","VisibilityIcon","color","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","sx","marginBottom","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/73.ab4b0d47.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllWishlist } from '../../../store/actions/WishlistActions';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { useHistory } from 'react-router-dom';\nimport {\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Typography,\n    Tooltip\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { IconSearch } from '@tabler/icons';\nimport useStyles from '../../ViewTableStyles';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllWishlists() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const history = useHistory();\n    const [page, setPage] = useState(0);\n    const [value, setValue] = useState('');\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const { getAllWishlistData } = useSelector((state) => state?.wishlist);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        //setPage(0);\n    };\n\n    const handleWishlist = (id) => {\n        history.push(`/admin/wishlist/${id}`);\n    };\n\n    useEffect(() => {\n        dispatch(getAllWishlist(value ? value : '', page + 1, rowsPerPage));\n    }, [value, page, rowsPerPage]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <FavoriteIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; All Wishlist </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <OutlinedInput\n                            className={classes.searchControl}\n                            id=\"input-search-header\"\n                            placeholder=\"Search\"\n                            onChange={(e) => setValue(e.target.value)}\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                </InputAdornment>\n                            }\n                        />\n                    </div>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> First Name </TableCell>\n                                    <TableCell> Last Name </TableCell>\n                                    <TableCell> Email </TableCell>\n                                    <TableCell align=\"center\"> Total Quantity </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!getAllWishlistData?.content ? (\n                                <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                            ) : (\n                                <TableBody>\n                                    {getAllWishlistData?.content?.map((row) => (\n                                        <StyledTableRow key={row?.profileId}>\n                                            <TableCell> {row?.firstName} </TableCell>\n                                            <TableCell> {row?.lastName} </TableCell>\n                                            <TableCell> {row?.email} </TableCell>\n                                            <TableCell align=\"center\"> {row?.totalBooks} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n\n                                            <TableCell align=\"right\">\n                                                <Tooltip title=\"View Wishlist\">\n                                                    <IconButton\n                                                        style={{ cursor: 'pointer' }}\n                                                        onClick={() => handleWishlist(row?.profileId)}\n                                                    >\n                                                        <VisibilityIcon color=\"primary\" />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={getAllWishlistData?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;"],"sourceRoot":""}