{"version":3,"sources":["views/online-classes/assignments/assignment-documents/index.js","views/online-classes/assignments/view-assignment/index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AssignmentDocuments","props","_docData$slice","id","docData","classes","useStyles","useUserRole","roleList","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_useState5","_useState6","isSearch","setSearch","_useState7","_useState8","file","setFile","_useState9","isOpen","title","subTitle","_useState10","confirmDialog","setConfirmDialog","handleDeleteDocument","useSelector","state","course","allDocuments","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","link","wrap","_context","prev","next","_objectSpread","deleteDocument","documentLink","getAllDocument","getAssignment","stop","_x","apply","arguments","PDFUpload","_ref2","_callee2","formData","_context2","FormData","append","pdfUpload","setMessage","then","res","catch","error","console","log","_x2","_jsxs","_Fragment","children","className","titleContainer","_jsx","SchoolIcon","viewIcon","pageTitle","Paper","elevation","style","display","justifyContent","OutlinedInput","searchControl","placeholder","onChange","event","target","value","handleSearch","startAdornment","InputAdornment","position","IconSearch","stroke","size","accept","multiple","type","files","required","Button","variant","color","component","boxShadow","onClick","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","slice","map","row","documentName","href","download","IconButton","onConfirm","DeleteForeverIcon","cursor","textAlign","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog","ViewAssignment","useParams","getAssignmentData","newData","documentObjects","useEffect","padding","Divider","margin","Grid","container","rowSpacing","item","spacing","xs","sm","verticalAlign","name","disabled","fullWidth","description","endDate","status"],"mappings":"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","file":"static/js/92.c7b6956e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllDocument, deleteDocument, getAssignment } from '../../../../store/actions/CourseActions';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Typography\n} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SchoolIcon from '@material-ui/icons/School';\nimport { IconSearch } from '@tabler/icons';\nimport useStyles from '../../../ViewTableStyles';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport { pdfUpload } from '../../../../services/ProfileUpload';\nimport { setMessage } from '../../../../store/actions/MessageActions';\nimport useUserRole from '../../../../hooks/useUserRole';\nimport { useHistory } from 'react-router';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nconst AssignmentDocuments = (props) => {\n    const { id, docData } = props;\n\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'TEACHER','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [isSearch, setSearch] = useState('');\n    const [file, setFile] = useState(null);\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n\n    const { allDocuments } = useSelector((state) => state?.course);\n\n    const handleDeleteDocument = async (link) => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n        dispatch(\n            deleteDocument(id, link?.documentLink, () => {\n                dispatch(getAllDocument(props.id));\n                dispatch(getAssignment(props.id));\n            })\n        );\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleSearch = (event) => {\n        setSearch(event.target.value);\n    };\n\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const PDFUpload = async (id) => {\n        const formData = new FormData();\n        formData.append('document', file);\n        await pdfUpload(id, formData, dispatch, setMessage)\n            .then((res) => {\n                //history.push(`/admin/assignment/${id}/submission`);\n                //dispatch(getAllDocument(props.id));\n                dispatch(getAssignment(props.id, isSearch ? isSearch : ''[isSearch]));\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    const handlePDF = (event) => {\n        PDFUpload(id, dispatch, setMessage);\n    };\n\n    return (\n        <>\n            <div className={classes.titleContainer}>\n                <SchoolIcon className={classes.viewIcon} />\n                <span className={classes.pageTitle}>&nbsp; Assignment Documents Admin </span>\n            </div>\n            <Paper elevation={5} className={classes.root}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <OutlinedInput\n                        className={classes.searchControl}\n                        id=\"input-search-header\"\n                        placeholder=\"Search\"\n                        onChange={(event) => handleSearch(event)}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                            </InputAdornment>\n                        }\n                    />\n\n                    <input\n                        accept=\".pdf \"\n                        //style={{ display: 'none' }}\n                        id=\"contained-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={handleFileChange}\n                        required\n                    />\n\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        component=\"span\"\n                        style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9' }}\n                        onClick={handlePDF}\n                    >\n                        Upload\n                    </Button>\n                </div>\n\n                <TableContainer className={classes.tableContainer}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead className={classes.tableHeaderCell}>\n                            <StyledTableRow>\n                                <TableCell> Document Name </TableCell>\n                                <TableCell> Document Link </TableCell>\n                                {/* <TableCell> Created At </TableCell> */}\n                                <TableCell align=\"right\"> Action </TableCell>\n                            </StyledTableRow>\n                        </TableHead>\n                        {!docData ? (\n                            <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                        ) : (\n                            <TableBody>\n                                {docData &&\n                                    docData?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)?.map((row) => (\n                                        <StyledTableRow>\n                                            <TableCell> {row?.documentName} </TableCell>\n                                            <TableCell>\n                                                <a href={row?.documentLink} target=\"_blank\" download>\n                                                    {row?.documentLink}\n                                                </a>\n                                            </TableCell>\n                                            {/* <TableCell>\n                                                <Typography>\n                                                    <Moment format=\"YYYY/MM/DD hh:mm a\" date={row?.createdAt} />\n                                                </Typography>\n                                            </TableCell> */}\n                                            <TableCell align=\"right\">\n                                                <IconButton\n                                                    onClick={() => {\n                                                        setConfirmDialog({\n                                                            isOpen: true,\n                                                            title: 'Delete Document',\n                                                            subTitle: 'Are you sure you want to delete this document.',\n                                                            onConfirm: () => {\n                                                                handleDeleteDocument(row);\n                                                            }\n                                                        });\n                                                    }}\n                                                >\n                                                    <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                                </IconButton>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                            </TableBody>\n                        )}\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 15, 25]}\n                    component=\"div\"\n                    count={docData?.length || 0}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                    sx={{\n                        '.MuiTablePagination-displayedRows': {\n                            marginBottom: 0\n                        },\n                        '.MuiTablePagination-selectLabel': {\n                            marginBottom: 0\n                        }\n                    }}\n                />\n            </Paper>\n\n            {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n        </>\n    );\n};\n\nexport default AssignmentDocuments;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, Paper, Divider, OutlinedInput } from '@material-ui/core';\nimport SchoolIcon from '@material-ui/icons/School';\nimport useStyles from '../../../ViewTableStyles';\nimport { getAllDocument, getAssignment } from '../../../../store/actions/CourseActions';\nimport { useParams } from 'react-router-dom';\nimport AssignmentDocuments from '../assignment-documents';\nimport useUserRole from '../../../../hooks/useUserRole';\n\nexport default function ViewAssignment() {\n    useUserRole({ roleList: ['ADMIN', 'TEACHER','SUPER_ADMIN'] });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const { getAssignmentData } = useSelector((state) => state?.course);\n    const newData = getAssignmentData;\n    const docData = getAssignmentData?.documentObjects;\n\n    useEffect(() => {\n        dispatch(getAssignment(id));\n    }, []);\n\n    return (\n        <>\n            <Paper style={{ padding: 20 }}>\n                <div className={classes.titleContainer}>\n                    <SchoolIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Assignment Details </span>\n                </div>\n                <Divider style={{ margin: '30px 0px' }} />\n                <Grid container rowSpacing={4}>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={2}>\n                            <label style={{ verticalAlign: 'sub' }}> Title </label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"title\" disabled value={newData?.title} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={2}>\n                            <label style={{ verticalAlign: 'sub' }}> Description </label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"description\" disabled value={newData?.description} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={2}>\n                            <label style={{ verticalAlign: 'sub' }}> Deadline </label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"endDate\" disabled value={newData?.endDate} fullWidth />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item container spacing={2}>\n                        <Grid item xs={12} sm={2}>\n                            <label style={{ verticalAlign: 'sub' }}> Status </label>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <OutlinedInput name=\"status\" disabled value={newData?.status} fullWidth />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Divider style={{ margin: '30px 0px' }} />\n                <AssignmentDocuments id={id} docData={docData} />\n            </Paper>\n        </>\n    );\n}\n"],"sourceRoot":""}