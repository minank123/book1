{"version":3,"sources":["views/subscription/admin/plans/add-Update-plan/index.js","views/subscription/admin/plans/index.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/Checkbox/checkboxClasses.js","../node_modules/@material-ui/core/Checkbox/Checkbox.js"],"names":["frequencyData","id","status","typeData","STATUS_ITEMS","validationSchema","yup","name","required","trim","frequency","booksCount","registrationFee","securityFee","type","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","AddUpdatePlans","props","isOpen","setOpen","isEditData","classes","useStyles","dispatch","useDispatch","_useSelector","useSelector","state","school","schoolList","_useState","loading","userProfile","loggedUserProfile","useState","_useState2","_slicedToArray","setSelectedSchools","_useState3","_useState4","finalArray","setFinalArray","initialValues","schoolIds","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","hide","watch","handlePopupClose","useEffect","getSchoolList","_jsx","children","_jsxs","Dialog","open","onClose","paper","dialog","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","onSubmit","data","payload","updatePlan","getAllPlan","addPlan","PerfectScrollbar","ScrollHeight","DialogContent","Grid","container","item","xs","mandatory","RHFTextField","autoFocus","RHFSelect","label","disabled","value","map","index","FormControl","sx","m","Select","multiple","arr","tempArr","forEach","element","filterData","filter","el","length","push","nameBranch","getSchoolName","input","Input","getSelectedItems","items","renderValue","selected","join","MenuItem","Checkbox","checked","includes","onChange","filterArr","itm","concat","_toConsumableArray","handleChange","handleAddChange","ListItemText","primary","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","buttonSubmit","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","Plans","useUserRole","roleList","useTheme","history","useHistory","setValue","openAddDeliveryPlans","setOpenAddDeliveryPlans","_useState5","_useState6","page","setPage","_useState7","_useState8","rowsPerPage","setRowsPerPage","_useState9","_useState10","isPlanUpdateData","setPlanUpdateData","getAllPlans","subscriptions","newData","content","_useState11","title","subTitle","_useState12","confirmDialog","setConfirmDialog","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","spacing","display","justifyContent","sm","md","OutlinedInput","searchControl","e","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","btn","role","btnAddDeliveryPlan","AddIcon","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","row","success","main","warning","dark","Tooltip","IconButton","VisibilityIcon","cursor","EditIcon","onConfirm","_objectSpread","handleDeletePlans","DeleteForeverIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","marginBottom","ConfirmDialog","createSvgIcon","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","indeterminate","capitalize","_ref","_ref2","_extends","text","secondary","disableRipple","alpha","active","hoverOpacity","_defineProperty","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses"],"mappings":"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","file":"static/js/85.0cef8664.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '../../../../DialogStyles';\nimport { addPlan, updatePlan, getAllPlan } from '../../../../../store/actions/SubscriptionActions';\nimport { getSchoolList } from '../../../../../store/actions/SchoolActions';\nimport { FormProvider, RHFTextField, RHFSelect, RHFMultiCheckbox } from '../../../../../components/hook-form';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Typography,\n    Grid,\n    Link,\n    Divider,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    ListItemIcon,\n    Checkbox,\n    ListItemText,\n    Input\n} from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { type } from 'jquery';\n\nconst frequencyData = [\n    { id: 0, status: 'WEEKLY' },\n    { id: 1, status: 'MONTHLY' },\n    { id: 2, status: 'FORTNIGHTLY' }\n];\n\nconst typeData = [\n    { id: 0, status: 'HOME' },\n    { id: 1, status: 'SCHOOL' }\n];\n\nconst STATUS_ITEMS = [\n    { id: 0, status: 'ACTIVE' },\n    { id: 1, status: 'INACTIVE' }\n];\n\nconst validationSchema = yup.object({\n    name: yup.string().required('Name is required').trim(),\n    frequency: yup.string().required('Frequency is required'),\n    booksCount: yup.string().required('Books Count is required'),\n    registrationFee: yup.string().required('Registration Fee is required'),\n    securityFee: yup.string().required('Security Fee is required'),\n    type: yup.string().required('Type is required')\n});\n\nexport const FILTER_GENDER_OPTIONS = ['Men', 'Women', 'Kids'];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n        }\n    }\n};\n\nexport default function AddUpdatePlans(props) {\n    const { isOpen, setOpen, isEditData } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    \n    const { schoolList, loading } = useSelector((state) => state?.school);\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const [selectedSchools, setSelectedSchools] = useState([]);\n    const [finalArray, setFinalArray] = useState([]);\n\n    const handleChange = (name) => {\n        if (finalArray?.includes(name)) {\n            let filterArr = finalArray?.filter((itm) => itm !== name);\n            setFinalArray(filterArr);\n        } else {\n            setFinalArray([...finalArray, name]);\n        }\n    };\n\n    const handleAddChange = (name) => {\n        if (finalArray?.includes(name)) {\n            let filterArr = finalArray?.filter((itm) => itm !== name);\n            setFinalArray(filterArr);\n        } else {\n            setFinalArray([...finalArray, name]);\n        }\n    };\n\n    const getSelectedSchoolsForAdd = (items) => {\n        setSelectedSchools(items);\n    };\n\n    const initialValues = {\n        name: isEditData?.name || '',\n        frequency: isEditData?.frequency || '',\n        booksCount: isEditData?.booksCount || '',\n        registrationFee: isEditData?.registrationFee || '',\n        securityFee: isEditData?.securityFee || '',\n        type: isEditData?.type || '',\n        schoolIds: isEditData?.schoolIds || '',\n        status: isEditData?.status || 'ACTIVE'\n    };\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n    const { reset, handleSubmit, watch } = methods;\n\n    const hide = watch('type');\n\n    const handlePopupClose = () => {\n        setOpen(false);\n        reset();\n    };\n    const message = 'Plan Update Successfully';\n    const onSubmit = (data) => {\n        const payload = {\n            name: data?.name,\n            frequency: data?.frequency,\n            booksCount: data?.booksCount,\n            registrationFee: data?.registrationFee,\n            securityFee: data?.securityFee,\n            type: data?.type,\n            schoolIds: finalArray,\n            status: data?.status\n        };\n\n        if (isEditData) {\n            dispatch(\n                updatePlan(payload, isEditData.id, message, () => {\n                    dispatch(getAllPlan());\n                    handlePopupClose();\n                })\n            );\n        } else {\n            dispatch(\n                addPlan(payload, () => {\n                    dispatch(getAllPlan());\n                    handlePopupClose();\n                })\n            );\n        }\n    };\n\n    useEffect(() => {\n        dispatch(getSchoolList());\n    }, []);\n\n    useEffect(() => {\n        if (isEditData) {\n            setFinalArray(isEditData?.schoolIds);\n        }\n    }, []);\n\n    const getSchoolName = (arr) => {\n        let tempArr = [];\n        arr?.forEach((element) => {\n            //tempArr.push(schoolList[element].nameBranch);\n            let filterData = schoolList?.filter((el) => el.id === element);\n            if (filterData?.length > 0) {\n                tempArr.push(filterData[0].nameBranch);\n            }\n        });\n        return tempArr;\n    };\n\n    return (\n        <div>\n            <Dialog open={isOpen} onClose={handlePopupClose} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add Plan' : 'Update Plan'}</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <PerfectScrollbar className={classes.ScrollHeight}>\n                        <DialogContent>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <label>\n                                        Name <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFTextField name=\"name\" autoFocus />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <label>\n                                        Frequency <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFSelect name=\"frequency\" label=\"\" disabled={isEditData && true}>\n                                        <option value=\"\"> Select Frequency </option>\n                                        {frequencyData?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <label>\n                                        Book Count <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFTextField name=\"booksCount\" type=\"number\" />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <label>\n                                        Registration Fee<h1></h1> <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFTextField name=\"registrationFee\" type=\"number\" />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <label>\n                                        Security Fee <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFTextField name=\"securityFee\" type=\"number\" />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <label>\n                                        Type <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFSelect name=\"type\" label=\"\">\n                                        <option value=\"\"> Select Type </option>\n                                        {typeData?.map((item, index) => (\n                                           \n                                            <option key={item.id} value={item?.status}\n                                            \n                                            >\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n\n                                {hide === 'SCHOOL' && (\n                                    <Grid item xs={12}>\n                                        <FormControl sx={{ m: 1, width: '100%' }}>\n                                            <label>\n                                                Select Schools <span className={classes.mandatory}>*</span>\n                                            </label>\n                                            <Select\n                                                name=\"schoolIds\"\n                                                multiple={true}\n                                                value={getSchoolName(finalArray)}\n                                                input={<Input />}\n                                                getSelectedItems={getSelectedSchoolsForAdd}\n                                                renderValue={(selected) => selected.join(', ')}\n                                                MenuProps={MenuProps}\n                                                // style={{ width: '150%' }}\n                                            >\n                                                {schoolList?.map((name) => (\n                                                    <MenuItem key={name} value={name.nameBranch}>\n                                                        <Checkbox\n                                                            type=\"checkbox\"\n                                                            checked={finalArray?.includes(name.id)}\n                                                            onChange={() => (isEditData ? handleChange(name.id) : handleAddChange(name.id))}\n                                                        />\n\n                                                        <ListItemText primary={name.nameBranch} />\n                                                    </MenuItem>\n                                                ))}\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                )}\n                                <Grid item xs={12}>\n                                    <label>\n                                        Status <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEMS?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                            </Grid>\n                        </DialogContent>\n                    </PerfectScrollbar>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPlan, updatePlan } from '../../../../store/actions/SubscriptionActions';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Typography,\n    Tooltip\n} from '@material-ui/core';\nimport { IconSearch } from '@tabler/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport AddUpdatePlans from './add-Update-plan';\nimport AddIcon from '@material-ui/icons/Add';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from '../../../ViewTableStyles';\nimport useUserRole from '../../../../hooks/useUserRole';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function Plans() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN', 'SUPER_ADMIN'] });\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const history = useHistory();\n    const [value, setValue] = useState('');\n    const [openAddDeliveryPlans, setOpenAddDeliveryPlans] = useState(false);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [isPlanUpdateData, setPlanUpdateData] = useState(null);\n    const { getAllPlans } = useSelector((state) => state?.subscriptions);\n    const newData = getAllPlans?.content;\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        //setPage(0);\n    };\n\n    const handleViewPlans = (id) => {\n        history.push(`plans/${id}`);\n    };\n    const handlePlans = (data) => {\n        setOpenAddDeliveryPlans(true);\n        setPlanUpdateData(data);\n    };\n    // const schoolIds = [];\n    const message = 'Plan Deleted Successfully';\n    const handleDeletePlans = (id, data) => {\n        // schoolIds.push(data?.schoolIds);\n        const payload = {\n            name: data?.name,\n            frequency: data?.frequency,\n            booksCount: data?.booksCount,\n            registrationFee: data?.registrationFee,\n            securityFee: data?.securityFee,\n            type: data?.type,\n            schoolIds: data?.schoolIds,\n            status: 'INACTIVE'\n        };\n        dispatch(\n            updatePlan(payload, id, message, () => {\n                dispatch(getAllPlan(rowsPerPage, value ? value : '', page + 1));\n            })\n        );\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n    };\n\n    useEffect(() => {\n        dispatch(getAllPlan(rowsPerPage, value ? value : '', page + 1));\n    }, [rowsPerPage, value, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; All Plans </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <div>\n                                <OutlinedInput\n                                    className={classes.searchControl}\n                                    id=\"input-search-header\"\n                                    value={value}\n                                    onChange={(e) => setValue(e.target.value)}\n                                    placeholder=\"Search\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <div className={classes.btn}>\n                                {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                            setOpenAddDeliveryPlans(true);\n                                            setPlanUpdateData(null);\n                                        }}\n                                        className={classes.btnAddDeliveryPlan}\n                                    >\n                                        <AddIcon /> Plan\n                                    </Button>\n                                )}\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Name </TableCell>\n                                    <TableCell> Frequency </TableCell>\n                                    <TableCell align=\"center\"> Book Count </TableCell>\n                                    <TableCell align=\"center\"> Registration Fee</TableCell>\n                                    <TableCell align=\"center\"> Security Fee</TableCell>\n                                    <TableCell align=\"center\"> Type</TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}> Sorry! No data available </caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row) => (\n                                        <StyledTableRow key={row.id}>\n                                            <TableCell> {row?.name} </TableCell>\n                                            <TableCell> {row?.frequency} </TableCell>\n                                            <TableCell align=\"center\"> {row?.booksCount} </TableCell>\n                                            <TableCell align=\"center\"> {row?.registrationFee} </TableCell>\n                                            <TableCell align=\"center\"> {row?.securityFee} </TableCell>\n                                            <TableCell align=\"center\"> {row?.type} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Tooltip title=\"View Plan Options\">\n                                                    <IconButton onClick={() => handleViewPlans(row.id)}>\n                                                        <VisibilityIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                                    <Tooltip title=\"Update Plan\">\n                                                        <IconButton onClick={() => handlePlans(row)}>\n                                                            <EditIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                )}\n                                                {loggedUserProfile?.role === 'SUPER_ADMIN' && (\n                                                    <Tooltip title=\"Delete Plan\">\n                                                        <IconButton\n                                                            onClick={() => {\n                                                                setConfirmDialog({\n                                                                    isOpen: true,\n                                                                    title: 'Delete Plan',\n                                                                    subTitle: 'Are you sure you want to delete ?',\n                                                                    onConfirm: () => {\n                                                                        handleDeletePlans(row.id, row);\n                                                                    }\n                                                                });\n                                                            }}\n                                                        >\n                                                            <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                )}\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={getAllPlans?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openAddDeliveryPlans && (\n                    <AddUpdatePlans isOpen={openAddDeliveryPlans} setOpen={setOpenAddDeliveryPlans} isEditData={isPlanUpdateData} />\n                )}\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'succes', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"sourceRoot":""}