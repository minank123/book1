{"version":3,"sources":["views/orders/delivery-plan/index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","DeliveryPlan","_allDeliveryPlan$cont","_allDeliveryPlan$cont2","history","useHistory","classes","useStyles","useUserRole","roleList","useSelector","state","userProfile","loggedUserProfile","useTheme","id","useParams","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","_useSelector2","deliveryPlan","allDeliveryPlan","loading","_useState9","_useState10","pid","Cookies","get","useEffect","getAllDeliveryPlan","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","colSpan","CircularProgress","content","length","map","row","profileId","fullName","Tooltip","title","email","Typography","concat","substring","Moment","format","date","deliveryDate","day","booksAllowed","bookTitles","orderId","status","style","warning","main","success","dark","error","IconButton","onClick","push","handleDeliveryOrder","EditIcon","color","cursor","variant","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","target","value","sx","marginBottom"],"mappings":"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","file":"static/js/97.f7488940.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllDeliveryPlan } from '../../../store/actions/DeliveryPlanActions';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport {\n  Grid,\n  IconButton,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TablePagination,\n  OutlinedInput,\n  InputAdornment,\n  Typography,\n  Tooltip,\n  CircularProgress\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport useStyles from '../../ViewTableStyles';\nimport { useParams } from 'react-router-dom';\nimport useUserRole from '../../../hooks/useUserRole';\nimport { useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(even)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nexport default function DeliveryPlan() {\n  const history = useHistory();\n  const classes = useStyles();\n  useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n  const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n  const theme = useTheme();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [openAddPlanOptions, setOpenAddPlanOptions] = useState(false);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [planOptionsId, setPlanOptionsId] = useState(null);\n  const { allDeliveryPlan, loading } = useSelector((state) => state?.deliveryPlan);\n  const [isSearch, setSearch] = useState('');\n\n  const pid = Cookies.get('profileId');\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n  };\n\n  const handlePlanOptions = (id) => {\n    setOpenAddPlanOptions(true);\n    setPlanOptionsId(id);\n  };\n  const handleDeliveryOrder = (id) => {\n    history.push(`/admin/orders/placeDeliveryOrder/${id}/profiles/${pid}`);\n  };\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n      dispatch(getAllDeliveryPlan(id, page + 1, rowsPerPage));\n  }, [dispatch, page, rowsPerPage]);\n\n  return (\n    <>\n      <MainCard>\n        <div className={classes.titleContainer}>\n          <SubjectIcon className={classes.viewIcon} />\n          <span className={classes.pageTitle}>&nbsp; Delivery Plans </span>\n        </div>\n        <Paper elevation={5} className={classes.root}>\n          <TableContainer className={classes.tableContainer}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead className={classes.tableHeaderCell}>\n                <StyledTableRow>\n                  <TableCell> Profile ID </TableCell>\n                  <TableCell> Full Name </TableCell>\n                  <TableCell> Email </TableCell>\n                  <TableCell align=\"center\"> Delivery (Date) </TableCell>\n                  <TableCell align=\"center\"> Day </TableCell>\n                  <TableCell align=\"center\"> Books (Allowed) </TableCell>\n                  <TableCell> Book (Titles) </TableCell>\n                  <TableCell align=\"center\"> Order ID </TableCell>\n                  <TableCell align=\"center\"> Status </TableCell>\n                  <TableCell align=\"right\"> Action </TableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {loading ? (\n                  <StyledTableRow>\n                    <TableCell colSpan={10} align=\"center\">\n                      <CircularProgress />\n                    </TableCell>\n                  </StyledTableRow>\n                ) : allDeliveryPlan?.content?.length > 0 ? (\n                  allDeliveryPlan?.content?.map((row) => (\n                    <StyledTableRow key=\"\">\n                      <TableCell> {row?.profileId} </TableCell>\n                      <TableCell> {row?.fullName} </TableCell>\n                      <TableCell>\n                        <Tooltip title={row?.email}>\n                          <Typography>\n                            {row?.email.length < 15 ? row.email : `${row.email.substring(0, 10)}...`}\n                          </Typography>\n                        </Tooltip>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Moment format=\"YYYY/MM/DD\" date={row?.deliveryDate} />\n                      </TableCell>\n                      <TableCell align=\"center\"> {row?.day} </TableCell>\n                      <TableCell align=\"center\"> {row?.booksAllowed} </TableCell>\n                      <TableCell> {row?.bookTitles} </TableCell>\n                      <TableCell align=\"center\"> {row?.orderId} </TableCell>\n                      <TableCell align=\"center\">\n                        <Tooltip title={row?.status}>\n                          <Typography\n                            className={classes.status}\n                            style={{\n                              backgroundColor:\n                                (row?.status === 'PENDING' && theme.palette.warning.main) ||\n                                (row?.status === 'ORDERED' && theme.palette.success.main) ||\n                                (row?.status === 'DELIVERED' && theme.palette.success.dark) ||\n                                (row?.status === 'SKIPPED' && theme.palette.warning.dark) ||\n                                (row?.status === 'LEAVE' && theme.palette.error.main) ||\n                                (row?.status === 'RETURNED' && theme.palette.error.dark) ||\n                                (row?.status === 'PARTIALLY_CANCEL' && theme.palette.warning.main) ||\n                                (row?.status === 'PARTIALLY_DELIVERED' && theme.palette.warning.main) ||\n                                (row?.status === 'PARTIALLY_EXTENDED' && theme.palette.warning.main) ||\n                                (row?.status === 'PARTIALLY_LOST' && theme.palette.warning.main) ||\n                                (row?.status === 'PARTIALLY_RECEIVED' && theme.palette.warning.main) ||\n                                (row?.status === 'PARTIALLY_SHIPPED' && theme.palette.warning.main)\n                            }}\n                          >\n                            {row?.status.length < 9 ? row.status : `${row.status.substring(0, 9)}...`}\n                          </Typography>\n                        </Tooltip>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                      {(row?.status === 'PENDING' || row?.status === 'ORDERED' || row?.status === 'NEW') && (\n                          <Tooltip title=\"Update Delivery Plan \">\n                            <IconButton onClick={() => handleDeliveryOrder(row?.id)}>\n                              <EditIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                            </IconButton>\n                          </Tooltip>\n                        )}\n                      </TableCell>\n                    </StyledTableRow>\n                  ))\n                ) : (\n                  <StyledTableRow>\n                    <TableCell colSpan={10} align=\"center\">\n                      <Typography variant=\"caption\">Sorry! No data available</Typography>\n                    </TableCell>\n                  </StyledTableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[25, 50, 100]}\n            component=\"div\"\n            count={allDeliveryPlan?.totalElements || 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            sx={{\n              '.MuiTablePagination-displayedRows': {\n                marginBottom: 0\n              },\n              '.MuiTablePagination-selectLabel': {\n                marginBottom: 0\n              }\n            }}\n          />\n        </Paper>\n      </MainCard>\n    </>\n  );\n}\n"],"sourceRoot":""}