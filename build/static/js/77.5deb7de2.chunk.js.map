{"version":3,"sources":["../node_modules/@material-ui/icons/GroupWork.js","views/online-classes/courses/add-course/index.js","views/online-classes/courses/all-courses/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","STATUS_ITEMS","id","status","MIN_AGE","_toConsumableArray","Array","map","_","index","toString","MAX_AGE","validationSchema","yup","title","required","languageId","focusSkillIds","price","duration","typeError","sessionsCount","description","AddCourse","props","openAddCourses","setOpenAddCourses","isEditData","focusSkillList","setFocusSkillList","skillSelected","classes","useStyles","dispatch","useDispatch","useParams","_useState","useState","_useState2","_slicedToArray","selectedFocusSkills","setSelectedFocusSkills","handleFocusSkillSearch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","GetSearchedFocusSkillsToAdd","stop","_x","apply","arguments","useEffect","_ref2","_callee2","searchKeyWord","_context2","searchFocusSkill","then","res","_res$data","console","log","data","content","_x2","formInitialSchema","focusSkillToAdd","minAge","maxAge","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","handlePopupClose","onSubmit","_ref3","_callee3","payload","_context3","item","updateModule","getAllCourse","t0","error","addModule","t1","_x3","_useState3","_useState4","languageList","setLanguageList","GetAllLanguages","_ref4","_callee4","_context4","getAllLanguages","catch","_jsx","children","_jsxs","Dialog","open","paper","dialog","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","style","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","PerfectScrollbar","ScrollHeight","DialogContent","Grid","container","spacing","xs","sm","mandatory","RHFTextField","name","autoFocus","RHFSelect","label","disabled","_languageList$filter$","defaultValue","filter","lang","MultiselectChip","values","handleSearch","getSelectedItems","items","placeholder","type","Divider","marginTop","DialogActions","dialogAction","Button","variant","color","buttonCancel","buttonSubmit","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllCourses","useUserRole","roleList","loggedUserProfile","useSelector","state","userProfile","history","useHistory","useTheme","setCourseId","_useState5","_useState6","page","setPage","_useState7","_useState8","rowsPerPage","setRowsPerPage","_useState9","isOpen","subTitle","_useState10","confirmDialog","setConfirmDialog","_useState11","_useState12","isSearchCourse","setSearchCourse","_useState13","_useState14","isCourseUpdateData","setCourseUpdateData","_useState15","_useState16","_useState17","_useState18","setSkillSelected","allModules","course","newData","handleModule","val","result","itemId","newVal","find","x","obj","push","_Fragment","MainCard","titleContainer","SubjectIcon","viewIcon","role","pageTitle","Paper","elevation","titleStyle","OutlinedInput","searchControl","onChange","event","_event$target","target","handleSearchCourse","startAdornment","InputAdornment","position","IconSearch","stroke","size","justifyContent","btnAdd","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","row","success","main","warning","dark","Tooltip","IconButton","EditIcon","cursor","concat","handleViewFocusSkill","VisibilityIcon","handleViewSession","handleViewBatch","GroupWorkIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog"],"mappings":"8HAEA,IAAIA,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,gUACD,aAEJP,EAAQE,QAAUG,C,ujBCDZG,GAAe,CACjB,CAAEC,GAAI,EAAGC,OAAQ,UACjB,CAAED,GAAI,EAAGC,OAAQ,aAEfC,GAAUC,YAAIC,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAK,MAAM,CAAEP,GAAIO,EAAQ,EAAGN,QAASM,EAAQ,GAAGC,WAAY,IAC7FC,GAAUN,YAAIC,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAK,MAAM,CAAEP,GAAIO,EAAQ,EAAGN,QAASM,EAAQ,GAAGC,WAAY,IAC7FE,GAAmBC,IAAW,CAChCC,MAAOD,IAAW,sBAAsBE,SAAS,qBACjDC,WAAYH,IAAW,mBACvBI,cAAeJ,IAAW,sBAC1BK,MAAOL,IAAW,eAAeE,SAAS,qBAC1CI,SAAUN,IAAW,yBAAyBE,SAAS,+BAA+BK,UAAU,6BAChGC,cAAeR,IAAW,uBAAuBE,SAAS,uBAAuBK,UAAU,0BAC3FE,YAAaT,IAAW,qBAAqBE,SAAS,2BACtDZ,OAAQU,IAAW,qBAAqBE,SAAS,wBAKtC,SAASQ,GAAUC,GAC9B,IAAQC,EAAoGD,EAApGC,eAAgBC,EAAoFF,EAApFE,kBAAmBC,EAAiEH,EAAjEG,WAAYC,EAAqDJ,EAArDI,eAAgBC,EAAqCL,EAArCK,kBAAmBC,EAAkBN,EAAlBM,cACpFC,EAAUC,cACVC,EAAWC,cACThC,EAAOiC,cAAPjC,GAERkC,EAAsDC,mBAASP,GAAcQ,EAAAC,YAAAH,EAAA,GAAtEI,EAAmBF,EAAA,GAAEG,EAAsBH,EAAA,GAE5CI,EAAsB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOjC,GAAK,OAAA+B,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACzB,KAAVrC,EAAY,CAAAmC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACNC,EAA4BtC,GAAO,KAAD,EAAAmC,EAAAE,KAAA,eAExCtB,EAAkB,IAAI,wBAAAoB,EAAAI,OAAA,GAAAN,EAAA,KAE7B,gBAN2BO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KAQ5BC,qBAAU,WACNL,GACJ,GAAG,IAEH,IAAMA,EAA2B,eAAAM,EAAAd,YAAAC,cAAAC,MAAG,SAAAa,EAAOC,GAAa,OAAAf,cAAAG,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAV,KAAA,EAC9CW,aAAiBF,GAAeG,MAAK,SAACC,GAAS,IAADC,EAChDC,QAAQC,IAAIH,GACZnC,EAAqB,OAAHmC,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKI,YAAI,IAAAH,OAAN,EAAHA,EAAWI,QACjC,IAAG,KAAD,mBAAAR,EAAAR,OAAA,GAAAM,EAAA,KACL,gBALgCW,GAAA,OAAAZ,EAAAH,MAAA,KAAAC,UAAA,KAW3Be,EAAoB,CACtBzD,OAAiB,OAAVa,QAAU,IAAVA,OAAU,EAAVA,EAAYb,QAAS,GAC5BE,YAAsB,OAAVW,QAAU,IAAVA,OAAU,EAAVA,EAAYX,aAAc,GACtCC,eAAyB,OAAVU,QAAU,IAAVA,OAAU,EAAVA,EAAY6C,kBAAmB,GAC9CtD,OAAiB,OAAVS,QAAU,IAAVA,OAAU,EAAVA,EAAYT,QAAS,GAC5BC,UAAoB,OAAVQ,QAAU,IAAVA,OAAU,EAAVA,EAAYR,WAAY,GAClCE,eAAyB,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYN,gBAAiB,GAC5CC,aAAuB,OAAVK,QAAU,IAAVA,OAAU,EAAVA,EAAYL,cAAe,GACxCnB,QAAkB,OAAVwB,QAAU,IAAVA,OAAU,EAAVA,EAAYxB,SAAU,WAC9BsE,QAAkB,OAAV9C,QAAU,IAAVA,OAAU,EAAVA,EAAY8C,SAAU,GAC9BC,QAAkB,OAAV/C,QAAU,IAAVA,OAAU,EAAVA,EAAY+C,SAAU,IAElCR,QAAQC,IAAI,oBAAqBI,GACjC,IAAMI,EAAUC,YAAQ,CACpBC,KAAM,WACNC,SAAUC,YAAYnE,IACtBoE,cAAeT,IAEXU,EAAwBN,EAAxBM,MAAOC,EAAiBP,EAAjBO,aAETC,EAAmB,WACrBzD,GAAkB,GAClBuD,GACJ,EAuDMG,EAAQ,eAAAC,EAAAzC,YAAAC,cAAAC,MAAG,SAAAwC,EAAOlB,GAAI,IAAAmB,EAAA,OAAA1C,cAAAG,MAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,OAcE,GAb1Be,QAAQC,IAAI,yBACNoB,EAAU,CACZzE,MAAW,OAAJsD,QAAI,IAAJA,OAAI,EAAJA,EAAMtD,MACbE,WAAgB,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAMpD,WAClBC,cAAkC,OAAnBuB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBjC,KAAI,SAACkF,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMvF,EAAE,IAC1DgB,MAAW,OAAJkD,QAAI,IAAJA,OAAI,EAAJA,EAAMlD,MACbC,SAAc,OAAJiD,QAAI,IAAJA,OAAI,EAAJA,EAAMjD,SAChBE,cAAmB,OAAJ+C,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,cACrBC,YAAiB,OAAJ8C,QAAI,IAAJA,OAAI,EAAJA,EAAM9C,YACnBnB,OAAY,OAAJiE,QAAI,IAAJA,OAAI,EAAJA,EAAMjE,OACdsE,OAAY,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMK,OACdC,OAAY,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMM,QAE1BR,QAAQC,IAAI,cAAcoB,IACd5D,EAAW,CAAD6D,EAAArC,KAAA,gBAAAqC,EAAAtC,KAAA,EAAAsC,EAAArC,KAAA,EAGAlB,EAASyD,YAAaH,EAAS5D,EAAWzB,KAAK,KAAD,EACpD+B,EAAS0D,YAAazF,IACtBiF,IAAmBK,EAAArC,KAAA,iBAAAqC,EAAAtC,KAAA,GAAAsC,EAAAI,GAAAJ,EAAA,SAEnBtB,QAAQ2B,MAAKL,EAAAI,IAAQ,QAAAJ,EAAArC,KAAA,wBAAAqC,EAAAtC,KAAA,GAAAsC,EAAArC,KAAA,GAKflB,EAAS6D,YAAUP,EAASrF,IAAK,KAAD,GACtC+B,EAAS0D,YAAazF,IACtBiF,IAAmBK,EAAArC,KAAA,iBAAAqC,EAAAtC,KAAA,GAAAsC,EAAAO,GAAAP,EAAA,UAEnBtB,QAAQ2B,MAAKL,EAAAO,IAAQ,yBAAAP,EAAAnC,OAAA,GAAAiC,EAAA,2BAGhC,gBAlCaU,GAAA,OAAAX,EAAA9B,MAAA,KAAAC,UAAA,KAoCdyC,EAAwC5D,mBAAS,IAAG6D,EAAA3D,YAAA0D,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAe,eAAAC,EAAA1D,YAAAC,cAAAC,MAAG,SAAAyD,IAAA,OAAA1D,cAAAG,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAArD,KAAA,EACdsD,eACD1C,MAAK,SAACC,GACHoC,EAAgBpC,EAAIK,QACxB,IACCqC,OAAM,SAACb,GACJ3B,QAAQC,IAAI0B,EAChB,IAAG,KAAD,mBAAAW,EAAAnD,OAAA,GAAAkD,EAAA,KACT,kBARoB,OAAAD,EAAA/C,MAAA,KAAAC,UAAA,KAcrB,OAJAC,qBAAU,WACN4C,GACJ,GAAG,IAGCM,eAAA,OAAAC,SACIC,gBAACC,IAAM,CAACC,KAAMtF,EAAgBM,QAAS,CAAEiF,MAAOjF,EAAQkF,QAASL,SAAA,CAC7DD,eAACO,IAAW,CAACC,UAAWpF,EAAQqF,YAAYR,SACxCC,gBAAA,OAAKM,UAAWpF,EAAQsF,iBAAiBT,SAAA,CACrCD,eAACW,IAAU,CAACC,MAAO,CAAEC,SAAU,QAASZ,SAAGjF,EAA4B,gBAAf,eACxDgF,eAACc,IAAI,CAACC,GAAG,IAAIC,QAASxC,EAAiByB,SACnCD,eAACiB,IAAS,CAACT,UAAWpF,EAAQ8F,mBAI1ChB,gBAACiB,IAAY,CAACnD,QAASA,EAASS,SAAUF,EAAaE,GAAUwB,SAAA,CAC7DD,eAACoB,IAAgB,CAACZ,UAAWpF,EAAQiG,aAAapB,SAC9CD,eAACsB,IAAa,CAAArB,SACVC,gBAACqB,IAAI,CAACC,WAAS,EAACC,QAAS,EAAExB,SAAA,CACvBC,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,SACGD,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,SAE9CD,eAAC6B,IAAY,CAACtI,GAAG,QAAQuI,KAAK,QAAQC,WAAS,OAEnD7B,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,WACKD,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,SAEhDC,gBAAC8B,IAAS,CAACF,KAAK,SAASG,MAAM,GAAEhC,SAAA,CAC7BD,eAAA,UAAQjH,MAAM,GAAGmJ,UAAQ,EAAAjC,SAAC,uBAGlB,OAAPxG,SAAO,IAAPA,QAAO,EAAPA,GAASG,KAAI,SAACkF,EAAMhF,GAAK,OACtBkG,eAAA,UAAoBjH,MAAW,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMvF,GAAG0G,SAC3B,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMtF,QADEM,EAEJ,UAIrBoG,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,WACKD,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,SAEhDC,gBAAC8B,IAAS,CAACF,KAAK,SAASG,MAAM,GAAEhC,SAAA,CAC7BD,eAAA,UAAQjH,MAAM,GAAGmJ,UAAQ,EAAAjC,SAAC,uBAGlB,OAAPjG,SAAO,IAAPA,QAAO,EAAPA,GAASJ,KAAI,SAACkF,EAAMhF,GAAK,OACtBkG,eAAA,UAAoBjH,MAAW,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMvF,GAAG0G,SAC3B,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMtF,QADEM,EAEJ,UAIrBkG,eAAA,SAAM,IAACA,eAAA,SACPE,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBD,eAAA,SAAAC,SAAO,eACPC,gBAAC8B,IAAS,CAACF,KAAK,aAAaG,MAAM,GAAEhC,SAAA,CACjCD,eAAA,UAAQjH,MAAO,GAAGkH,SAAC,wBACN,OAAZT,QAAY,IAAZA,OAAY,EAAZA,EAAc5F,KAAI,SAACkF,EAAMhF,GAAK,IAAAqI,EAAA,OAC3BnC,eAAA,UAEIjH,MAAW,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMvF,GACb6I,cACQ,OAAJtD,QAAI,IAAJA,OAAI,EAAJA,EAAMvF,OAAmB,OAAZiG,QAAY,IAAZA,GAAqE,QAAzD2C,EAAZ3C,EAAc6C,QAAO,SAACC,GAAI,OAAKA,EAAK/I,MAAiB,OAAVyB,QAAU,IAAVA,OAAU,EAAVA,EAAYX,WAAU,IAAE,UAAE,IAAA8H,OAAzD,EAAZA,EAAuE5I,IACvF0G,SAEI,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMgD,MANFhI,EAOA,UAIrBkG,eAAA,SACAA,eAAA,SACAE,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBD,eAAA,SAAAC,SAAO,kBACPD,eAACuB,IAAI,CAAAtB,SACDD,eAACuC,KAAe,CACZhJ,GAAG,gBACHuI,KAAK,gBACLU,OAAQvH,EACRwH,aAAc1G,EACd2G,iBApNH,SAACC,GAClC7G,EAAuB6G,EAC3B,EAmNwCC,YAAa,qBACbR,aAAcvG,GAA4C,UAItEqE,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,iBACMD,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,WAEjDD,eAAC6B,IAAY,CAACtI,GAAG,QAAQsJ,KAAK,SAASf,KAAK,QAAQc,YAAY,+BAEpE5C,eAAA,SAAM,IAACA,eAAA,SACPE,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,wBACkBD,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,SAE7DD,eAAC6B,IAAY,CAACtI,GAAG,WAAWsJ,KAAK,SAASf,KAAK,WAAWc,YAAY,sBAE1E5C,eAAA,SAAM,IAACA,eAAA,SACPE,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,YACMD,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,WAEjDD,eAAC6B,IAAY,CAACgB,KAAK,SAAStJ,GAAG,gBAAgBuI,KAAK,qBAExD9B,eAAA,SAAM,IAACA,eAAA,SACPE,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,eACSD,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,WAEpDD,eAAC6B,IAAY,CAACtI,GAAG,cAAcuI,KAAK,mBAExC9B,eAAA,SACAA,eAAA,SACAE,gBAACqB,IAAI,CAACzC,MAAI,EAAC4C,GAAI,GAAIC,GAAI,EAAE1B,SAAA,CACrBC,gBAAA,SAAAD,SAAA,CAAO,UACID,eAAA,QAAMQ,UAAWpF,EAAQwG,UAAU3B,SAAC,SAE/CD,eAACgC,IAAS,CAACF,KAAK,SAASG,MAAM,GAAEhC,SAChB,OAAZ3G,SAAY,IAAZA,QAAY,EAAZA,GAAcM,KAAI,SAACkF,EAAMhF,GAAK,OAC3BkG,eAAA,UAAoBjH,MAAW,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAMtF,OAAOyG,SAC/B,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMtF,QADEM,EAEJ,SAIrBkG,eAAA,SACAA,eAAA,gBAIZA,eAAC8C,IAAO,CAAClC,MAAO,CAAEmC,UAAW,MAC7B7C,gBAAC8C,IAAa,CAACxC,UAAWpF,EAAQ6H,aAAahD,SAAA,CAC3CD,eAACkD,IAAM,CAACC,QAAQ,WAAWC,MAAM,YAAY5C,UAAWpF,EAAQiI,aAAcrC,QAASxC,EAAiByB,SAAC,UAGzGD,eAACkD,IAAM,CAACC,QAAQ,YAAYC,MAAM,YAAYP,KAAK,SAASrC,UAAWpF,EAAQkI,aAAarD,SACtFjF,EAAqB,SAAR,kBAO3C,C,sBC/SMuI,GAAiBC,aAAW,SAACC,GAAK,MAAM,CAC1CC,KAAM,CACF,sBAAuB,CACnBC,gBAAiBF,EAAMG,QAAQC,OAAOC,QAGjD,GANsBN,CAMnBO,KAEW,SAASC,KACpB,IAAM5I,EAAUC,eAChB4I,aAAY,CAAEC,SAAU,CAAC,QAAS,UAAW,iBAC7C,IAAM5I,EAAWC,cACT4I,EAAsBC,aAAY,SAACC,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,WAAW,IAA/DH,kBACFI,EAAUC,cACVf,EAAQgB,cACNlL,EAAOiC,cAAPjC,GACRkC,EAA4CC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAApDX,EAAca,EAAA,GAAEZ,EAAiBY,EAAA,GACxC2D,EAAgC5D,mBAAS,IAAG6D,EAAA3D,YAAA0D,EAAA,GAA3BoF,GAAFnF,EAAA,GAAaA,EAAA,IAC5BoF,EAAwBjJ,mBAAS,GAAEkJ,EAAAhJ,YAAA+I,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsCrJ,mBAAS,IAAGsJ,EAAApJ,YAAAmJ,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAA0CzJ,mBAAS,CAC/C0J,QAAQ,EACRjL,MAAO,GACPkL,SAAU,KACZC,EAAA1J,YAAAuJ,EAAA,GAJKI,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAKtCG,GAA0C/J,mBAAS,IAAGgK,GAAA9J,YAAA6J,GAAA,GAA/CE,GAAcD,GAAA,GAAEE,GAAeF,GAAA,GACtCG,GAAkDnK,mBAAS,MAAKoK,GAAAlK,YAAAiK,GAAA,GAAzDE,GAAkBD,GAAA,GAAEE,GAAmBF,GAAA,GAC9CG,GAA4CvK,mBAAS,IAAGwK,GAAAtK,YAAAqK,GAAA,GAAjDhL,GAAciL,GAAA,GAAEhL,GAAiBgL,GAAA,GACxCC,GAA0CzK,mBAAS,IAAG0K,GAAAxK,YAAAuK,GAAA,GAA/ChL,GAAaiL,GAAA,GAAEC,GAAgBD,GAAA,GAE9BE,GAAelC,aAAY,SAACC,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOkC,MAAM,IAAnDD,WACFE,GAAoB,OAAVF,SAAU,IAAVA,QAAU,EAAVA,GAAY5I,QAStB+I,GAAY,eAAAzK,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOqB,GAAI,IAAAiJ,EAAA,OAAAxK,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEd,OADdwJ,GAAoBvI,GACdiJ,EAAM,GAAEpK,EAAAE,KAAA,EAERW,eAAmBC,MAAK,SAACC,GAAS,IAADC,EAC7BqJ,EAAY,OAAHtJ,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKI,YAAI,IAAAH,OAAN,EAAHA,EAAWI,QAE1BxC,GAAkByL,GAEd,OAAJlJ,QAAI,IAAJA,KAAMnD,cAAcV,KAAI,SAACgN,GACrB,IAAMC,EAASF,EAAOG,MAAK,SAACC,GAAC,OAAKA,EAAExN,KAAOqN,CAAM,IAC3CI,EAAM,CACRzN,GAAIqN,EACJzM,MAAa,OAAN0M,QAAM,IAANA,OAAM,EAANA,EAAQ1M,OAGnBuM,EAAIO,KAAKD,EACb,IACAX,GAAiBK,GACjB3L,GAAkB,EACtB,IAAG,KAAD,mBAAAuB,EAAAI,OAAA,GAAAN,EAAA,KACL,gBArBiBO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KA6ClB,OAJAC,qBAAU,WACNxB,EAAS0D,YAAazF,EAAI,GAAI0L,EAAaU,IAAkC,GAAId,EAAO,GAC5F,GAAG,CAACI,EAAaU,GAAgBd,IAG7B7E,eAAAkH,YAAA,CAAAjH,SACIC,gBAACiH,IAAQ,CAAAlH,SAAA,CACLC,gBAAA,OAAKM,UAAWpF,EAAQgM,eAAenH,SAAA,CACnCD,eAACqH,IAAW,CAAC7G,UAAWpF,EAAQkM,YACF,WAAX,OAAjBnD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,OAAgD,iBAAX,OAAjBpD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,QACxDvH,eAAA,QAAMQ,UAAWpF,EAAQoM,UAAUvH,SAAC,sBAGX,aAAX,OAAjBkE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,OAAsBvH,eAAA,QAAMQ,UAAWpF,EAAQoM,UAAUvH,SAAC,0BAElFC,gBAACuH,IAAK,CAACC,UAAW,EAAGlH,UAAWpF,EAAQsI,KAAKzD,SAAA,CACzCC,gBAACqB,IAAI,CAACf,UAAWpF,EAAQuM,WAAYjG,GAAI,GAAGzB,SAAA,CACxCD,eAACuB,IAAI,CAACzC,MAAI,EAAC0C,WAAS,EAAAvB,SAChBD,eAAC4H,IAAa,CACVpH,UAAWpF,EAAQyM,cACnBtO,GAAG,sBACHuO,SAAU,SAACC,GAAK,OAzBjB,SAACA,GAAW,IAADC,EAClCpC,GAAqB,OAALmC,QAAK,IAALA,GAAa,QAARC,EAALD,EAAOE,cAAM,IAAAD,OAAR,EAALA,EAAejP,MACnC,CAuBiDmP,CAAmBH,EAAM,EAC9CnF,YAAY,SACZuF,eACInI,eAACoI,IAAc,CAACC,SAAS,QAAOpI,SAC5BD,eAACsI,IAAU,CAACC,OAAQ,IAAKC,KAAK,OAAOhI,UAAWpF,EAAQ+M,wBAK1C,WAAX,OAAjBhE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,OAAgD,iBAAX,OAAjBpD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,QACxDvH,eAACuB,IAAI,CAACzC,MAAI,EAAC0C,WAAS,EAACZ,MAAO,CAAE6H,eAAgB,YAAaxI,SACvDD,eAACkD,IAAM,CACHC,QAAQ,YACRC,MAAM,UACNpC,QAAS,WACLjG,GAAkB,GAClBiL,GAAoB,MACpBK,GAAiB,GACrB,EACA7F,UAAWpF,EAAQsN,OAAOzI,SAC7B,oBAMbD,eAAC2I,IAAc,CAACnI,UAAWpF,EAAQwN,eAAe3I,SAC9CC,gBAAC2I,IAAK,CAACrI,UAAWpF,EAAQ0N,MAAO,aAAW,eAAc7I,SAAA,CACtDD,eAAC+I,IAAS,CAACvI,UAAWpF,EAAQ4N,gBAAgB/I,SAC1CC,gBAACqD,GAAc,CAAAtD,SAAA,CACXD,eAACiJ,IAAS,CAAAhJ,SAAC,YACXD,eAACiJ,IAAS,CAAAhJ,SAAC,kBACkB,aAAX,OAAjBkE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,OAAsBvH,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SAAC,YACpED,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SAAC,2BAC1BD,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SAAC,oBAC1BD,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SAAC,aAC1BD,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SAAC,aAC1BD,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SAAC,aAE1BD,eAACiJ,IAAS,CAACC,MAAM,QAAOjJ,SAAC,kBAG/BuG,GAGExG,eAACmJ,IAAS,CAAAlJ,SACE,OAAPuG,SAAO,IAAPA,QAAO,EAAPA,GAAS5M,KAAI,SAACwP,EAAKtP,GAAK,OACrBoG,gBAACqD,GAAc,CAAAtD,SAAA,CACXC,gBAAC+I,IAAS,CAAAhJ,SAAA,CAAC,IAAK,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAKjP,MAAM,OACxB+F,gBAAC+I,IAAS,CAAAhJ,SAAA,CAAC,IAAK,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAKzO,YAAY,OACD,aAAX,OAAjBwJ,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,OAAsBvH,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SAAK,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAK7O,QAC1E2F,gBAAC+I,IAAS,CAACC,MAAM,SAAQjJ,SAAA,CAAC,IAAK,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAK5O,SAAS,OAC1C0F,gBAAC+I,IAAS,CAACC,MAAM,SAAQjJ,SAAA,CAAC,IAAK,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAK1O,cAAc,OAE/CsF,eAACiJ,IAAS,CAACC,MAAM,SAAQjJ,SACrBD,eAACW,IAAU,CACPH,UAAWpF,EAAQ5B,OACnBoH,MAAO,CACH+C,gBACqB,YAAb,OAAHyF,QAAG,IAAHA,OAAG,EAAHA,EAAK5P,SAAuBiK,EAAMG,QAAQyF,QAAQC,MAClC,aAAb,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAK5P,SAAwB,QACb,cAAb,OAAH4P,QAAG,IAAHA,OAAG,EAAHA,EAAK5P,SAAyBiK,EAAMG,QAAQ2F,QAAQC,MAC3DvJ,SAEE,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAK5P,WAGd0G,gBAAC+I,IAAS,CAACC,MAAM,SAAQjJ,SAAA,CAAC,IAAK,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAKtL,OAAO,OACxCoC,gBAAC+I,IAAS,CAACC,MAAM,SAAQjJ,SAAA,CAAC,IAAK,OAAHmJ,QAAG,IAAHA,OAAG,EAAHA,EAAKrL,OAAO,OAExCmC,gBAAC+I,IAAS,CAACC,MAAM,QAAOjJ,SAAA,EACU,WAAX,OAAjBkE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,OAAgD,iBAAX,OAAjBpD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoD,QACxDvH,eAACyJ,IAAO,CAACtP,MAAM,gBAAe8F,SAC1BD,eAAC0J,IAAU,CAAC1I,QAAS,kBAAMyF,GAAa2C,EAAI,EAACnJ,SACzCD,eAAC2J,IAAQ,CAACvG,MAAM,UAAUxC,MAAO,CAAEgJ,OAAQ,iBAKvD5J,eAACyJ,IAAO,CAACtP,MAAM,qBAAoB8F,SAC/BD,eAAC0J,IAAU,CAAC1I,QAAS,kBAlHxC,SAACzH,GAC1BmL,EAAYnL,GACZgL,EAAQ0C,KAAK,kBAAD4C,OAAmBtQ,GACnC,CA+G2EuQ,CAAwB,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAK7P,GAAG,EAAC0G,SACrDD,eAAC+J,IAAc,CAAC3G,MAAM,UAAUvC,SAAS,QAAQD,MAAO,CAAEgJ,OAAQ,iBAI1E5J,eAACyJ,IAAO,CAACtP,MAAM,gBAAe8F,SAC1BD,eAAC0J,IAAU,CAAC1I,QAAS,kBA7H3C,SAACzH,GACvBmL,EAAYnL,GACZgL,EAAQ0C,KAAK,wBAAD4C,OAAyBtQ,GACzC,CA0H2EyQ,CAAqB,OAAHZ,QAAG,IAAHA,OAAG,EAAHA,EAAK7P,GAAG,EAAC0G,SAClDD,eAAC+J,IAAc,CAAC3G,MAAM,UAAUvC,SAAS,QAAQD,MAAO,CAAEgJ,OAAQ,iBAI1E5J,eAACyJ,IAAO,CAACtP,MAAM,eAAc8F,SACzBD,eAAC0J,IAAU,CAAC1I,QAAS,kBAzH7C,SAACzH,GACrBgL,EAAQ0C,KAAK,iBAAD4C,OAAkBtQ,EAAE,UACpC,CAuH2E0Q,CAAmB,OAAHb,QAAG,IAAHA,OAAG,EAAHA,EAAK7P,GAAG,EAAC0G,SAChDD,eAACkK,IAAa,CAAC9G,MAAM,UAAUvC,SAAS,QAAQD,MAAO,CAAEgJ,OAAQ,sBA9C5D9P,EAkDJ,MAtDzBkG,eAAA,WAASY,MAAO,CAAEuJ,UAAW,UAAWlK,SAAC,kCA4DrDD,eAACoK,IAAe,CACZC,mBAAoB,CAAC,GAAI,GAAI,IAC7BC,UAAU,MACVC,OAAiB,OAAVjE,SAAU,IAAVA,QAAU,EAAVA,GAAYkE,gBAAiB,EACpCvF,YAAaA,EACbJ,KAAMA,EACN4F,aAnLK,SAAC1C,EAAO2C,GAC7B5F,EAAQ4F,EACZ,EAkLoBC,oBAhLY,SAAC5C,GAC7B7C,GAAgB6C,EAAME,OAAOlP,MACjC,EA+KoB6R,GAAI,CACA,oCAAqC,CACjCC,aAAc,GAElB,kCAAmC,CAC/BA,aAAc,SAK7B/P,GACGkF,eAACpF,GAAS,CACNE,eAAgBA,EAChBC,kBAAmBA,EACnBC,WAAY+K,GACZ9K,eAAgBA,GAChBC,kBAAmBA,GACnBC,cAAeA,KAGtBoK,GAAiBvF,eAAC8K,IAAa,CAACvF,cAAeA,EAAeC,iBAAkBA,QAIjG,C","file":"static/js/77.5deb7de2.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'GroupWork');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFSelect } from '../../../../components/hook-form';\nimport * as yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, Link, Divider } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { addCourse, updateCourse, getAllCourse, updateModule, addModule } from '../../../../store/actions/CourseActions';\nimport useStyles from '../../../DialogStyles';\nimport { getAllLanguages } from '../../../../services/ModuleServices';\nimport MultiselectChip from '../../../orders/place-delivery-order/components/MultiselectChip';\nimport { searchFocusSkill } from '../../../../services/placeOrderServices';\nimport { useParams } from 'react-router-dom';\n\nconst STATUS_ITEMS = [\n    { id: 0, status: 'ACTIVE' },\n    { id: 1, status: 'INACTIVE' }\n];\nconst MIN_AGE = [...Array(13)].map((_, index) => ({ id: index + 3, status: (index + 3).toString() }));\nconst MAX_AGE = [...Array(13)].map((_, index) => ({ id: index + 3, status: (index + 3).toString() }));\nconst validationSchema = yup.object({\n    title: yup.string('Enter Course Title').required('Title is required'),\n    languageId: yup.string('Select language'),\n    focusSkillIds: yup.string('Select focus skill'),\n    price: yup.string('Enter Price').required('Price is required'),\n    duration: yup.number('Enter Module Duration').required('Module Duration Is Required').typeError('Duration must be a number'),\n    sessionsCount: yup.number('Enter total session').required('Session is required').typeError('Count must be a number'),\n    description: yup.string('Enter description').required('Description is required'),\n    status: yup.string('Enter status here').required('Status is required')\n    // minAge: yup.number('Enter Minimum age').required('Minimum age Is Required').typeError('MinAge must be a number'),\n    // mixAge: yup.number('Enter Maximum age').required('Maximum age Is Required').typeError('MaxAge must be a number')\n});\n\nexport default function AddCourse(props) {\n    const { openAddCourses, setOpenAddCourses, isEditData, focusSkillList, setFocusSkillList, skillSelected } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [selectedFocusSkills, setSelectedFocusSkills] = useState(skillSelected);\n\n    const handleFocusSkillSearch = async (title) => {\n        if (title !== '') {\n            await GetSearchedFocusSkillsToAdd(title);\n        } else {\n            setFocusSkillList([]);\n        }\n    };\n\n    useEffect(() => {\n        GetSearchedFocusSkillsToAdd();\n    }, []);\n\n    const GetSearchedFocusSkillsToAdd = async (searchKeyWord) => {\n        await searchFocusSkill(searchKeyWord).then((res) => {\n            console.log(res);\n            setFocusSkillList(res?.data?.content);\n        });\n    };\n\n    const getSelectedFocusSkillsForAdd = (items) => {\n        setSelectedFocusSkills(items);\n    };\n\n    const formInitialSchema = {\n        title: isEditData?.title || '',\n        languageId: isEditData?.languageId || '',\n        focusSkillIds: isEditData?.focusSkillToAdd || '',\n        price: isEditData?.price || '',\n        duration: isEditData?.duration || '',\n        sessionsCount: isEditData?.sessionsCount || '',\n        description: isEditData?.description || '',\n        status: isEditData?.status || 'INACTIVE',\n        minAge: isEditData?.minAge || '',\n        maxAge: isEditData?.maxAge || ''\n    };\n    console.log('formInitialSchema', formInitialSchema);\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: formInitialSchema\n    });\n    const { reset, handleSubmit } = methods;\n\n    const handlePopupClose = () => {\n        setOpenAddCourses(false);\n        reset();\n    };\n\n    // const onSubmit = (data) => {\n    //     const payload = {\n    //         title: data?.title,\n    //         languageId: data?.languageId,\n    //         focusSkillIds: [],\n    //         price: data?.price,\n    //         duration: data?.duration,\n    //         sessionsCount: data?.sessionsCount,\n    //         description: data?.description,\n    //         status: data?.status,\n    //         minAge: data?.minAge,\n    //         maxAge: data?.maxAge\n    //     };\n    //     console.log('payload=========', payload);\n    //     selectedFocusSkills.forEach((item) => {\n    //         payload.focusSkillIds = [...payload.focusSkillIds, item.id];\n    //     });\n\n    //     const arr = [];\n\n    //     selectedFocusSkills.map((item) => {\n    //         arr?.push(item.id);\n    //     });\n\n    //     const updatePayload = {\n    //         title: data?.title,\n    //         languageId: data?.languageId,\n    //         focusSkillIds: arr,\n    //         price: data?.price,\n    //         duration: data?.duration,\n    //         sessionsCount: data?.sessionsCount,\n    //         description: data?.description,\n    //         status: data?.status,\n    //         minAge: data?.minAge,\n    //         maxAge: data?.maxAge\n    //     };\n\n    //     if (isEditData) {\n    //         dispatch(\n    //             updateModule(updatePayload, isEditData?.id, () => {\n    //                 dispatch(getAllCourse(id));\n    //             })\n    //         );\n    //         handlePopupClose();\n    //     } else {\n    //         dispatch(\n    //             addModule(payload, id, () => {\n    //                 dispatch(getAllCourse(id));\n    //             })\n    //         );\n    //         handlePopupClose();\n    //     }\n    // };\n    const onSubmit = async (data) => {\n        console.log('Submit button clicked');\n        const payload = {\n            title: data?.title,\n            languageId: data?.languageId,\n            focusSkillIds: selectedFocusSkills?.map((item) => item?.id),\n            price: data?.price,\n            duration: data?.duration,\n            sessionsCount: data?.sessionsCount,\n            description: data?.description,\n            status: data?.status,\n            minAge: data?.minAge,\n            maxAge: data?.maxAge\n        };\nconsole.log(\"pay load===\",payload)\n        if (isEditData) {\n            // Update module logic here\n            try {\n                await dispatch(updateModule(payload, isEditData.id));\n                dispatch(getAllCourse(id));\n                handlePopupClose();\n            } catch (error) {\n                console.error(error);\n            }\n        } else {\n            // Add module logic here\n            try {\n                await dispatch(addModule(payload, id));\n                dispatch(getAllCourse(id));\n                handlePopupClose();\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    };\n\n    const [languageList, setLanguageList] = useState([]);\n    const GetAllLanguages = async () => {\n        await getAllLanguages()\n            .then((res) => {\n                setLanguageList(res.content);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    useEffect(() => {\n        GetAllLanguages();\n    }, []);\n   \n    return (\n        <div>\n            <Dialog open={openAddCourses} classes={{ paper: classes.dialog }}>\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add Module' : 'Update Module'}</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <PerfectScrollbar className={classes.ScrollHeight}>\n                        <DialogContent>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Title <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFTextField id=\"title\" name=\"title\" autoFocus />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Min Age <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFSelect name=\"minAge\" label=\"\">\n                                        <option value=\"\" disabled>\n                                            Select minimum age\n                                        </option>\n                                        {MIN_AGE?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Max Age <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFSelect name=\"maxAge\" label=\"\">\n                                        <option value=\"\" disabled>\n                                            Select maximum age\n                                        </option>\n                                        {MAX_AGE?.map((item, index) => (\n                                            <option key={index} value={item?.id}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                                <br /> <br />\n                                <Grid item xs={12} sm={6}>\n                                    <label> Language </label>\n                                    <RHFSelect name=\"languageId\" label=\"\">\n                                        <option value={''}> Choose a language </option>\n                                        {languageList?.map((item, index) => (\n                                            <option\n                                                key={index}\n                                                value={item?.id}\n                                                defaultValue={\n                                                    item?.id === languageList?.filter((lang) => lang.id === isEditData?.languageId)[0]?.id\n                                                }\n                                            >\n                                                {item?.name}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                                <br />\n                                <br />\n                                <Grid item xs={12} sm={6}>\n                                    <label> Focus Skill </label>\n                                    <Grid>\n                                        <MultiselectChip\n                                            id=\"focusSkillIds\"\n                                            name=\"focusSkillIds\"\n                                            values={focusSkillList}\n                                            handleSearch={handleFocusSkillSearch}\n                                            getSelectedItems={getSelectedFocusSkillsForAdd}\n                                            placeholder={'Search Focus Skill'}\n                                            defaultValue={selectedFocusSkills ? selectedFocusSkills : ''}\n                                        ></MultiselectChip>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Price(₹) <span className={classes.mandatory}> * </span>\n                                    </label>\n                                    <RHFTextField id=\"price\" type=\"number\" name=\"price\" placeholder=\"Enter module price here\" />\n                                </Grid>\n                                <br /> <br />\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Duration(In Minutes) <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFTextField id=\"duration\" type=\"number\" name=\"duration\" placeholder=\"Enter duration\" />\n                                </Grid>\n                                <br /> <br />\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Sessions <span className={classes.mandatory}> * </span>\n                                    </label>\n                                    <RHFTextField type=\"number\" id=\"sessionsCount\" name=\"sessionsCount\" />\n                                </Grid>\n                                <br /> <br />\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Description <span className={classes.mandatory}> * </span>\n                                    </label>\n                                    <RHFTextField id=\"description\" name=\"description\" />\n                                </Grid>\n                                <br />\n                                <br />\n                                <Grid item xs={12} sm={6}>\n                                    <label>\n                                        Status <span className={classes.mandatory}>*</span>\n                                    </label>\n                                    <RHFSelect name=\"status\" label=\"\">\n                                        {STATUS_ITEMS?.map((item, index) => (\n                                            <option key={index} value={item?.status}>\n                                                {item?.status}\n                                            </option>\n                                        ))}\n                                    </RHFSelect>\n                                </Grid>\n                                <br />\n                                <br />\n                            </Grid>\n                        </DialogContent>\n                    </PerfectScrollbar>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getAllCourse, getCourse } from '../../../../store/actions/CourseActions';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useParams } from 'react-router-dom';\nimport {\n    Grid,\n    IconButton,\n    Typography,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\nimport AddCourse from '../add-course';\nimport useStyles from '../../../ViewTableStyles';\nimport useUserRole from '../../../../hooks/useUserRole';\nimport { searchFocusSkill } from '../../../../services/placeOrderServices';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllCourses() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'TEACHER', 'SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const { loggedUserProfile } = useSelector((state) => state?.userProfile);\n    const history = useHistory();\n    const theme = useTheme();\n    const { id } = useParams();\n    const [openAddCourses, setOpenAddCourses] = useState(false);\n    const [courseId, setCourseId] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n    const [isSearchCourse, setSearchCourse] = useState('');\n    const [isCourseUpdateData, setCourseUpdateData] = useState(null);\n    const [focusSkillList, setFocusSkillList] = useState([]);\n    const [skillSelected, setSkillSelected] = useState([]);\n\n    const { allModules } = useSelector((state) => state?.course);\n    const newData = allModules?.content;\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleModule = async (data) => {\n        setCourseUpdateData(data);\n        const val = [];\n\n        await searchFocusSkill().then((res) => {\n            const result = res?.data?.content;\n\n            setFocusSkillList(result);\n\n            data?.focusSkillIds.map((itemId) => {\n                const newVal = result.find((x) => x.id === itemId);\n                const obj = {\n                    id: itemId,\n                    title: newVal?.title\n                };\n\n                val.push(obj);\n            });\n            setSkillSelected(val);\n            setOpenAddCourses(true);\n        });\n    };\n\n    const handleViewSession = (id) => {\n        setCourseId(id);\n        history.push(`/admin/course/module/${id}`);\n    };\n\n    const handleViewFocusSkill = (id) => {\n        setCourseId(id);\n        history.push(`/admin/modules/${id}`);\n    };\n\n    const handleViewBatch = (id) => {\n        history.push(`/admin/module/${id}/batch`);\n    };\n\n    const handleSearchCourse = (event) => {\n        setSearchCourse(event?.target?.value);\n    };\n\n    useEffect(() => {\n        dispatch(getAllCourse(id, '', rowsPerPage, isSearchCourse ? isSearchCourse : '', page + 1));\n    }, [rowsPerPage, isSearchCourse, page]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                        <span className={classes.pageTitle}>&nbsp; All Modules </span>\n                    )}\n\n                    {loggedUserProfile?.role === 'TEACHER' && <span className={classes.pageTitle}>&nbsp; Your Modules </span>}\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid className={classes.titleStyle} xs={12}>\n                        <Grid item container>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                onChange={(event) => handleSearchCourse(event)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </Grid>\n                        {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                            <Grid item container style={{ justifyContent: 'flex-end' }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                        setOpenAddCourses(true);\n                                        setCourseUpdateData(null);\n                                        setSkillSelected([]);\n                                    }}\n                                    className={classes.btnAdd}\n                                >\n                                    Add Module\n                                </Button>\n                            </Grid>\n                        )}\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> Title </TableCell>\n                                    <TableCell> Description </TableCell>\n                                    {loggedUserProfile?.role !== 'TEACHER' && <TableCell align=\"center\"> Price </TableCell>}\n                                    <TableCell align=\"center\"> Duration(In Minutes) </TableCell>\n                                    <TableCell align=\"center\"> Session Count </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"center\"> MinAge </TableCell>\n                                    <TableCell align=\"center\"> MaxAge </TableCell>\n\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell> {row?.title} </TableCell>\n                                            <TableCell> {row?.description} </TableCell>\n                                            {loggedUserProfile?.role !== 'TEACHER' && <TableCell align=\"center\">{row?.price}</TableCell>}\n                                            <TableCell align=\"center\"> {row?.duration} </TableCell>\n                                            <TableCell align=\"center\"> {row?.sessionsCount} </TableCell>\n\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'PENDING' && 'blue') ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\"> {row?.minAge} </TableCell>\n                                            <TableCell align=\"center\"> {row?.maxAge} </TableCell>\n\n                                            <TableCell align=\"right\">\n                                                {(loggedUserProfile?.role === 'ADMIN' || loggedUserProfile?.role === 'SUPER_ADMIN') && (\n                                                    <Tooltip title=\"Update Module\">\n                                                        <IconButton onClick={() => handleModule(row)}>\n                                                            <EditIcon color=\"success\" style={{ cursor: 'pointer' }} />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                )}\n\n                                                <Tooltip title=\"View Module Detail\">\n                                                    <IconButton onClick={() => handleViewFocusSkill(row?.id)}>\n                                                        <VisibilityIcon color=\"primary\" fontSize=\"small\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n\n                                                <Tooltip title=\"View Sessions\">\n                                                    <IconButton onClick={() => handleViewSession(row?.id)}>\n                                                        <VisibilityIcon color=\"primary\" fontSize=\"small\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n\n                                                <Tooltip title=\"View Batches\">\n                                                    <IconButton onClick={() => handleViewBatch(row?.id)}>\n                                                        <GroupWorkIcon color=\"primary\" fontSize=\"small\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={allModules?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {openAddCourses && (\n                    <AddCourse\n                        openAddCourses={openAddCourses}\n                        setOpenAddCourses={setOpenAddCourses}\n                        isEditData={isCourseUpdateData}\n                        focusSkillList={focusSkillList}\n                        setFocusSkillList={setFocusSkillList}\n                        skillSelected={skillSelected}\n                    />\n                )}\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}