{"version":3,"sources":["views/admin/cart/index.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","AllCarts","classes","useStyles","useUserRole","roleList","dispatch","useDispatch","useTheme","history","useHistory","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","getAllCartData","useSelector","state","cart","newData","content","_useState7","_useState8","selectedUserType","setSelectedUserType","useEffect","role","getAllCart","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","ShoppingCartIcon","viewIcon","pageTitle","Paper","elevation","Grid","style","display","justifyContent","OutlinedInput","searchControl","id","onChange","e","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","FormControl","formControl","Select","event","MenuItem","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","firstName","lastName","email","totalUniqueBooks","totalBooks","Typography","status","success","main","warning","dark","Tooltip","title","IconButton","onClick","profileId","schoolName","localStorage","setItem","push","concat","VisibilityIcon","color","cursor","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom"],"mappings":"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","file":"static/js/86.74918f68.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { makeStyles, withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Typography,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem\n} from '@material-ui/core';\n\nimport { IconSearch } from '@tabler/icons';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCart } from '../../../store/actions/CartActions';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from '../../ViewTableStyles';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function AllCarts() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const history = useHistory();\n    const [value, setValue] = useState('');\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const { getAllCartData } = useSelector((state) => state?.cart);\n    const newData = getAllCartData?.content;\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    const [selectedUserType, setSelectedUserType] = useState('All'); \n\n    const handleUserTypeChange = (event) => {\n        setSelectedUserType(event.target.value);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n    const handleViewCart = (id, role, schoolName) => {\n        if (schoolName) {\n            localStorage.setItem('schoolName', schoolName);\n        }\n\n        if (role) {\n            history.push(`/admin/cart/${id}${role ? `/${role}` : ''}`);\n        }\n    };\n\n    useEffect(() => {\n        const role = selectedUserType === 'All' ? '' : selectedUserType;\n        dispatch(getAllCart(value ? value : '', role, page + 1, rowsPerPage));\n    }, [value, selectedUserType, page, rowsPerPage]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <ShoppingCartIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}> &nbsp; All Carts </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <div>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                value={value}\n                                onChange={(e) => setValue(e.target.value)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </div>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <div>\n                            <FormControl className={classes.formControl}>\n                                <Select\n                                    value={selectedUserType}\n                                    onChange={handleUserTypeChange}\n                                >\n                                    <MenuItem value=\"All\">ALL</MenuItem>\n                                    <MenuItem value=\"STUDENT\">STUDENT</MenuItem>\n                                    <MenuItem value=\"SCHOOL_ADMIN\">SCHOOL ADMIN</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell> First Name </TableCell>\n                                    <TableCell> Last Name </TableCell>\n                                    <TableCell> Email </TableCell>\n                                    <TableCell> User Type </TableCell>\n\n                                    <TableCell align=\"center\"> Unique Book Qty </TableCell>\n                                    <TableCell align=\"center\"> Total Book Qty </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                    <TableCell align=\"right\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!newData ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row) => (\n                                        <StyledTableRow key={row?.profileId}>\n                                            <TableCell>{row?.firstName}</TableCell>\n                                            <TableCell>{row?.lastName}</TableCell>\n                                            <TableCell>{row?.email}</TableCell>\n                                            <TableCell>{row?.role}</TableCell>\n                                            <TableCell align=\"center\">{row?.totalUniqueBooks}</TableCell>\n                                            <TableCell align=\"center\">{row?.totalBooks}</TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Tooltip title=\"View Cart\">\n                                                    <IconButton onClick={() => handleViewCart(row?.profileId, row?.role,row?.schoolName)}>\n                                                        <VisibilityIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={getAllCartData?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n"],"sourceRoot":""}