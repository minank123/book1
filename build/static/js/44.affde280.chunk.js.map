{"version":3,"sources":["views/orders/pending-books/index.js","../../src/FileSaver.js","services/export.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","validationSchema","yup","startDeliveryDate","required","endDeliveryDate","OrderBooks","useUserRole","roleList","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","Date","toISOString","substring","_useState4","startDate","setStartDate","_useState5","_useState6","endDate","setEndDate","_useState7","_useState8","setDownloadFail","classes","useStyles","dispatch","useDispatch","useTheme","_useState9","_useState10","page","setPage","_useState11","_useState12","rowsPerPage","setRowsPerPage","_useSelector","useSelector","state","order","pendingBookData","loading","newData","content","_useState13","_useState14","downloading","setDownloading","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","exportOrder","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderBookIds","wrap","_context","prev","next","map","row","orderBookId","getOrderBookExport","then","r","catch","error","console","log","finally","stop","apply","arguments","values","someDate","useEffect","getAllPendingBookOrder","onSubmit","_ref2","_callee2","data","_context2","t0","_x","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","Grid","container","spacing","style","display","justifyContent","item","xs","sm","md","OutlinedInput","searchControl","id","onChange","e","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","FormProvider","TextField","type","name","defaultValue","Button","variant","btn","onClick","alignItems","color","boxShadow","marginBottom","disabled","CircularProgress","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","colSpan","_row$bookDetail","_row$bookDetail2","_row$bookDetail3","serial","fontSize","firstName","lastName","profileId","planName","pricePaid","addressType","section","classAnd","bookDetail","title","shelfId","isbn","dueDate","Typography","status","warning","dark","success","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","sx","b","a","autoBom","warn","test","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","send","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","getAllExport","roleName","Promise","resolve","reject","http","process","concat","Accept","FileSaver","err","getUserExport","getTransactionExport","selected","transactionIds","getModuleTransactionExport","getBookExport","bookIds","getOrderExport","orderIds","getSubscriptionLibrary","subscriptionIds"],"mappings":"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","file":"static/js/44.affde280.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPendingBookOrder } from '../../../store/actions/OrderActions';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { getOrderBookExport } from '../../../services/export';\nimport {\n    Grid,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Typography,\n    TextField,\n    Button,\n    CircularProgress\n} from '@material-ui/core';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport useStyles from '../../ViewTableStyles';\nimport useUserRole from '../../../hooks/useUserRole';\nimport { IconSearch } from '@tabler/icons';\nimport { FormProvider } from '../../../components/hook-form';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nconst validationSchema = yup.object({\n    startDeliveryDate: yup.string().required('Start Date is required'),\n    endDeliveryDate: yup.string().required('End Date is required')\n});\n\nexport default function OrderBooks() {\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n\n    const [value, setValue] = useState('');\n    const [startDate, setStartDate] = useState(new Date().toISOString().substring(0, 10));\n    const [endDate, setEndDate] = useState(new Date().toISOString().substring(0, 10));\n    const [downloadFail, setDownloadFail] = useState(false);\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const { pendingBookData, loading } = useSelector((state) => state?.order);\n    const newData = pendingBookData?.content;\n    const [downloading, setDownloading] = useState(false);\n\n    const initialValues = {\n        startDeliveryDate: '',\n        endDeliveryDate: ''\n    };\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n    const { handleSubmit } = methods;\n\n    const exportOrder = async () => {\n    setDownloading(true);\n\n    const orderBookIds = newData?.map((row) => row?.orderBookId);\n\n    await getOrderBookExport(orderBookIds)\n      .then((r) => {})\n      .catch((error) => {\n        setDownloadFail(true);\n        console.log(error);\n      })\n      .finally(() => {\n        setDownloading(false);\n      });\n  };\n\n    const values = {\n        someDate: new Date().toISOString().substring(0, 10)\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    useEffect(() => {\n        try {\n            dispatch(getAllPendingBookOrder(value ? value : '', startDate, endDate, page + 1, rowsPerPage));\n        } catch (error) {\n            console.error(error);\n        }\n    }, [value, startDate, endDate, page, rowsPerPage]);\n\n    const onSubmit = async (data) => {\n        try {\n            await dispatch(getAllPendingBookOrder(value ? value : '', startDate, endDate, page + 1, rowsPerPage));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Pending Books </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={2} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item xs={12} sm={6} md={2}>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                value={value}\n                                onChange={(e) => setValue(e.target.value)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={4} md={6}>\n                            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                                <Grid style={{ display: 'flex' }}>\n                                    <div>\n                                        From: &nbsp;\n                                        <TextField\n                                            type=\"date\"\n                                            name=\"startDeliveryDate\"\n                                            defaultValue={values.someDate}\n                                            onChange={(e) => setStartDate(e.target.value)}\n                                        />\n                                        &nbsp; To: &nbsp;\n                                        <TextField\n                                            type=\"date\"\n                                            name=\"endDeliveryDate\"\n                                            defaultValue={values.someDate}\n                                            onChange={(e) => setEndDate(e.target.value)}\n                                        />\n                                    </div>\n                                    &nbsp;&nbsp; &nbsp;&nbsp;\n                                    <div>\n                                        <Button\n                                            variant=\"contained\"\n                                            className={classes.btn}\n                                            onClick={onSubmit}\n                                            type=\"submit\"\n                                            style={{ alignItems: 'center' }}\n                                        >\n                                            View\n                                        </Button>\n                                    </div>\n                                </Grid>\n                            </FormProvider>\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={4} style={{ display: 'flex', justifyContent: 'space-around' }}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ boxShadow: '0 0.5em 0.5em 0.1em secondary', marginBottom: '50px' }}\n                                onClick={exportOrder}\n                                disabled={downloading}\n                            >\n                                {downloading ? (\n                                    <>\n                                        <CircularProgress size={24} color=\"secondary\" /> Downloading...\n                                    </>\n                                ) : (\n                                    'Export'\n                                )}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell align=\"center\"> Sl. No. </TableCell>\n                                    <TableCell> Customer Details </TableCell>\n                                    <TableCell> Deliver Status </TableCell>\n                                    <TableCell> Book Details </TableCell>\n                                    <TableCell align=\"center\"> Pickup Date </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            <TableBody>\n                                {loading ? (\n                                    <TableRow>\n                                        <TableCell colSpan={10} align=\"center\">\n                                            <CircularProgress />\n                                        </TableCell>\n                                    </TableRow>\n                                ) : newData ? (\n                                    newData?.map((row) => (\n                                        <StyledTableRow key={row?.id}>\n                                            <TableCell align=\"center\"> {row?.serial} </TableCell>\n                                            <TableCell style={{ fontSize: '15px' }}>\n                                                {row?.firstName + ' ' + row?.lastName + ' ( '}\n                                                <b>ID - {row?.profileId}</b>\n                                                {' )'}\n                                                <br />\n                                                <b> Plan Detail &nbsp;-&nbsp;</b> {row?.planName + ' | ' + row?.pricePaid}\n                                                <br />\n                                                {row?.startDate + ' - ' + row?.endDate}\n                                            </TableCell>\n                                            <TableCell>\n                                                {' '}\n                                                <b>{row?.addressType} </b>\n                                                <br />\n                                                {row?.section !== '' ? 'Section - ' + row?.section : ''}\n                                                <br />\n                                                {row?.classAnd !== '' ? 'Grade - ' + row?.classAnd : ''}\n                                            </TableCell>\n                                            <TableCell>\n                                                {' '}\n                                                <b>{row?.bookDetail?.title} </b>\n                                                <br />\n                                                {'Shelf Id - ' + row?.bookDetail?.shelfId}\n                                                <br />\n                                                {'Isbn - ' + row?.bookDetail?.isbn}\n                                            </TableCell>\n                                            <TableCell align=\"center\"> {row?.dueDate} </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'NEW' && theme.palette.warning.dark) ||\n                                                            (row?.status === 'CANCELLED' && theme.palette.error.dark) ||\n                                                            (row?.status === 'DELIVERED' && theme.palette.success.dark)\n                                                    }}\n                                                >\n                                                    {row?.status === 'RETURNED' ? 'RECEIVED' : row?.status}\n                                                </Typography>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))\n                                ) : (\n                                    <TableRow>\n                                        <TableCell colSpan={10} align=\"center\">\n                                            <Typography variant=\"caption\">Sorry! No data available</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[25, 50, 100]}\n                        component=\"div\"\n                        count={pendingBookData?.totalElements || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n            </MainCard>\n        </>\n    );\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import { http } from '../utils/http';\nimport FileSaver from 'file-saver';\nimport { useParams } from 'react-router';\n\nexport const getAllExport = (roleName) => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL,\n            'GET',\n            `users-service/users/users/export/excel?role=${roleName}`,\n            {},\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'excel.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getUserExport = () => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL,\n            'GET',\n            `users-service/users/users/export/excel`,\n            {},\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'users.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getTransactionExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS,\n            'POST',\n            `subscriptions-service/transactions/export/excel`,\n            { transactionIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'transactions.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getModuleTransactionExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS,\n            'POST',\n            `subscriptions-service/transactions/module/export/excel`,\n            { transactionIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'transactions.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getBookExport = (selected) => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL_BOOK,\n            'POST',\n            `books-service/books/export/excel`,\n            { bookIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'books.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getOrderExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_ORDER,\n            'POST',\n            `orders-service/orders/export/excel`,\n            { orderIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'orders.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getOrderBookExport = (selected) => {\n    return new Promise((resolve, reject) => {\n\n        http(\n            process.env.REACT_APP_ROOT_URL_ORDER,\n            'POST',\n            `orders-service/orders/books/export/excel`,\n            { orderBookIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'order-books.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n\nexport const getSubscriptionLibrary = (selected) => {\n    return new Promise((resolve, reject) => {\n        // let { role } = useParams();\n\n        http(\n            process.env.REACT_APP_ROOT_URL_SUBSCRIPTIONS,\n            'POST',\n            `subscriptions-service/plan-subscriptions/export/excel`,\n            { subscriptionIds: selected },\n            true,\n\n            {\n                Accept: '*/*',\n                'Accept-Encoding': 'gzip, deflate, br'\n            },\n            { responseType: 'blob' }\n        )\n            .then((data) => {\n                FileSaver.saveAs(new Blob([data]), 'subscriptions.xlsx');\n                resolve(data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    });\n};\n"],"sourceRoot":""}