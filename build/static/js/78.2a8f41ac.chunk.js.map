{"version":3,"sources":["views/online-classes/online-courses/DeletedCourses/index.js","../node_modules/@material-ui/icons/ArrowUpward.js"],"names":["StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","DeletedCourses","classes","useStyles","useUserRole","roleList","dispatch","useDispatch","useTheme","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_useState5","isOpen","title","subTitle","_useState6","confirmDialog","setConfirmDialog","_useState7","_useState8","isSearchCourse","setSearchCourse","allDeletedCourses","useSelector","state","course","newData","content","totalCount","totalElements","useEffect","getAllDeletedCourses","_jsx","_Fragment","children","_jsxs","MainCard","className","titleContainer","SubjectIcon","viewIcon","pageTitle","Paper","elevation","Grid","container","spacing","style","display","justifyContent","item","xs","sm","md","OutlinedInput","searchControl","id","onChange","event","target","value","handleSearchCourse","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","index","src","imageUrl","width","height","minAge","maxAge","Typography","status","success","main","warning","dark","Tooltip","IconButton","onClick","deleteCourse","_objectSpread","ArrowForwardIcon","color","cursor","textAlign","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","sx","marginBottom","ConfirmDialog","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/78.2a8f41ac.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllDeletedCourses, deleteCourse } from '../../../../store/actions/CourseActions';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport {\n    Grid,\n    IconButton,\n    Typography,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment,\n    Tooltip\n} from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowUpward';\nimport { IconSearch } from '@tabler/icons';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport useStyles from '../../../ViewTableStyles';\nimport useUserRole from '../../../../hooks/useUserRole';\nimport ConfirmDialog from '../../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport MainCard from '../../../../ui-component/cards/MainCard';\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nexport default function DeletedCourses() {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'TEACHER', 'SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const theme = useTheme();\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n    const [isSearchCourse, setSearchCourse] = useState('');\n\n    const { allDeletedCourses } = useSelector((state) => state?.course);\n    const newData = allDeletedCourses?.content;\n    const totalCount = allDeletedCourses?.totalElements;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleSearchCourse = (event) => {\n        setSearchCourse(event.target.value);\n    };\n    const handleActiveCourse = (id) => {\n        const payload = {\n            status: 'ACTIVE'\n        };\n        dispatch(\n            deleteCourse(payload, id, () => {\n                dispatch(getAllDeletedCourses(isSearchCourse ? isSearchCourse : '', page + 1, rowsPerPage));\n            })\n        );\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n    };\n\n    useEffect(() => {\n        dispatch(getAllDeletedCourses(isSearchCourse ? isSearchCourse : '', page + 1, rowsPerPage));\n    }, [isSearchCourse, page, rowsPerPage]);\n\n    return (\n        <>\n            <MainCard>\n                <div className={classes.titleContainer}>\n                    <SubjectIcon className={classes.viewIcon} />\n                    <span className={classes.pageTitle}>&nbsp; Deleted Courses </span>\n                </div>\n                <Paper elevation={5} className={classes.root}>\n                    <Grid container spacing={3} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <OutlinedInput\n                                className={classes.searchControl}\n                                id=\"input-search-header\"\n                                onChange={(event) => handleSearchCourse(event)}\n                                placeholder=\"Search\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\">\n                                        <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                                    </InputAdornment>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead className={classes.tableHeaderCell}>\n                                <StyledTableRow>\n                                    <TableCell align=\"center\"> Image </TableCell>\n                                    <TableCell> Title </TableCell>\n                                    {/* <TableCell> Description </TableCell> */}\n                                    <TableCell align=\"center\"> Age Group </TableCell>\n                                    <TableCell align=\"center\"> Status </TableCell>\n\n                                    <TableCell align=\"center\"> Action </TableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {!allDeletedCourses ? (\n                                <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                            ) : (\n                                <TableBody>\n                                    {newData?.map((row, index) => (\n                                        <StyledTableRow key={index}>\n                                            <TableCell align=\"center\">\n                                                {/* {row?.imageUrl} */}\n                                                <img src={row?.imageUrl} width=\"40px\" height=\"40px\" />\n                                            </TableCell>\n                                            <TableCell> {row?.title} </TableCell>\n                                            {/* <TableCell> {row?.description} </TableCell> */}\n\n                                            <TableCell align=\"center\">\n                                                {row?.minAge}-{row?.maxAge}\n                                            </TableCell>\n\n                                            <TableCell align=\"center\">\n                                                <Typography\n                                                    className={classes.status}\n                                                    style={{\n                                                        backgroundColor:\n                                                            (row?.status === 'ACTIVE' && theme.palette.success.main) ||\n                                                            (row?.status === 'PENDING' && 'blue') ||\n                                                            (row?.status === 'INACTIVE' && theme.palette.warning.dark)\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </Typography>\n                                            </TableCell>\n\n                                            <TableCell align=\"center\">\n                                                <Tooltip title=\"Restore Course\">\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            handleActiveCourse(row.id);\n                                                        }}\n                                                    >\n                                                        <ArrowForwardIcon color=\"primary\" style={{ cursor: 'pointer' }} />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 15, 25]}\n                        component=\"div\"\n                        count={totalCount || 0}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        sx={{\n                            '.MuiTablePagination-displayedRows': {\n                                marginBottom: 0\n                            },\n                            '.MuiTablePagination-selectLabel': {\n                                marginBottom: 0\n                            }\n                        }}\n                    />\n                </Paper>\n                {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n            </MainCard>\n        </>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;"],"sourceRoot":""}