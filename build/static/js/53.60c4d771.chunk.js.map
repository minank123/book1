{"version":3,"sources":["store/actions/LeaveActions/index.js","ui-component/messages/ErrorMsg.js","views/schools/school-leaves/addUpdate-school-leaves/index.js","views/schools/school-leaves/index.js"],"names":["getAllLeaveError","error","type","GET_ALL_LEAVE_ERROR","addLeave","payload","id","successCB","dispatch","http","process","concat","then","res","setMessage","message","catch","err","_err$data","console","log","code","data","updateLeave","_err$data2","_error$data","deleteLeave","_err$data3","getAllLeave","rowsPerPage","arguments","length","undefined","page","getState","GET_ALL_LEAVE_START","GET_ALL_LEAVE_SUCCESS","getAllLeaveSuccess","allLeaves","ErrorMsg","props","isError","setError","theme","useTheme","_jsx","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","children","Alert","severity","style","background","palette","dark","color","validationSchema","yup","title","required","description","startDate","endDate","AddUpdateLeaves","isOpen","setOpen","isEditData","classes","useStyles","_useState","useState","_useState2","_slicedToArray","isLoading","useDispatch","initialValues","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","handlePopupClose","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","schoolId","stop","_x","apply","_jsxs","Dialog","_","reason","paper","dialog","DialogTitle","className","dialogTitle","dialogTitleChild","Typography","fontSize","Link","to","onClick","CloseIcon","closeIcon","FormProvider","DialogContent","Grid","container","item","xs","mandatory","RHFTextField","name","placeholder","autoFocus","textField","label","Divider","marginTop","DialogActions","dialogAction","Button","variant","buttonCancel","buttonSubmit","loader","CircularProgressLoader","StyledTableRow","withStyles","root","backgroundColor","action","hover","TableRow","SchoolsLeaves","useUserRole","roleList","setPage","_useState3","_useState4","setRowsPerPage","_useState5","_useState6","addEditLeavePopup","setAddEditLeavePopup","_useState7","subTitle","_useState8","confirmDialog","setConfirmDialog","_useState9","_useState10","isLeaveUpdateData","setLeaveUpdateData","useSelector","state","leave","newData","content","handleDeleteLeave","_objectSpread","useEffect","_Fragment","titleContainer","SchoolIcon","viewIcon","pageTitle","Paper","elevation","display","justifyContent","boxShadow","AddIcon","TableContainer","tableContainer","Table","table","TableHead","tableHeaderCell","TableCell","align","TableBody","map","row","index","IconButton","cursor","EditIcon","onConfirm","DeleteForeverIcon","textAlign","TablePagination","rowsPerPageOptions","component","count","totalElements","onPageChange","event","newPage","onRowsPerPageChange","target","value","sx","marginBottom","ConfirmDialog"],"mappings":"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","file":"static/js/53.60c4d771.chunk.js","sourcesContent":["import { http } from '../../../utils/http';\nimport { setMessage } from '../MessageActions';\nimport {\n    GET_ALL_LEAVE_START,\n    GET_ALL_LEAVE_SUCCESS,\n    GET_ALL_LEAVE_ERROR,\n    GET_LEAVE_START,\n    GET_LEAVE_SUCCESS,\n    GET_LEAVE_ERROR\n} from '../../constants';\n\nconst getAllLeaveStart = () => {\n    return { type: GET_ALL_LEAVE_START };\n};\nconst getAllLeaveSuccess = (payload) => {\n    return { type: GET_ALL_LEAVE_SUCCESS, payload };\n};\nconst getAllLeaveError = (error) => {\n    return { type: GET_ALL_LEAVE_ERROR, error };\n};\n\nconst getLeaveStart = () => {\n    return { type: GET_LEAVE_START };\n};\nconst getLeaveSuccess = (payload) => {\n    return { type: GET_LEAVE_SUCCESS, payload };\n};\nconst getLeaveError = (error) => {\n    return { type: GET_LEAVE_ERROR, error };\n};\n\nconst addLeave = (payload, id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_SCHOOL, 'POST', `schools-service/schools/${id}/leaves`, payload, true)\n            .then((res) => {\n                dispatch(setMessage(res?.message));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                console.log(err);\n                if (err.code == 409) {\n                }\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        if (error.code == 409) {\n        }\n    }\n};\n\nconst updateLeave = (payload, id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_SCHOOL, 'PUT', `schools-service/schools/leaves/${id}`, payload, true)\n            .then((res) => {\n                if (res) {\n                    dispatch(setMessage(res?.message));\n                    successCB && successCB(res);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(setMessage(err?.data?.message));\n            });\n    } catch (error) {\n        dispatch(setMessage(error?.data?.message));\n        console.log(error);\n    }\n};\n\nconst deleteLeave = (id, successCB) => (dispatch) => {\n    try {\n        http(process.env.REACT_APP_ROOT_URL_SCHOOL, 'DELETE', `schools-service/schools/leaves/${id}`, true)\n            .then((res) => {\n                dispatch(setMessage('Leave deleted successfully'));\n                successCB && successCB(res);\n            })\n            .catch((err) => {\n                dispatch(setMessage(err?.data?.message));\n                console.log(err);\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getLeave = (id) => (dispatch) => {\n    dispatch(getLeaveStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_SCHOOL, 'GET', `schools-service/schools/leaves/${id}`, true)\n            .then((res) => {\n                const payload = {\n                    leaves: res\n                };\n                dispatch(getLeaveSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getLeaveError(err));\n                dispatch(setMessage(err?.message));\n            });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst getAllLeave = (id,rowsPerPage = 25, page = 1) => (dispatch, getState) => {\n    dispatch(getAllLeaveStart());\n    try {\n        http(process.env.REACT_APP_ROOT_URL_SCHOOL, 'GET', `schools-service/schools/${id}/leaves?pageNumber=${page}&pageSize=${rowsPerPage}`, true)\n            .then((res) => {\n                const payload = {\n                    allLeaves: res\n                };\n                dispatch(getAllLeaveSuccess(payload));\n            })\n            .catch((err) => {\n                dispatch(getAllLeaveError(err));\n                dispatch(setMessage(err?.message));\n            });\n    } catch (error) {\n        dispatch(getAllLeaveError('Something went wrong'));\n    }\n};\n\nexport { updateLeave, getAllLeave, addLeave, deleteLeave, getLeave };\n","import { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useTheme } from '@material-ui/styles';\n\nconst ErrorMsg = (props) => {\n    const { isError, setError, message } = props\n    const theme = useTheme();\n    return (\n\n        <Snackbar\n        anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n            open={isError}\n            autoHideDuration={3000}\n            onClose={() => setError(false)}>\n            <Alert onClose={() => setError(false)}\n                severity=\"error\" style={{ background: theme.palette.error.dark, color: '#fff' }}>\n                {message}\n            </Alert>\n        </Snackbar>\n\n    );\n}\nexport default ErrorMsg;","import React, { useState, useEffect } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/styles';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormProvider, RHFTextField, RHFSelect } from '../../../../components/hook-form';\nimport { useDispatch } from 'react-redux';\nimport { addLeave, updateLeave, getAllLeave } from '../../../../store/actions/LeaveActions';\nimport CircularProgressLoader from '../../../../ui-component/CircularProgressLoader';\nimport ErrorMsg from '../../../../ui-component/messages/ErrorMsg';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, TextField, Link, Divider } from '@material-ui/core';\nimport useStyles from '../../../DialogStyles';\n\nconst validationSchema = yup.object({\n    title: yup.string('Enter Title here').required('Title is required'),\n    description: yup.string('Enter Description here').required('Description is required'),\n    startDate: yup.string('Enter Start Date here').required('Start Date is required'),\n    endDate: yup.string('Enter End Date here').required('End Date is required')\n});\n\nexport default function AddUpdateLeaves(props) {\n    const { isOpen, setOpen, isError, setError, isEditData, id } = props;\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        title: isEditData?.title || '',\n        description: isEditData?.description || '',\n        startDate: isEditData?.startDate || '',\n        endDate: isEditData?.endDate || ''\n    };\n\n    const methods = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(validationSchema),\n        defaultValues: initialValues\n    });\n    const { reset, handleSubmit } = methods;\n\n    const handlePopupClose = () => {\n        setOpen(false);\n        reset();\n    };\n\n    const onSubmit = async (data) => {\n        const payload = {\n            title: data?.title,\n            description: data?.description,\n            startDate: data?.startDate,\n            endDate: data?.endDate\n        };\n        if (isEditData) {\n            dispatch(\n                updateLeave(payload, isEditData.id, () => {\n                    dispatch(getAllLeave(isEditData.schoolId));\n                })\n            );\n            handlePopupClose();\n        } else {\n            dispatch(\n                addLeave(payload, id, () => {\n                    dispatch(getAllLeave(id));\n                })\n            );\n            handlePopupClose();\n        }\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                onClose={(_, reason) => {\n                    if (reason !== 'backdropClick') {\n                        handlePopupClose();\n                    }\n                }}\n                classes={{ paper: classes.dialog }}\n            >\n                <DialogTitle className={classes.dialogTitle}>\n                    <div className={classes.dialogTitleChild}>\n                        <Typography style={{ fontSize: '20px' }}>{!isEditData ? 'Add Leave' : 'Update Leave'}</Typography>\n                        <Link to=\"#\" onClick={handlePopupClose}>\n                            <CloseIcon className={classes.closeIcon} />\n                        </Link>\n                    </div>\n                </DialogTitle>\n                <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <label>\n                                    Title <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"title\" placeholder=\"Title here\" autoFocus />\n                                <br /> <br />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label>\n                                    Description <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField name=\"description\" placeholder=\"Description here\" className={classes.textField} /> <br />{' '}\n                                <br />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label className={classes.label}>\n                                    Start Date <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField type=\"date\" name=\"startDate\" placeholder=\"Start Date\" className={classes.textField} /> <br />{' '}\n                                <br />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label className={classes.label}>\n                                    End Date <span className={classes.mandatory}>*</span>\n                                </label>\n                                <RHFTextField type=\"date\" name=\"endDate\" placeholder=\"End Date\" className={classes.textField} />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <Divider style={{ marginTop: 15 }} />\n                    <DialogActions className={classes.dialogAction}>\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonCancel} onClick={handlePopupClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" type=\"submit\" className={classes.buttonSubmit}>\n                            {!isEditData ? 'Add' : 'Update'}\n                        </Button>\n                    </DialogActions>\n                </FormProvider>\n            </Dialog>\n            <span className={classes.loader}>{isLoading ? CircularProgressLoader() : ''}</span>\n\n            <ErrorMsg isError={isError} setError={setError} message={'Something went wrong !'} />\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllLeave, deleteLeave } from '../../../store/actions/LeaveActions';\nimport AddUpdateLeaves from './addUpdate-school-leaves';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    IconButton,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    OutlinedInput,\n    InputAdornment\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport AddIcon from '@material-ui/icons/Add';\nimport SchoolIcon from '@material-ui/icons/School';\nimport { IconSearch } from '@tabler/icons';\nimport useStyles from '../../ViewTableStyles';\nimport ConfirmDialog from '../../../ui-component/ConfirmDialog/ConfirmDialog';\nimport useUserRole from '../../../hooks/useUserRole';\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover\n        }\n    }\n}))(TableRow);\n\nconst SchoolsLeaves = (props) => {\n    const classes = useStyles();\n    useUserRole({ roleList: ['ADMIN', 'SCHOOL_ADMIN','SUPER_ADMIN'] });\n    const dispatch = useDispatch();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(25);\n    const [addEditLeavePopup, setAddEditLeavePopup] = useState(false);\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: '',\n        subTitle: ''\n    });\n    const [isLeaveUpdateData, setLeaveUpdateData] = useState(null);\n\n    const { allLeaves } = useSelector((state) => state?.leave);\n    const newData = allLeaves?.content;\n\n    const handleDeleteLeave = async (id) => {\n        dispatch(\n            deleteLeave(id, () => {\n                dispatch(getAllLeave(props?.id, rowsPerPage, page + 1));\n            })\n        );\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        });\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n    };\n\n    const handleLeaves = (id) => {\n        setAddEditLeavePopup(true);\n        setLeaveUpdateData(id);\n    };\n\n    useEffect(() => {\n        dispatch(getAllLeave(props?.id, rowsPerPage, page + 1));\n    }, [props?.id,rowsPerPage,page]);\n\n    return (\n        <>\n            <div className={classes.titleContainer}>\n                <SchoolIcon className={classes.viewIcon} />\n                <span className={classes.pageTitle}>&nbsp; Schools Leaves </span>\n            </div>\n            <Paper elevation={5} className={classes.root}>\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ boxShadow: '0 0.5em 0.5em 0.1em #68c2d9' }}\n                        onClick={() => {\n                            setAddEditLeavePopup(true);\n                            setLeaveUpdateData(null);\n                        }}\n                    >\n                        <AddIcon /> Leaves\n                    </Button>\n                </div>\n                <TableContainer className={classes.tableContainer}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead className={classes.tableHeaderCell}>\n                            <StyledTableRow>\n                                <TableCell> Title </TableCell>\n                                <TableCell> Description </TableCell>\n                                <TableCell> Start Date </TableCell>\n                                <TableCell> End Date </TableCell>\n                                <TableCell align=\"right\"> Action </TableCell>\n                            </StyledTableRow>\n                        </TableHead>\n                        {!newData ? (\n                            <caption style={{ textAlign: 'center' }}>Sorry! No data available</caption>\n                        ) : (\n                            <TableBody>\n                                {newData?.map((row, index) => (\n                                    <StyledTableRow key={index}>\n                                        <TableCell> {row.title} </TableCell>\n                                        <TableCell> {row.description} </TableCell>\n                                        <TableCell> {row.startDate} </TableCell>\n                                        <TableCell> {row.endDate} </TableCell>\n\n                                        <TableCell align=\"right\">\n                                            <IconButton style={{ cursor: 'pointer' }} onClick={() => handleLeaves(row)}>\n                                                <EditIcon color=\"primary\" />\n                                            </IconButton>\n                                            <IconButton\n                                                onClick={() => {\n                                                    setConfirmDialog({\n                                                        isOpen: true,\n                                                        title: 'Delete Leave',\n                                                        subTitle: 'Are you sure you want to delete this school leave.',\n                                                        onConfirm: () => {\n                                                            handleDeleteLeave(row.id);\n                                                        }\n                                                    });\n                                                }}\n                                            >\n                                                <DeleteForeverIcon color=\"error\" style={{ cursor: 'pointer' }} />\n                                            </IconButton>\n                                        </TableCell>\n                                    </StyledTableRow>\n                                ))}\n                            </TableBody>\n                        )}\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[25, 50, 100]}\n                    component=\"div\"\n                    count={allLeaves?.totalElements || 0}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                    sx={{\n                        '.MuiTablePagination-displayedRows': {\n                            marginBottom: 0\n                        },\n                        '.MuiTablePagination-selectLabel': {\n                            marginBottom: 0\n                        }\n                    }}\n                />\n            </Paper>\n            {addEditLeavePopup && (\n                <AddUpdateLeaves isOpen={addEditLeavePopup} setOpen={setAddEditLeavePopup} id={props.id} isEditData={isLeaveUpdateData} />\n            )}\n            {confirmDialog && <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />}\n        </>\n    );\n};\n\nexport default SchoolsLeaves;\n"],"sourceRoot":""}